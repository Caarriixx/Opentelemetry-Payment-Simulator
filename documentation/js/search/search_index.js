var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AccountComponent.html",[0,0.573,1,0.793]],["body/components/AccountComponent.html",[0,0.638,1,1.005,2,1.123,3,0.181,4,0.114,5,0.765,6,1.079,7,0.765,8,0.765,9,0.151,10,1.532,11,1.895,12,2.354,13,0.765,14,2.896,15,0.03,16,2.331,17,1.997,18,2.204,19,1.214,20,0.964,21,0.829,22,1.776,23,3.598,24,1.292,25,1.712,26,3.598,27,1.214,28,2.896,29,0.221,30,0.513,31,3.598,32,3.598,33,3.598,34,3.437,35,3.598,36,1.04,37,4.095,38,3.003,39,4.095,40,4.095,41,2.68,42,1.706,43,3.598,44,0.522,45,1.339,46,1.992,47,2.682,48,1.938,49,1.471,50,2.354,51,1.86,52,1.523,53,2.896,54,0.829,55,0.917,56,0.731,57,0.768,58,1.826,59,1.581,60,1.91,61,1.826,62,1.826,63,1.826,64,1.826,65,2.896,66,4.095,67,1.043,68,1.826,69,1.826,70,1.26,71,1.363,72,1.363,73,1.471,74,1.842,75,1.56,76,1.123,77,1.429,78,1.56,79,1.214,80,2.206,81,1.992,82,2.062,83,1.56,84,1.826,85,2.559,86,2.896,87,1.826,88,4.465,89,2.896,90,2.896,91,2.896,92,1.826,93,1.078,94,1.826,95,1.826,96,0.704,97,0.296,98,1.079,99,0.765,100,0.829,101,0.983,102,1.195,103,1.079,104,1.826,105,0.765,106,1.079,107,1.826,108,1.826,109,1.339,110,1.826,111,1.826,112,1.079,113,1.195,114,1.079,115,1.826,116,1.826,117,1.931,118,1.826,119,0.114,120,0.176,121,0.708,122,2.896,123,2.43,124,1.842,125,1.895,126,1.826,127,1.826,128,1.532,129,1.339,130,2.639,131,1.826,132,1.826,133,1.746,134,1.826,135,0.894,136,1.826,137,2.124,138,1.826,139,1.532,140,1.532,141,1.826,142,1.532,143,1.712,144,1.339,145,3.02,146,1.826,147,1.826,148,3.003,149,1.826,150,1.826,151,1.826,152,1.195,153,1.532,154,1.826,155,1.826,156,1.826,157,1.532,158,1.532,159,1.339,160,1.339,161,1.079,162,1.339,163,1.826,164,2.896,165,2.345,166,1.826,167,2.896,168,2.43,169,4.751,170,2.158,171,1.634,172,1.826,173,3.598,174,1.826,175,1.079,176,1.826,177,1.826,178,1.079,179,0.765,180,1.826,181,1.195,182,2.206,183,1.339,184,1.826,185,1.826,186,1.826,187,1.826,188,1.826,189,1.776,190,1.826,191,1.634,192,1.532,193,1.826,194,1.826,195,1.826,196,1.826,197,1.826,198,3.598,199,3.02,200,1.826,201,1.826,202,2.896,203,1.826,204,1.826,205,1.826,206,1.826,207,1.826,208,1.826,209,1.826,210,1.532,211,1.532,212,1.532,213,1.826,214,0.608,215,1.826,216,1.826,217,1.826,218,1.826,219,1.826,220,1.826,221,1.826,222,1.826,223,1.532,224,1.339,225,1.826,226,1.826,227,1.826,228,1.079,229,1.826,230,1.826,231,2.43,232,2.124,233,3.003,234,3.003,235,2.896,236,2.896,237,2.124,238,1.712,239,1.56,240,2.896,241,2.896,242,2.896,243,2.896,244,2.896,245,2.896,246,2.896,247,1.826,248,1.895,249,2.896,250,1.826,251,1.826,252,1.895,253,2.354,254,1.339,255,1.339,256,2.354,257,1.195,258,2.354,259,1.195,260,3.275,261,2.68,262,2.68,263,1.712,264,2.124,265,1.339,266,2.354,267,2.124,268,2.124,269,1.826,270,1.826,271,1.826,272,1.826,273,1.826,274,1.339,275,2.43,276,1.532,277,0.983,278,0.522,279,1.214,280,1.214,281,0.765,282,1.717,283,0.765,284,1.826,285,0.765,286,0.564,287,0.765,288,0.484,289,0.765,290,0.608,291,0.765,292,0.656,293,0.765,294,0.656,295,0.765,296,0.522,297,0.765,298,0.656,299,0.765,300,0.522,301,0.765,302,0.765,303,0.013,304,0.013]],["title/modules/AccountModule.html",[305,1.253,306,1.911]],["body/modules/AccountModule.html",[1,1.637,3,0.276,4,0.276,9,0.23,15,0.03,21,1.548,22,2.67,96,0.739,97,0.715,99,1.849,100,2.004,119,0.276,120,0.425,179,1.849,239,2.376,278,1.262,303,0.024,304,0.024,305,1.71,306,3.815,307,2.004,308,2.608,309,3.198,310,2.177,311,2.177,312,3.151,313,3.702,314,3.702,315,3.702,316,3.198,317,2.608,318,4.411,319,2.914,320,3.54,321,4.411,322,3.235,323,3.54,324,4.54,325,1.849,326,3.702,327,3.702,328,4.411,329,2.376,330,3.702,331,2.177]],["title/injectables/AccountService.html",[46,1.355,332,0.857]],["body/injectables/AccountService.html",[3,0.171,4,0.171,9,0.143,15,0.03,18,2.273,29,0.331,30,0.697,36,1.412,42,2.275,44,0.783,46,1.649,48,2.48,49,1.994,52,1.641,54,1.317,55,1.029,56,0.716,57,1.221,59,1.848,60,1.994,70,1.414,71,1.775,72,1.775,73,1.808,75,2.118,76,1.525,77,1.941,78,2.118,79,2.327,80,2.711,81,2.536,82,1.952,83,2.118,96,0.672,97,0.444,101,1.474,117,1.785,119,0.171,120,0.264,121,1.061,133,1.646,135,1.646,143,1.617,165,1.35,170,1.786,179,1.649,214,0.911,228,1.617,303,0.017,304,0.017,332,1.043,333,1.243,334,2.296,335,4.604,336,4.604,337,4.604,338,5.034,339,4.145,340,4.604,341,3.933,342,5.034,343,5.034,344,5.034,345,2.296,346,2.736,347,2.736,348,3.933,349,1.785,350,2.736,351,2.325,352,3.933,353,2.976,354,2.736,355,3.301,356,2.736,357,3.282,358,2.736,359,2.736,360,1.525,361,2.573,362,2.573,363,3.301,364,3.301,365,3.933,366,3.301,367,2.736,368,4.195,369,2.736,370,3.301,371,3.933,372,2.736,373,2.736,374,2.736,375,2.006,376,1.617,377,1.617,378,2.296,379,2.296,380,1.35,381,1.243,382,1.93,383,2.006,384,2.736,385,4.475,386,2.296,387,3.301,388,3.864,389,1.617,390,2.736,391,2.296,392,2.736,393,3.377,394,2.48,395,3.377,396,3.013,397,3.377,398,2.736,399,2.736,400,3.013,401,2.736,402,3.013,403,3.933,404,1.786,405,2.736,406,1.79,407,2.736,408,2.736,409,3.933,410,2.884,411,3.933,412,2.736,413,2.736,414,0.982,415,2.736,416,2.736]],["title/components/AppComponent.html",[0,0.573,286,0.998]],["body/components/AppComponent.html",[0,0.911,1,1.115,2,1.762,3,0.211,4,0.211,5,1.411,6,1.989,7,1.411,8,1.411,9,0.176,13,1.411,15,0.03,16,2.669,17,2.287,19,1.905,20,1.512,21,1.3,24,1.847,25,2.686,27,1.905,29,0.407,30,0.805,44,0.963,52,1.205,54,0.963,55,0.992,56,0.61,57,0.892,93,1.417,96,0.777,97,0.737,99,1.411,100,2.336,103,3.582,119,0.211,120,0.324,121,1.305,276,4.317,278,0.963,279,2.309,280,1.905,281,1.411,282,2.309,283,1.411,285,1.411,286,1.7,287,1.411,288,0.892,289,1.411,290,1.12,291,1.411,292,1.978,293,1.411,294,1.978,295,1.411,296,0.963,297,1.411,298,1.978,299,1.411,300,0.963,301,1.411,302,1.411,303,0.02,304,0.02,319,1.812,320,2.202,361,2.973,362,2.973,381,2.064,417,2.824,418,3.041,419,5.144,420,5.144,421,4.543,422,3.365,423,4.543,424,3.813,425,3.813,426,2.824,427,2.202,428,1.812,429,3.365,430,2.468,431,3.365,432,3.365,433,3.365,434,4.039,435,3.813,436,3.365,437,3.813,438,3.813,439,3.813,440,4.543,441,5.508,442,3.813,443,3.813,444,3.813,445,3.813,446,3.813,447,4.543,448,3.365,449,3.365,450,2.202,451,2.468]],["title/modules/AppModule.html",[305,1.253,452,2.115]],["body/modules/AppModule.html",[1,1.484,3,0.226,4,0.226,9,0.188,15,0.03,21,1.36,22,2.627,24,1.293,46,2.533,49,2.17,96,0.802,97,0.584,98,2.129,99,1.51,112,2.129,117,1.396,119,0.226,120,0.347,133,1.112,239,1.94,278,1.031,286,1.865,288,1.603,296,1.729,300,1.729,303,0.021,304,0.021,305,1.396,306,3.573,307,1.636,308,2.129,309,2.811,310,1.778,311,2.627,312,1.94,316,2.811,317,2.129,319,2.561,325,1.51,376,2.129,418,2.811,427,2.357,428,1.94,430,2.642,452,4.402,453,3.023,454,3.023,455,3.023,456,3.573,457,3.255,458,3.602,459,5.322,460,3.602,461,3.023,462,3.602,463,3.602,464,3.99,465,3.602,466,4.754,467,3.023,468,3.023,469,3.487,470,3.602,471,3.023,472,3.023,473,3.023,474,3.023,475,2.642,476,2.129,477,3.602,478,3.023]],["title/modules/AppRoutingModule.html",[305,1.253,456,1.911]],["body/modules/AppRoutingModule.html",[0,1.056,1,1.199,3,0.235,4,0.235,9,0.196,15,0.03,18,1.851,20,1.248,21,1.073,93,0.851,96,0.79,97,0.608,100,1.704,117,1.454,119,0.306,120,0.362,124,1.454,133,1.675,135,1.158,168,3.148,214,1.248,288,1.295,290,1.625,296,1.397,300,1.397,303,0.021,304,0.021,307,1.704,311,1.851,312,2.02,319,2.63,320,3.195,376,2.886,414,1.753,418,2.886,426,4.556,427,2.454,428,2.02,456,2.886,464,4.556,467,3.148,468,4.098,471,3.148,472,3.148,473,3.148,479,3.751,480,3.751,481,2.751,482,2.886,483,3.148,484,3.581,485,4.883,486,4.883,487,4.883,488,3.751,489,6.112,490,3.751,491,3.552,492,3.751,493,3.751,494,3.751,495,3.148,496,3.148,497,3.751,498,2.751,499,3.751,500,2.751,501,3.751,502,3.751,503,3.148,504,3.751,505,3.751,506,3.148,507,3.148,508,3.751,509,3.751]],["title/injectables/AuthService.html",[332,0.857,482,1.911]],["body/injectables/AuthService.html",[3,0.311,4,0.242,9,0.201,15,0.03,29,0.467,30,0.881,36,1.785,42,2.086,44,1.103,50,3.599,51,2.639,52,1.458,54,1.422,55,0.959,56,0.78,57,1.318,59,1.283,67,0.808,71,1.283,72,1.283,81,1.616,96,0.759,97,0.625,113,2.523,114,2.279,119,0.242,120,0.372,121,1.495,124,1.495,238,2.938,277,2.076,303,0.022,304,0.022,332,1.318,333,1.751,357,3.252,375,4.261,376,2.279,377,2.279,380,1.903,381,1.751,382,2.083,482,2.938,491,2.523,500,3.645,510,2.827,511,5.5,512,4.97,513,3.236,514,4.97,515,4.97,516,3.435,517,3.855,518,4.97,519,4.97,520,4.171,521,3.855,522,3.855,523,3.236,524,3.855,525,2.523,526,3.236,527,6.157,528,2.827,529,3.236,530,3.236,531,3.855,532,3.855,533,3.855,534,4.97,535,4.171,536,3.855,537,3.855,538,4.97,539,4.171,540,3.855]],["title/interfaces/Balance.html",[79,1.355,541,0.925]],["body/interfaces/Balance.html",[3,0.292,4,0.292,9,0.243,15,0.029,29,0.564,30,0.99,55,0.898,56,0.804,67,1.331,70,1.234,73,2.282,75,2.507,76,1.805,77,2.298,78,2.507,79,2.735,80,3.422,82,2.409,83,2.507,119,0.35,303,0.025,304,0.025,349,2.529,541,1.599,542,2.298,543,3.414]],["title/components/DepositComponent.html",[0,0.573,288,0.857]],["body/components/DepositComponent.html",[0,0.696,1,0.514,2,1.25,3,0.202,4,0.131,5,0.878,6,1.239,7,0.878,8,0.878,9,0.109,11,2.11,12,2.572,13,0.878,15,0.03,16,2.417,17,2.071,18,2.179,19,1.352,20,1.308,21,0.923,22,1.94,24,1.411,25,1.906,27,1.352,29,0.391,30,0.571,36,1.158,41,2.888,42,1.158,44,0.6,45,1.537,46,2.11,52,1.435,54,0.923,55,0.851,56,0.675,57,0.855,59,1.469,60,1.585,67,0.439,70,1.17,71,1.073,72,1.469,74,1.25,76,1.524,79,1.352,93,0.892,96,0.635,97,0.34,98,1.239,99,0.878,100,0.952,101,1.129,102,1.371,103,3.099,117,1.847,119,0.131,120,0.202,121,0.812,124,1.25,133,1.213,135,1.362,143,1.239,144,1.537,170,0.952,189,2.797,214,1.586,232,2.365,233,2.365,234,2.365,237,2.365,238,1.239,252,1.371,253,2.11,254,1.537,255,1.537,256,3.118,257,1.371,258,2.572,259,2.11,260,3.691,261,2.11,262,2.888,263,1.239,264,2.883,265,1.537,266,3.118,267,1.537,268,2.883,274,3.691,277,1.129,278,0.6,279,1.352,280,1.352,281,0.878,282,1.85,283,0.878,285,0.878,286,0.647,287,0.878,288,1.17,289,0.878,290,0.698,291,0.878,292,0.753,293,0.878,294,0.753,295,0.878,296,0.6,297,0.878,298,0.753,299,0.878,300,0.6,301,0.878,302,0.878,303,0.014,304,0.014,323,1.371,325,1.352,329,1.737,331,1.034,349,1.25,360,0.812,382,1.998,394,2.117,404,0.952,414,1.411,428,1.129,450,1.371,451,1.537,469,2.883,495,3.704,544,1.759,545,3.931,546,3.225,547,3.931,548,3.999,549,3.704,550,2.706,551,3.237,552,4.4,553,3.225,554,2.096,555,2.706,556,2.096,557,1.759,558,1.759,559,2.324,560,2.096,561,2.096,562,2.096,563,3.299,564,3.299,565,2.365,566,2.096,567,1.759,568,1.759,569,1.759,570,2.096,571,2.096,572,2.096,573,2.096,574,2.096,575,2.572,576,2.096,577,2.096,578,2.706,579,1.759,580,1.759,581,1.759,582,2.096,583,2.096,584,3.299,585,3.299,586,3.299,587,1.759,588,1.371,589,1.759,590,1.759,591,1.759,592,2.096,593,2.096,594,2.096,595,1.759,596,1.759,597,1.537,598,1.759,599,2.096,600,2.096,601,2.096,602,3.299,603,2.096,604,1.759,605,3.704,606,1.759,607,2.096,608,1.759,609,3.299,610,1.759,611,1.759,612,2.096,613,1.759,614,2.706,615,2.365,616,2.096,617,2.706,618,2.706,619,3.225,620,2.706,621,2.706,622,3.225,623,4.414,624,3.225,625,2.096,626,2.706,627,2.706,628,2.706,629,2.706,630,2.706,631,2.706,632,2.365,633,2.706,634,2.706,635,2.706,636,1.759,637,1.759,638,2.706,639,2.706,640,1.759,641,1.759,642,3.704,643,1.759,644,1.759,645,1.759,646,3.299,647,3.299,648,1.759,649,1.759,650,1.759,651,2.11,652,2.706,653,1.759,654,1.759,655,1.537,656,1.759,657,1.759,658,1.537,659,1.759,660,1.759,661,3.299,662,2.706,663,2.706,664,1.537,665,2.706,666,1.759,667,1.759,668,1.759,669,1.759,670,1.759,671,1.759,672,2.706,673,1.759,674,1.759,675,1.759,676,1.759,677,1.759,678,1.759,679,1.759,680,1.759,681,3.299,682,1.537,683,1.759,684,2.706,685,1.759,686,1.759]],["title/modules/DepositModule.html",[305,1.253,687,2.115]],["body/modules/DepositModule.html",[1,1.575,3,0.284,4,0.284,9,0.237,15,0.03,21,1.575,22,2.717,96,0.764,97,0.736,99,1.903,100,2.061,119,0.284,120,0.438,239,2.445,278,1.299,288,1.701,303,0.024,304,0.024,305,1.76,307,2.061,308,2.683,309,3.254,310,2.24,311,2.24,312,2.445,316,3.254,317,2.683,319,2.965,320,3.602,427,2.97,687,4.285,688,3.809,689,4.539,690,4.539,691,4.539]],["title/injectables/DepositService.html",[332,0.857,692,2.371]],["body/injectables/DepositService.html",[3,0.301,4,0.301,9,0.25,15,0.03,44,1.373,52,1.272,54,1.373,55,0.926,56,0.644,57,1.272,96,0.735,97,0.778,119,0.301,120,0.463,121,1.86,303,0.025,304,0.025,332,1.509,333,2.179,357,2.836,375,4.602,376,2.836,377,2.836,380,2.368,381,2.179,500,4.173,513,4.026,692,4.173,693,4.026,694,4.798]],["title/components/DevComponent.html",[0,0.573,290,1.076]],["body/components/DevComponent.html",[0,1.021,1,1.046,2,2.053,3,0.267,4,0.267,5,1.786,7,1.786,8,1.786,9,0.222,13,1.786,15,0.03,16,2.769,17,2.372,19,2.219,20,1.762,21,1.219,27,2.219,55,1.021,93,0.967,96,0.516,97,0.691,119,0.267,120,0.411,135,1.634,278,1.219,279,2.219,280,2.219,281,1.786,282,2.526,283,1.786,285,1.786,286,1.315,287,1.786,288,1.129,289,1.786,290,2.006,291,1.786,292,1.53,293,1.786,294,1.53,295,1.786,296,1.219,297,1.786,298,1.53,299,1.786,300,1.219,301,1.786,302,1.786,303,0.023,304,0.023,496,4.443,695,3.575,696,5.294,697,3.13,698,5.294,699,4.443,700,5.294]],["title/components/FooterComponent.html",[0,0.573,292,1.161]],["body/components/FooterComponent.html",[0,1.005,1,1.011,2,2.01,3,0.258,4,0.258,5,1.726,7,1.726,8,1.726,9,0.215,13,1.726,15,0.029,16,2.756,17,2.361,19,2.173,20,1.725,21,1.178,27,2.173,55,1,93,1.287,96,0.499,97,0.668,119,0.258,120,0.397,278,1.178,279,2.173,280,2.173,281,1.726,282,2.496,283,1.726,285,1.726,286,1.271,287,1.726,288,1.092,289,1.726,290,1.371,291,1.726,292,2.138,293,1.726,294,1.479,295,1.726,296,1.178,297,1.726,298,1.479,299,1.726,300,1.178,301,1.726,302,1.726,303,0.023,304,0.023,361,3.392,362,3.392,434,3.801,435,4.35,442,4.35,443,4.35,444,4.35,445,4.35,446,4.35,697,3.064,701,3.456,702,5.183,703,5.183,704,5.183,705,4.996,706,5.183]],["title/components/HeaderComponent.html",[0,0.573,294,1.161]],["body/components/HeaderComponent.html",[0,1.016,1,1.034,2,2.039,3,0.264,4,0.264,5,1.766,7,1.766,8,1.766,9,0.22,13,1.766,15,0.03,16,2.765,17,2.369,19,2.204,20,1.75,21,1.505,24,2.058,27,2.204,55,1.014,93,1.301,96,0.637,97,0.683,119,0.264,120,0.406,278,1.206,279,2.204,280,2.204,281,1.766,282,2.516,283,1.766,285,1.766,286,1.301,287,1.766,288,1.117,289,1.766,290,1.403,291,1.766,292,1.513,293,1.766,294,2.155,295,1.766,296,1.206,297,1.766,298,1.513,299,1.766,300,1.206,301,1.766,302,1.766,303,0.023,304,0.023,430,3.091,434,3.857,658,3.857,697,3.109,707,3.537,708,5.259,709,5.259]],["title/classes/JwtResponse.html",[120,0.312,525,2.115]],["body/classes/JwtResponse.html",[3,0.298,4,0.298,9,0.248,15,0.029,29,0.576,30,1.003,52,1.603,56,0.87,57,1.719,67,1.358,119,0.298,120,0.459,303,0.025,304,0.025,525,3.705,539,5.074,710,3.49,711,5.252,712,3.994,713,3.574,714,4.759,715,4.759,716,4.759]],["title/interfaces/LogMessage.html",[353,1.911,541,0.925]],["body/interfaces/LogMessage.html",[3,0.305,4,0.305,9,0.254,15,0.029,29,0.589,30,1.017,56,0.819,67,1.365,76,2.444,119,0.305,303,0.025,304,0.025,349,2.366,351,3.727,353,3.393,541,1.393,542,2.402,713,3.727,717,4.085]],["title/components/LoginComponent.html",[0,0.573,296,0.925]],["body/components/LoginComponent.html",[0,0.591,1,0.4,2,1.024,3,0.166,4,0.102,5,0.683,6,0.963,7,0.683,8,0.683,9,0.085,11,1.729,12,2.181,13,0.683,15,0.03,16,2.256,17,1.932,19,1.108,20,1.649,21,0.756,24,1.197,25,1.971,27,1.108,29,0.197,30,0.468,36,0.949,41,2.509,42,1.838,44,0.756,46,1.993,48,2.271,49,1.514,50,2.181,51,1.742,52,1.58,54,1.097,55,0.871,56,0.76,57,1.313,59,1.403,60,1.779,67,1.215,71,1.791,72,1.791,74,1.024,76,2.271,77,1.645,81,0.683,93,0.37,96,0.685,97,0.429,98,0.963,99,0.683,100,0.74,102,1.066,103,1.562,112,0.963,113,1.066,114,0.963,117,1.292,119,0.102,120,0.157,121,0.632,124,1.024,125,1.729,133,1.693,135,1.393,137,1.195,148,1.938,152,1.066,153,1.367,161,1.971,165,1.304,170,0.74,178,0.963,179,1.108,214,1.704,224,1.195,248,2.509,252,1.066,253,1.066,256,1.066,257,1.066,258,1.729,259,1.066,261,1.066,262,1.729,263,1.562,266,1.066,275,1.367,277,0.877,278,0.466,279,1.108,280,1.108,281,0.683,282,1.608,283,0.683,285,0.683,286,0.503,287,0.683,288,0.432,289,0.683,290,0.542,291,0.683,292,0.585,293,0.683,294,0.585,295,0.683,296,1.097,297,0.683,298,0.585,299,0.683,300,0.466,301,0.683,302,0.683,303,0.012,304,0.012,322,1.195,331,0.804,351,2.928,353,3.298,355,2.798,360,1.024,379,1.367,382,0.683,389,0.963,394,1.423,396,1.729,400,1.066,402,1.729,414,0.585,418,1.971,428,0.877,450,1.729,457,2.066,478,1.367,482,2.669,483,1.367,484,1.938,491,3.899,498,1.195,516,2.669,551,2.813,559,2.492,575,2.509,588,1.729,597,3.633,632,2.813,651,1.066,664,2.445,682,1.938,697,0.963,699,2.218,713,3.026,718,1.367,719,3.334,720,3.334,721,2.642,722,4.755,723,4.216,724,3.334,725,3.334,726,3.334,727,3.334,728,2.813,729,2.642,730,2.642,731,1.629,732,3.334,733,3.219,734,3.334,735,2.642,736,2.642,737,3.334,738,1.629,739,1.629,740,2.218,741,1.629,742,2.642,743,1.629,744,1.629,745,1.629,746,1.629,747,1.629,748,1.629,749,2.642,750,1.629,751,3.241,752,1.629,753,1.629,754,1.629,755,1.629,756,1.629,757,1.629,758,1.629,759,1.629,760,1.629,761,1.629,762,3.835,763,1.629,764,1.367,765,1.367,766,1.629,767,1.629,768,1.629,769,3.334,770,2.642,771,1.367,772,1.367,773,1.367,774,1.367,775,1.367,776,1.367,777,1.195,778,1.367,779,1.938,780,2.642,781,1.629,782,2.642,783,1.629,784,1.629,785,1.629,786,3.092,787,3.092,788,2.798,789,2.642,790,1.367,791,1.367,792,1.629,793,1.629,794,1.629,795,1.629,796,1.629,797,2.813,798,1.629,799,1.629,800,1.629,801,1.938,802,2.445,803,1.938,804,1.938,805,3.334,806,2.642,807,2.642,808,2.813,809,1.629,810,1.629,811,1.729,812,1.629,813,2.642,814,1.195,815,2.642,816,1.629,817,2.642,818,1.629,819,1.629,820,1.629,821,2.642,822,2.642,823,2.642,824,2.642,825,1.629,826,1.629,827,1.629,828,1.629,829,1.629,830,1.629,831,1.629,832,3.835,833,1.629,834,1.367,835,1.629,836,1.629,837,1.629,838,3.334,839,1.629,840,1.629,841,1.629,842,1.629,843,1.629,844,1.367,845,1.629,846,1.367,847,1.629,848,1.367,849,1.629,850,1.629,851,3.835,852,2.642,853,2.642,854,1.629,855,1.629]],["title/classes/LoginInfo.html",[120,0.312,516,1.911]],["body/classes/LoginInfo.html",[3,0.291,4,0.291,9,0.242,15,0.029,29,0.562,30,0.988,44,1.327,52,1.586,54,1.327,55,0.895,56,0.803,57,1.23,67,1.394,76,2.527,119,0.291,120,0.447,303,0.025,304,0.025,516,3.296,710,3.401,713,3.752,848,3.892,856,5.207,857,3.892,858,5.576,859,5.576,860,4.637,861,4.637]],["title/modules/MaterialModule.html",[24,1.161,305,1.253]],["body/modules/MaterialModule.html",[3,0.241,4,0.241,9,0.201,15,0.03,21,1.421,22,1.9,24,2.321,96,0.797,97,0.624,99,1.613,119,0.241,120,0.371,179,1.613,239,2.073,278,1.101,303,0.022,304,0.022,305,1.492,307,1.748,308,2.275,309,2.275,310,1.9,311,1.9,312,2.96,316,2.935,317,2.275,319,2.674,322,2.823,323,3.249,324,4.613,325,1.613,326,3.23,327,3.23,481,3.641,507,3.23,764,4.167,862,3.23,863,3.23,864,3.23,865,5.494,866,5.494,867,3.849,868,5.496,869,3.849,870,5.496,871,3.849,872,5.496,873,3.849,874,5.496,875,3.849,876,5.496,877,3.849,878,5.496,879,3.849,880,3.849,881,5.496,882,3.849,883,5.496,884,3.849,885,5.496,886,3.849,887,3.849,888,3.23,889,3.23,890,3.23,891,3.849]],["title/components/NotificationComponent.html",[0,0.573,298,1.161]],["body/components/NotificationComponent.html",[0,0.945,1,0.888,2,1.849,3,0.227,4,0.227,5,1.517,7,1.517,8,1.517,9,0.189,13,1.517,15,0.03,16,2.702,17,2.314,19,1.999,20,1.587,21,1.035,27,1.999,29,0.438,30,0.845,36,1.712,38,4.158,42,2.036,44,1.035,47,3.323,48,2.569,49,2.036,52,1.414,54,1.035,55,1.029,56,0.486,57,0.959,59,1.204,60,1.299,71,1.204,72,1.204,73,1.299,93,1.211,96,0.714,97,0.587,106,2.139,109,2.654,112,2.139,119,0.227,120,0.349,121,1.403,125,3.12,158,3.037,160,2.654,161,2.139,162,2.654,171,1.643,178,2.139,192,3.037,228,2.139,278,1.035,279,1.999,280,1.999,281,1.517,282,2.377,283,1.517,285,1.517,286,1.117,287,1.517,288,0.959,289,1.517,290,1.204,291,1.517,292,1.299,293,1.517,294,1.299,295,1.517,296,1.035,297,1.517,298,2.036,299,1.517,300,1.035,301,1.517,302,1.517,303,0.021,304,0.021,331,1.786,697,2.819,888,3.037,889,3.037,890,3.037,892,3.037,893,4.769,894,4.769,895,5.334,896,3.618,897,4.769,898,3.618,899,4.769,900,3.618,901,3.618,902,3.618,903,3.618,904,3.618,905,3.618,906,3.618,907,3.618,908,3.618,909,3.618,910,1.949]],["title/interfaces/Payment.html",[93,0.734,541,0.925]],["body/interfaces/Payment.html",[3,0.236,4,0.236,9,0.196,15,0.03,29,0.456,30,0.867,56,0.821,67,0.788,70,1.747,73,2.067,74,1.897,82,2.475,85,3.295,93,1.11,96,0.456,105,1.577,119,0.341,133,1.777,135,1.777,171,2.925,175,2.225,182,3.214,189,2.945,191,2.925,214,1.916,303,0.022,304,0.022,325,1.577,349,2.475,360,1.897,404,2.222,414,2.329,476,2.225,541,1.556,542,1.857,910,2.635,911,2.462,912,2.76,913,2.462,914,2.462,915,2.462,916,3.905,917,3.588,918,3.588,919,3.588,920,2.892,921,3.201,922,3.588,923,3.588,924,3.588,925,2.225]],["title/components/PaymentComponent.html",[0,0.573,300,0.925]],["body/components/PaymentComponent.html",[0,0.491,1,0.308,2,0.826,3,0.133,4,0.079,5,0.527,6,0.743,7,0.527,8,0.527,9,0.066,11,1.394,12,1.814,13,0.527,15,0.03,16,2.071,17,1.774,18,1.368,19,0.893,20,1.216,21,0.609,22,1.368,24,0.996,25,1.259,27,0.893,29,0.258,30,0.377,36,0.765,38,2.395,41,2.136,42,1.312,44,0.359,45,0.921,46,1.664,47,2.279,48,1.759,49,1.172,50,1.814,51,1.483,52,1.479,54,0.609,55,0.816,56,0.694,57,0.565,59,1.408,60,1.666,67,0.832,70,1.372,71,1.408,72,1.544,73,1.426,74,1.798,75,1.493,76,1.539,77,1.368,78,1.493,79,2.071,80,2.139,81,1.774,82,1.726,83,1.493,85,1.147,93,1.053,96,0.613,97,0.204,98,0.743,99,0.527,100,0.967,101,0.677,102,0.822,103,2.502,105,1.532,106,0.743,109,0.921,112,0.743,113,0.822,114,0.743,117,1.417,119,0.079,120,0.121,121,0.487,123,1.054,124,1.641,125,0.822,129,0.921,130,0.921,133,1.627,135,1.225,143,2.161,144,0.921,152,2.136,159,3.265,160,0.921,161,1.93,162,0.921,165,0.62,170,2.395,171,1.483,175,1.259,178,0.743,179,0.893,181,0.822,182,1.493,183,2.395,189,2.602,191,0.571,211,1.054,214,1.834,223,1.054,224,0.921,228,0.743,232,1.562,233,1.562,234,1.562,237,1.562,238,0.743,248,0.822,252,0.822,253,1.394,254,0.921,255,0.921,256,2.391,257,0.822,258,1.814,259,1.394,260,2.912,261,1.394,262,2.136,263,0.743,264,1.562,265,0.921,266,2.391,267,0.921,268,2.033,274,2.912,277,0.677,278,0.359,279,0.893,280,0.893,281,0.527,282,1.369,283,0.527,285,0.527,286,0.388,287,0.527,288,0.333,289,0.527,290,0.418,291,0.527,292,0.451,293,0.527,294,0.451,295,0.527,296,0.359,297,0.527,298,0.451,299,0.527,300,0.934,301,0.527,302,0.527,303,0.009,304,0.009,323,0.822,325,1.664,329,2.398,330,1.054,331,1.804,349,1.539,351,2.347,360,0.826,370,1.054,382,2.071,388,2.327,389,0.743,394,1.759,404,1.259,414,1.426,418,1.639,428,0.677,450,0.822,451,0.921,469,2.033,474,1.054,476,1.639,481,1.562,484,0.921,498,0.921,548,3.067,549,2.74,550,1.787,551,2.395,552,3.552,555,1.787,557,1.787,558,1.054,559,2.838,563,2.327,564,2.327,565,1.562,567,1.054,568,1.054,569,1.054,575,1.814,578,2.327,579,1.054,580,1.054,581,1.054,584,1.787,585,1.787,586,1.787,587,1.054,588,1.814,589,1.054,590,1.054,591,1.054,595,1.054,596,1.054,597,0.921,598,1.054,602,2.74,604,1.054,605,2.74,606,1.054,608,1.054,609,2.327,610,1.054,611,1.054,613,1.054,614,2.327,615,2.395,617,1.787,618,1.787,620,1.787,621,2.74,626,1.787,627,1.787,628,1.787,629,2.327,630,2.327,631,2.327,632,1.562,633,1.787,634,2.327,635,1.787,636,1.054,637,1.054,638,1.787,639,1.787,640,1.054,641,1.054,642,2.74,643,1.054,644,1.054,645,1.054,646,2.327,647,3.332,648,1.054,649,1.054,650,1.054,651,2.598,652,3.332,653,1.054,654,1.054,655,0.921,656,1.054,657,1.054,658,0.921,659,1.054,660,1.054,661,2.327,662,1.787,663,1.787,664,1.562,665,1.787,666,1.787,667,1.054,668,1.054,669,1.054,670,1.054,671,1.054,672,1.787,673,1.054,674,1.054,675,1.054,676,1.054,677,1.054,678,1.054,679,1.054,680,1.054,681,2.327,682,0.921,683,1.054,684,1.787,685,1.054,686,1.054,733,1.054,740,1.054,751,1.394,771,1.054,772,1.054,773,1.054,774,1.054,775,1.054,776,1.054,777,0.921,778,1.054,786,0.921,797,1.562,801,0.921,802,1.562,803,0.921,804,0.921,808,0.921,811,0.822,814,1.562,834,1.054,844,1.054,910,0.677,913,3.035,914,0.822,915,0.822,916,1.394,920,0.743,921,0.822,926,1.054,927,2.772,928,2.13,929,2.772,930,3.265,931,2.772,932,2.772,933,2.772,934,3.655,935,3.265,936,2.13,937,1.256,938,1.256,939,1.256,940,1.256,941,1.256,942,1.256,943,1.256,944,1.256,945,1.256,946,1.256,947,1.256,948,1.256,949,1.256,950,1.256,951,1.256,952,1.256,953,2.13,954,2.13,955,2.13,956,1.256,957,1.256,958,1.256,959,1.256,960,1.256,961,1.256,962,1.256,963,1.256,964,1.256,965,1.256,966,1.256,967,1.256,968,1.256,969,1.256,970,1.256,971,1.256,972,1.256,973,1.256,974,1.256,975,1.054,976,1.256,977,1.256,978,2.13,979,1.256,980,2.13,981,2.13,982,1.256,983,1.787,984,1.256,985,1.054,986,1.256,987,3.265,988,1.256,989,1.256,990,1.256,991,2.13,992,1.256,993,1.256,994,1.256,995,2.13,996,2.13,997,2.13,998,1.256,999,4.451,1000,1.054,1001,1.256,1002,1.256,1003,1.787,1004,1.256,1005,1.256,1006,1.256,1007,1.256,1008,2.13,1009,1.256,1010,1.256,1011,1.256,1012,2.13,1013,1.256,1014,1.256,1015,3.265,1016,3.655,1017,3.552,1018,2.13,1019,3.265,1020,2.13,1021,1.256,1022,1.054,1023,2.327,1024,1.256,1025,1.256,1026,2.13,1027,1.787,1028,1.256,1029,1.256,1030,1.256,1031,1.256,1032,1.256,1033,2.13,1034,1.256,1035,1.256,1036,1.054,1037,0.921,1038,1.256,1039,1.054,1040,2.772,1041,1.256,1042,1.054,1043,1.256,1044,1.256,1045,1.256,1046,1.256,1047,1.256,1048,1.256,1049,1.256,1050,0.921,1051,1.256,1052,1.256,1053,1.256,1054,1.256,1055,1.256,1056,1.256,1057,1.256,1058,1.256,1059,1.256,1060,2.13,1061,1.256,1062,0.921,1063,1.256,1064,1.256,1065,2.13,1066,2.13,1067,1.256,1068,1.256,1069,1.256,1070,1.256,1071,1.256,1072,1.256,1073,1.256,1074,2.13,1075,2.13,1076,2.13]],["title/interfaces/PaymentMessage.html",[105,1.355,541,0.925]],["body/interfaces/PaymentMessage.html",[3,0.238,4,0.238,9,0.199,15,0.03,29,0.461,30,0.873,56,0.804,67,0.797,70,1.749,73,1.366,74,1.911,82,2.48,85,3.305,93,0.864,96,0.461,105,2.066,119,0.342,133,1.784,135,1.784,171,2.93,175,2.25,182,3.226,189,2.956,191,2.875,214,1.924,303,0.022,304,0.022,325,1.595,349,2.48,360,1.911,404,2.238,414,2.333,476,2.25,541,1.564,542,1.878,910,2.655,911,2.49,912,2.791,913,2.49,914,2.49,915,2.49,916,3.919,917,3.615,918,3.615,919,3.615,920,2.914,921,3.225,922,3.615,923,3.615,924,3.615,925,2.25]],["title/injectables/PaymentService.html",[47,1.741,332,0.857]],["body/injectables/PaymentService.html",[3,0.133,4,0.133,9,0.111,15,0.03,18,1.955,29,0.257,30,0.577,34,3.325,36,1.169,42,2.263,44,0.607,47,2.134,49,1.816,52,1.621,54,1.134,55,1.016,56,0.729,57,1.05,59,1.753,60,1.951,67,1.004,70,1.534,71,1.808,72,1.808,73,1.951,75,2.393,76,1.723,77,2.193,78,2.393,79,2.335,80,2.926,81,2.654,82,2.474,83,2.393,85,2.926,93,1.088,96,0.58,97,0.344,101,1.143,105,2.384,106,1.255,117,1.858,119,0.133,120,0.205,121,0.823,124,1.262,133,1.479,135,1.371,137,1.556,143,3.212,145,1.781,165,1.047,171,1.479,179,1.365,182,2.926,189,2.682,191,2.468,228,2.342,263,3.212,303,0.014,304,0.014,331,1.607,332,0.863,333,0.964,339,2.592,345,1.781,351,1.255,357,3.113,360,1.961,361,2.13,362,2.13,363,3.729,364,2.733,366,3.729,368,3.862,377,1.255,378,1.781,380,1.047,381,0.964,382,2.009,383,2.388,385,1.781,389,1.255,391,1.781,393,2.388,394,1.754,395,2.388,396,2.13,397,2.905,400,2.13,406,2.592,410,1.556,414,0.762,475,1.556,491,1.389,565,2.388,705,2.733,786,1.556,787,1.556,788,1.781,811,1.389,1037,1.556,1050,1.556,1077,1.781,1078,3.962,1079,3.962,1080,3.962,1081,3.962,1082,3.962,1083,3.962,1084,4.443,1085,4.443,1086,3.256,1087,4.443,1088,4.443,1089,3.256,1090,4.792,1091,3.256,1092,2.122,1093,2.122,1094,3.256,1095,2.122,1096,2.122,1097,2.122,1098,3.256,1099,2.122,1100,2.122,1101,3.256,1102,2.122,1103,3.709,1104,3.256,1105,3.256,1106,3.256,1107,2.122,1108,3.256,1109,2.122,1110,3.256,1111,2.122,1112,5.433,1113,3.256,1114,2.122,1115,2.122,1116,2.122,1117,3.256,1118,2.122,1119,2.122,1120,2.122,1121,2.122,1122,2.122,1123,2.122,1124,2.122,1125,1.781,1126,2.122,1127,2.122,1128,2.122,1129,2.122,1130,2.122,1131,2.122,1132,2.122,1133,2.122,1134,3.256,1135,3.256,1136,1.781,1137,2.122,1138,2.122,1139,2.122,1140,2.122,1141,3.256,1142,2.122,1143,2.122,1144,2.122,1145,2.122,1146,2.122,1147,2.122,1148,2.122,1149,2.122,1150,2.122,1151,1.781,1152,2.122,1153,2.122,1154,2.122,1155,2.122,1156,2.122]],["title/injectables/SessionService.html",[332,0.857,457,1.741]],["body/injectables/SessionService.html",[3,0.19,4,0.19,9,0.159,15,0.03,29,0.368,30,0.751,36,1.521,42,2.265,44,1.396,52,1.62,54,0.87,55,0.586,56,0.655,57,0.806,59,1.913,60,2.063,67,1.204,70,1.595,71,1.41,72,1.623,73,2.063,74,1.178,96,0.513,97,0.493,101,1.637,117,1.643,119,0.19,120,0.293,124,1.891,133,1.773,139,3.556,165,2.091,170,2.397,178,2.505,179,1.776,181,2.772,214,1.913,303,0.019,304,0.019,329,2.842,332,1.123,333,1.38,380,1.5,381,1.38,382,2.212,402,3.76,414,1.521,457,2.282,559,2.883,787,4.214,925,1.797,1003,4.428,1022,3.556,1027,3.556,1062,2.229,1157,2.551,1158,5.746,1159,4.878,1160,4.878,1161,5.276,1162,5.276,1163,4.428,1164,5.276,1165,5.276,1166,4.237,1167,4.237,1168,3.039,1169,3.039,1170,4.237,1171,4.428,1172,3.039,1173,5.276,1174,4.237,1175,3.039,1176,5.276,1177,4.237,1178,3.039,1179,4.428,1180,4.237,1181,3.039,1182,4.237,1183,4.237,1184,4.237,1185,3.039,1186,4.237,1187,3.039,1188,3.039,1189,3.039,1190,3.039,1191,3.039,1192,3.039,1193,3.556,1194,4.094,1195,2.551,1196,2.551,1197,2.551,1198,2.551,1199,3.039,1200,4.237,1201,3.039,1202,3.039,1203,2.551,1204,3.039,1205,3.039,1206,4.237,1207,3.039,1208,3.039,1209,3.039,1210,3.039]],["title/interfaces/State.html",[191,1.468,541,0.925]],["body/interfaces/State.html",[3,0.247,4,0.247,9,0.205,15,0.03,29,0.477,30,0.893,56,0.676,67,1.164,70,1.721,73,1.414,74,1.954,82,2.271,85,2.993,93,0.894,96,0.477,105,1.651,119,0.348,133,1.808,135,1.808,171,2.947,175,2.329,182,2.714,189,2.487,191,2.924,214,1.949,303,0.022,304,0.022,325,1.651,349,2.441,360,1.954,404,2.289,414,2.345,476,2.329,541,1.59,542,1.944,910,2.714,911,2.577,912,2.889,913,2.577,914,2.577,915,2.577,916,3.961,917,3.696,918,3.696,919,3.696,920,2.979,921,3.297,922,3.696,923,3.696,924,3.696,925,3.462]],["title/injectables/TokenStorageService.html",[51,1.468,332,0.857]],["body/injectables/TokenStorageService.html",[3,0.18,4,0.18,9,0.15,15,0.03,29,0.348,30,0.722,36,1.463,42,2.027,44,1.355,51,1.851,52,1.622,54,1.473,55,0.993,56,0.73,57,1.365,59,1.974,60,1.7,67,1.319,71,0.957,72,1.357,74,1.115,96,0.348,97,0.466,119,0.18,120,0.277,124,2.299,135,0.888,159,2.109,170,1.306,210,3.421,214,0.957,238,3.214,303,0.018,304,0.018,329,1.549,332,1.081,333,1.306,339,4.121,349,2.251,360,1.115,380,1.42,381,1.306,382,2.486,404,1.306,425,3.421,526,2.414,535,4.322,588,2.667,713,2.409,728,4.75,751,1.882,779,2.109,983,3.421,1062,2.109,1103,2.109,1163,4.322,1193,3.421,1194,3.973,1195,2.414,1196,2.414,1197,2.414,1198,2.414,1211,4.537,1212,2.109,1213,4.734,1214,5.243,1215,5.15,1216,5.15,1217,5.15,1218,4.076,1219,4.076,1220,4.076,1221,4.076,1222,4.076,1223,2.876,1224,2.876,1225,2.876,1226,2.876,1227,4.076,1228,2.876,1229,4.076,1230,2.876,1231,4.076,1232,2.876,1233,4.076,1234,2.876,1235,2.109,1236,2.414,1237,2.109,1238,2.414,1239,2.109,1240,2.414,1241,4.076,1242,4.076,1243,2.876,1244,2.876,1245,2.876,1246,4.076,1247,4.734,1248,2.876,1249,2.876,1250,2.876,1251,2.876,1252,4.076,1253,2.876,1254,4.076,1255,2.876,1256,2.876,1257,2.876,1258,2.876,1259,2.876,1260,2.414,1261,2.876,1262,2.876,1263,2.876,1264,2.876,1265,2.876,1266,2.876,1267,2.876,1268,2.876,1269,4.076,1270,2.876,1271,2.876]],["title/interfaces/User.html",[70,0.857,541,0.925]],["body/interfaces/User.html",[3,0.273,4,0.273,9,0.227,15,0.029,29,0.527,30,0.951,55,1.171,56,0.872,67,1.408,70,1.423,73,2.239,75,3.271,76,2.354,77,2.997,78,3.271,79,2.614,80,3.359,82,2.354,83,3.271,119,0.336,303,0.024,304,0.024,349,2.418,541,1.536,542,2.149,543,3.193]],["title/injectables/WebsocketService.html",[49,1.161,332,0.857]],["body/injectables/WebsocketService.html",[3,0.084,4,0.084,9,0.07,15,0.03,18,1.113,20,0.75,29,0.163,30,0.399,36,0.809,42,2.108,44,0.976,48,2.353,49,1.364,51,0.61,52,1.426,54,1.176,55,0.793,56,0.64,57,1.09,59,1.684,60,1.961,67,1.21,70,0.598,71,1.135,72,1.135,81,2.064,82,0.521,96,0.498,97,0.218,105,0.563,106,0.794,114,0.794,117,1.848,119,0.084,120,0.13,124,1.473,128,1.892,129,0.985,130,2.5,133,1.824,135,1.172,140,2.861,142,1.128,152,1.905,157,3.188,161,1.721,165,1.113,170,1.984,171,1.323,179,1.429,181,2.231,183,0.985,199,1.892,212,1.128,214,1.526,248,2.69,303,0.01,304,0.01,325,2.215,329,0.724,331,1.875,332,0.598,333,0.61,339,3.868,357,2.246,360,1.322,368,4.458,377,0.794,380,0.663,381,0.61,382,1.831,383,1.653,386,2.861,387,1.128,389,2.015,393,3.015,394,2.469,395,1.653,396,2.485,397,1.653,400,3.388,402,1.475,404,1.024,406,1.475,410,2.136,414,1.569,475,2.5,503,1.128,523,2.861,559,2.817,615,2.5,651,0.879,655,2.136,728,0.985,751,2.485,765,1.128,777,1.653,779,3.015,790,1.128,791,1.892,797,3.204,801,3.015,802,3.875,803,3.495,804,3.495,808,3.204,811,1.475,814,2.5,846,1.892,910,1.214,920,1.333,925,1.721,985,2.861,1000,1.128,1017,2.444,1037,0.985,1039,1.892,1042,1.892,1125,2.861,1136,1.892,1151,1.892,1171,1.128,1179,1.128,1203,4.246,1214,1.892,1260,1.892,1272,1.128,1273,2.912,1274,2.912,1275,2.912,1276,2.912,1277,3.409,1278,2.254,1279,2.254,1280,3.409,1281,2.254,1282,2.254,1283,2.254,1284,2.254,1285,1.344,1286,2.254,1287,2.254,1288,5.668,1289,1.344,1290,2.254,1291,2.912,1292,2.254,1293,2.254,1294,1.344,1295,2.254,1296,1.344,1297,2.254,1298,1.344,1299,2.254,1300,3.798,1301,1.344,1302,2.254,1303,2.254,1304,2.254,1305,3.798,1306,2.254,1307,1.344,1308,2.254,1309,2.254,1310,4.369,1311,2.254,1312,2.254,1313,1.344,1314,5.461,1315,2.254,1316,1.892,1317,2.254,1318,1.344,1319,2.254,1320,1.344,1321,1.344,1322,1.344,1323,1.344,1324,2.254,1325,1.344,1326,1.344,1327,1.344,1328,1.344,1329,1.344,1330,1.344,1331,1.344,1332,1.344,1333,1.344,1334,2.912,1335,1.344,1336,1.344,1337,1.344,1338,1.344,1339,1.344,1340,2.254,1341,1.344,1342,1.344,1343,1.344,1344,1.344,1345,1.344,1346,1.344,1347,3.798,1348,1.344,1349,2.254,1350,2.254,1351,1.344,1352,2.254,1353,5.283,1354,1.344,1355,1.344,1356,4.111,1357,1.344,1358,1.344,1359,1.344,1360,1.344,1361,2.254,1362,1.344,1363,1.344,1364,2.254,1365,2.254,1366,2.254,1367,1.344,1368,1.344,1369,1.344,1370,1.344,1371,3.798,1372,3.409,1373,1.344,1374,2.254,1375,1.344,1376,1.344,1377,1.344,1378,1.344,1379,1.344,1380,1.344,1381,1.344,1382,2.254,1383,1.344,1384,1.344,1385,1.344,1386,1.344,1387,2.254,1388,1.344,1389,1.344,1390,1.344,1391,1.344,1392,1.344,1393,1.344,1394,1.344,1395,2.254,1396,1.344,1397,1.344,1398,1.344,1399,1.344,1400,1.344,1401,1.344,1402,1.344,1403,1.344,1404,2.254,1405,1.344,1406,2.254,1407,1.344,1408,2.254,1409,2.254,1410,1.344,1411,1.344,1412,1.344,1413,1.344,1414,1.344,1415,1.344,1416,1.344,1417,1.344,1418,1.344,1419,2.254,1420,2.254,1421,3.798,1422,1.344,1423,3.409,1424,2.912,1425,1.344,1426,1.344,1427,1.344,1428,1.344,1429,1.344,1430,2.254,1431,1.344,1432,1.344,1433,1.344,1434,1.344,1435,1.344,1436,2.254,1437,2.254,1438,2.254,1439,2.254,1440,2.254,1441,2.254,1442,2.254,1443,3.409,1444,1.344,1445,1.344,1446,2.912,1447,2.912,1448,1.344,1449,1.344,1450,1.344,1451,2.254,1452,1.344,1453,1.344,1454,1.344]],["title/coverage.html",[1455,3.71]],["body/coverage.html",[0,1.119,1,0.872,9,0.185,10,2.982,15,0.03,17,1.276,46,1.489,47,1.914,49,1.276,51,1.614,56,0.477,70,0.942,74,2.631,79,1.489,81,1.489,93,0.806,105,1.489,120,0.454,191,1.614,286,1.097,288,0.942,290,1.183,292,1.276,294,1.276,296,1.017,298,1.276,300,1.017,303,0.021,304,0.021,310,1.754,332,1.629,334,2.982,353,2.1,417,2.982,457,1.914,482,2.1,510,3.455,516,2.1,525,2.325,528,2.606,541,1.723,543,3.455,544,2.982,692,2.606,693,2.982,695,2.982,701,2.982,707,2.982,711,2.982,712,2.982,717,2.982,718,2.982,856,2.982,857,2.982,892,2.982,911,3.459,926,2.982,1077,2.982,1157,2.982,1211,4.129,1212,4.129,1235,2.606,1237,2.606,1239,2.606,1272,2.982,1455,2.982,1456,3.553,1457,3.553,1458,3.553,1459,3.954,1460,4.712,1461,6.507,1462,2.982,1463,3.553,1464,4.712,1465,3.954,1466,6.237,1467,2.982,1468,2.982,1469,2.982,1470,2.982,1471,6.021,1472,4.712,1473,3.553,1474,2.982,1475,3.553,1476,3.553,1477,3.553,1478,3.553,1479,3.553,1480,3.553,1481,3.553,1482,3.553,1483,3.553,1484,3.553,1485,3.553,1486,3.553,1487,3.553]],["title/miscellaneous/functions.html",[1488,1.763,1489,3.265]],["body/miscellaneous/functions.html",[15,0.028,17,2.234,29,0.617,59,1.963,60,1.831,303,0.026,304,0.026,1459,4.279,1462,5.222,1488,3.336,1489,4.279,1490,5.897,1491,5.099]],["title/index.html",[29,0.326,1492,2.695,1493,2.695]],["body/index.html",[15,0.023,29,0.412,70,1.466,93,1.482,148,4.455,231,4.844,303,0.02,304,0.02,406,2.224,424,3.839,437,4.989,438,2.853,439,2.853,506,3.839,541,1.309,975,2.853,1023,4.844,1036,4.844,1050,3.792,1316,2.853,1494,3.399,1495,4.574,1496,5.17,1497,4.574,1498,4.574,1499,4.574,1500,4.574,1501,3.399,1502,3.399,1503,3.399,1504,4.574,1505,5.772,1506,5.772,1507,5.17,1508,3.399,1509,5.53,1510,5.772,1511,4.574,1512,3.399,1513,3.399,1514,5.945,1515,3.399,1516,5.772,1517,5.772,1518,4.574,1519,3.399,1520,5.53,1521,5.53,1522,3.399,1523,3.399,1524,3.399,1525,4.574,1526,5.17,1527,3.399,1528,3.399,1529,5.945,1530,4.574,1531,4.574,1532,5.772,1533,3.399,1534,3.399,1535,3.399,1536,5.17,1537,5.945,1538,5.17,1539,5.53,1540,4.574,1541,3.399,1542,3.399,1543,3.399,1544,3.399,1545,5.17,1546,4.574,1547,3.399,1548,4.574,1549,3.399,1550,4.574,1551,3.399,1552,3.399,1553,5.17,1554,3.399,1555,4.574,1556,3.399,1557,3.399,1558,3.399,1559,3.399,1560,3.399,1561,4.574,1562,3.399,1563,3.399,1564,3.399,1565,3.399,1566,4.574,1567,3.399,1568,3.399,1569,4.574,1570,3.399,1571,3.399,1572,3.399,1573,3.399,1574,3.399,1575,3.399,1576,3.399,1577,3.399,1578,3.399,1579,3.399,1580,3.399,1581,3.399,1582,3.399,1583,3.399,1584,3.399,1585,3.399,1586,3.399,1587,3.399,1588,3.399,1589,3.399,1590,3.399,1591,3.399,1592,3.399,1593,3.399,1594,3.399,1595,3.399]],["title/modules.html",[307,2.008]],["body/modules.html",[15,0.026,24,1.804,303,0.026,304,0.026,306,2.969,307,2.281,452,3.286,456,2.969,461,5.344,687,3.286,1596,6.368,1597,6.368,1598,6.483,1599,5.023,1600,5.023]],["title/overview.html",[1601,3.71]],["body/overview.html",[1,1.587,2,1.564,15,0.03,24,2.3,46,2.355,49,2.017,239,2.173,278,1.154,286,1.734,288,1.567,296,1.608,300,1.608,303,0.023,304,0.023,305,1.564,306,3.683,307,1.832,308,2.385,309,2.385,310,1.991,311,1.991,312,2.173,313,3.385,314,3.385,315,3.385,316,3.024,317,2.385,333,1.832,452,4.427,453,3.385,454,3.385,455,3.385,456,3.321,457,3.026,542,1.991,575,2.639,687,4.077,688,3.385,710,2.958,862,3.385,863,3.385,864,3.385,865,5.311,866,5.311,1103,2.958,1601,3.385,1602,4.034,1603,4.034,1604,4.034]],["title/miscellaneous/variables.html",[1488,1.763,1605,3.265]],["body/miscellaneous/variables.html",[15,0.03,20,1.408,29,0.512,56,0.858,67,1.203,71,2.151,72,2.151,81,1.773,277,2.278,303,0.023,304,0.023,310,2.601,311,2.601,510,3.102,520,3.549,528,3.865,529,3.549,530,3.549,1211,3.102,1212,4.408,1235,3.865,1236,3.549,1237,3.865,1238,3.549,1239,3.865,1240,3.549,1465,3.549,1467,4.819,1468,4.819,1469,3.549,1470,4.423,1474,3.549,1488,2.767,1605,3.549,1606,4.229,1607,4.229,1608,5.27,1609,4.229,1610,5.742,1611,5.27,1612,4.229,1613,4.229,1614,4.229,1615,4.229,1616,4.229,1617,4.229,1618,4.229,1619,4.229,1620,4.229,1621,4.229]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"components/AccountComponent.html":{},"modules/AccountModule.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/Balance.html":{},"components/DepositComponent.html":{},"modules/DepositModule.html":{},"injectables/DepositService.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"classes/JwtResponse.html":{},"interfaces/LogMessage.html":{},"components/LoginComponent.html":{},"classes/LoginInfo.html":{},"modules/MaterialModule.html":{},"components/NotificationComponent.html":{},"interfaces/Payment.html":{},"components/PaymentComponent.html":{},"interfaces/PaymentMessage.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"interfaces/State.html":{},"injectables/TokenStorageService.html":{},"interfaces/User.html":{},"injectables/WebsocketService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":74,"title":{},"body":{"components/AccountComponent.html":{},"components/DepositComponent.html":{},"components/LoginComponent.html":{},"interfaces/Payment.html":{},"components/PaymentComponent.html":{},"interfaces/PaymentMessage.html":{},"injectables/SessionService.html":{},"interfaces/State.html":{},"injectables/TokenStorageService.html":{},"coverage.html":{}}}],["0/1",{"_index":1461,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1483,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1478,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1463,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1480,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1477,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1479,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1473,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1464,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1471,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1476,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1475,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1472,"title":{},"body":{"coverage.html":{}}}],["0x3",{"_index":1197,"title":{},"body":{"injectables/SessionService.html":{},"injectables/TokenStorageService.html":{}}}],["0x8",{"_index":1198,"title":{},"body":{"injectables/SessionService.html":{},"injectables/TokenStorageService.html":{}}}],["1",{"_index":360,"title":{},"body":{"injectables/AccountService.html":{},"components/DepositComponent.html":{},"components/LoginComponent.html":{},"interfaces/Payment.html":{},"components/PaymentComponent.html":{},"interfaces/PaymentMessage.html":{},"injectables/PaymentService.html":{},"interfaces/State.html":{},"injectables/TokenStorageService.html":{},"injectables/WebsocketService.html":{}}}],["100",{"_index":263,"title":{},"body":{"components/AccountComponent.html":{},"components/DepositComponent.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{},"injectables/PaymentService.html":{}}}],["1000",{"_index":615,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{},"injectables/WebsocketService.html":{}}}],["10000",{"_index":1395,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["100px",{"_index":659,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["10px",{"_index":671,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["123456",{"_index":363,"title":{},"body":{"injectables/AccountService.html":{},"injectables/PaymentService.html":{}}}],["12345678a",{"_index":366,"title":{},"body":{"injectables/AccountService.html":{},"injectables/PaymentService.html":{}}}],["16",{"_index":1195,"title":{},"body":{"injectables/SessionService.html":{},"injectables/TokenStorageService.html":{}}}],["16px",{"_index":675,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["2",{"_index":1103,"title":{},"body":{"injectables/PaymentService.html":{},"injectables/TokenStorageService.html":{},"overview.html":{}}}],["2000",{"_index":816,"title":{},"body":{"components/LoginComponent.html":{}}}],["20px",{"_index":260,"title":{},"body":{"components/AccountComponent.html":{},"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["25",{"_index":679,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["2500",{"_index":1108,"title":{},"body":{"injectables/PaymentService.html":{}}}],["3",{"_index":565,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{},"injectables/PaymentService.html":{}}}],["30",{"_index":1065,"title":{},"body":{"components/PaymentComponent.html":{}}}],["30000",{"_index":1064,"title":{},"body":{"components/PaymentComponent.html":{}}}],["3500",{"_index":1110,"title":{},"body":{"injectables/PaymentService.html":{}}}],["3rem",{"_index":677,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["4",{"_index":1113,"title":{},"body":{"injectables/PaymentService.html":{}}}],["40",{"_index":678,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["400px",{"_index":265,"title":{},"body":{"components/AccountComponent.html":{},"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["46",{"_index":1484,"title":{},"body":{"coverage.html":{}}}],["4xxx",{"_index":1190,"title":{},"body":{"injectables/SessionService.html":{}}}],["5",{"_index":1602,"title":{},"body":{"overview.html":{}}}],["50",{"_index":682,"title":{},"body":{"components/DepositComponent.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{}}}],["5000",{"_index":1391,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["50vw",{"_index":680,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["5rem",{"_index":640,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["6",{"_index":575,"title":{},"body":{"components/DepositComponent.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{},"overview.html":{}}}],["6/10",{"_index":1482,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1481,"title":{},"body":{"coverage.html":{}}}],["600px",{"_index":273,"title":{},"body":{"components/AccountComponent.html":{}}}],["7",{"_index":1604,"title":{},"body":{"overview.html":{}}}],["7/15",{"_index":1485,"title":{},"body":{"coverage.html":{}}}],["7rem",{"_index":683,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["8",{"_index":91,"title":{},"body":{"components/AccountComponent.html":{}}}],["9",{"_index":1603,"title":{},"body":{"overview.html":{}}}],["900000",{"_index":1063,"title":{},"body":{"components/PaymentComponent.html":{}}}],["90vh",{"_index":451,"title":{},"body":{"components/AppComponent.html":{},"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["90vw",{"_index":685,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["_snackbar",{"_index":895,"title":{},"body":{"components/NotificationComponent.html":{}}}],["abajo",{"_index":644,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["abrio",{"_index":1138,"title":{},"body":{"injectables/PaymentService.html":{}}}],["absolute",{"_index":639,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["abstractcontrol",{"_index":953,"title":{},"body":{"components/PaymentComponent.html":{}}}],["acceder",{"_index":1261,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["access",{"_index":107,"title":{},"body":{"components/AccountComponent.html":{}}}],["accesstoken",{"_index":539,"title":{},"body":{"injectables/AuthService.html":{},"classes/JwtResponse.html":{}}}],["account",{"_index":18,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AccountService.html":{},"modules/AppRoutingModule.html":{},"components/DepositComponent.html":{},"components/PaymentComponent.html":{},"injectables/PaymentService.html":{},"injectables/WebsocketService.html":{}}}],["account'},{'name",{"_index":285,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/DepositComponent.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{}}}],["account.balance",{"_index":235,"title":{},"body":{"components/AccountComponent.html":{}}}],["account.cc.balance",{"_index":237,"title":{},"body":{"components/AccountComponent.html":{},"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["account.component",{"_index":321,"title":{},"body":{"modules/AccountModule.html":{}}}],["account.component.css",{"_index":26,"title":{},"body":{"components/AccountComponent.html":{}}}],["account.component.html",{"_index":28,"title":{},"body":{"components/AccountComponent.html":{}}}],["account.email",{"_index":1149,"title":{},"body":{"injectables/PaymentService.html":{}}}],["account.model",{"_index":912,"title":{},"body":{"interfaces/Payment.html":{},"interfaces/PaymentMessage.html":{},"interfaces/State.html":{}}}],["account.name",{"_index":232,"title":{},"body":{"components/AccountComponent.html":{},"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["account/account.component",{"_index":427,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DepositModule.html":{}}}],["account/account.module",{"_index":465,"title":{},"body":{"modules/AppModule.html":{}}}],["account2",{"_index":1078,"title":{},"body":{"injectables/PaymentService.html":{}}}],["accountcomponent",{"_index":1,"title":{"components/AccountComponent.html":{}},"body":{"components/AccountComponent.html":{},"modules/AccountModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DepositComponent.html":{},"modules/DepositModule.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["accountmodule",{"_index":306,"title":{"modules/AccountModule.html":{}},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["accountnotification",{"_index":335,"title":{},"body":{"injectables/AccountService.html":{}}}],["accounts",{"_index":929,"title":{},"body":{"components/PaymentComponent.html":{}}}],["accountservice",{"_index":46,"title":{"injectables/AccountService.html":{}},"body":{"components/AccountComponent.html":{},"injectables/AccountService.html":{},"modules/AppModule.html":{},"components/DepositComponent.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["accountttt",{"_index":820,"title":{},"body":{"components/LoginComponent.html":{}}}],["action",{"_index":269,"title":{},"body":{"components/AccountComponent.html":{}}}],["activa",{"_index":804,"title":{},"body":{"components/LoginComponent.html":{},"components/PaymentComponent.html":{},"injectables/WebsocketService.html":{}}}],["activatedroute",{"_index":733,"title":{},"body":{"components/LoginComponent.html":{},"components/PaymentComponent.html":{}}}],["actual",{"_index":1177,"title":{},"body":{"injectables/SessionService.html":{}}}],["actual_component",{"_index":302,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/DepositComponent.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{}}}],["actualización",{"_index":1327,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["adecuado",{"_index":1016,"title":{},"body":{"components/PaymentComponent.html":{}}}],["adrian",{"_index":445,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{}}}],["again",{"_index":610,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["agrega",{"_index":507,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MaterialModule.html":{}}}],["ajusta",{"_index":647,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["al",{"_index":394,"title":{},"body":{"injectables/AccountService.html":{},"components/DepositComponent.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{},"injectables/PaymentService.html":{},"injectables/WebsocketService.html":{}}}],["aleatorio",{"_index":1059,"title":{},"body":{"components/PaymentComponent.html":{}}}],["alejandro",{"_index":443,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{}}}],["alert",{"_index":1068,"title":{},"body":{"components/PaymentComponent.html":{}}}],["alert(\"payment",{"_index":982,"title":{},"body":{"components/PaymentComponent.html":{}}}],["alert('el",{"_index":998,"title":{},"body":{"components/PaymentComponent.html":{}}}],["alert('payment",{"_index":1053,"title":{},"body":{"components/PaymentComponent.html":{}}}],["alert('please",{"_index":595,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["alert('the",{"_index":1009,"title":{},"body":{"components/PaymentComponent.html":{}}}],["alert('you",{"_index":606,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["alert(`code",{"_index":1006,"title":{},"body":{"components/PaymentComponent.html":{}}}],["alert(`passwords",{"_index":603,"title":{},"body":{"components/DepositComponent.html":{}}}],["alert(`tu",{"_index":1069,"title":{},"body":{"components/PaymentComponent.html":{}}}],["alert(notification",{"_index":127,"title":{},"body":{"components/AccountComponent.html":{}}}],["align",{"_index":256,"title":{},"body":{"components/AccountComponent.html":{},"components/DepositComponent.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{}}}],["allowing",{"_index":1518,"title":{},"body":{"index.html":{}}}],["allows",{"_index":1566,"title":{},"body":{"index.html":{}}}],["amount",{"_index":189,"title":{},"body":{"components/AccountComponent.html":{},"components/DepositComponent.html":{},"interfaces/Payment.html":{},"components/PaymentComponent.html":{},"interfaces/PaymentMessage.html":{},"injectables/PaymentService.html":{},"interfaces/State.html":{}}}],["angular",{"_index":1516,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":99,"title":{},"body":{"components/AccountComponent.html":{},"modules/AccountModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DepositComponent.html":{},"modules/DepositModule.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/PaymentComponent.html":{}}}],["angular/common/http",{"_index":376,"title":{},"body":{"injectables/AccountService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/DepositService.html":{}}}],["angular/core",{"_index":97,"title":{},"body":{"components/AccountComponent.html":{},"modules/AccountModule.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/DepositComponent.html":{},"modules/DepositModule.html":{},"injectables/DepositService.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"injectables/TokenStorageService.html":{},"injectables/WebsocketService.html":{}}}],["angular/forms",{"_index":428,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DepositComponent.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{}}}],["angular/material/button",{"_index":869,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/card",{"_index":884,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/form",{"_index":879,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/icon",{"_index":873,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/input",{"_index":882,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/list",{"_index":877,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/select",{"_index":887,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/sidenav",{"_index":875,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/snack",{"_index":889,"title":{},"body":{"modules/MaterialModule.html":{},"components/NotificationComponent.html":{}}}],["angular/material/table",{"_index":886,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/toolbar",{"_index":871,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/platform",{"_index":460,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/router",{"_index":100,"title":{},"body":{"components/AccountComponent.html":{},"modules/AccountModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DepositComponent.html":{},"modules/DepositModule.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{}}}],["antes",{"_index":1042,"title":{},"body":{"components/PaymentComponent.html":{},"injectables/WebsocketService.html":{}}}],["aplanada",{"_index":177,"title":{},"body":{"components/AccountComponent.html":{}}}],["app",{"_index":17,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/DepositComponent.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["app.component",{"_index":462,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":420,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":421,"title":{},"body":{"components/AppComponent.html":{}}}],["app.routes",{"_index":470,"title":{},"body":{"modules/AppModule.html":{}}}],["app/material/material.module",{"_index":102,"title":{},"body":{"components/AccountComponent.html":{},"components/DepositComponent.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{}}}],["appcomponent",{"_index":286,"title":{"components/AppComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DepositComponent.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appconfig",{"_index":1470,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application/json",{"_index":530,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["application/vnd.openxmlformats",{"_index":89,"title":{},"body":{"components/AccountComponent.html":{}}}],["applicationconfig",{"_index":1611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appmodule",{"_index":452,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":456,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["aprobado",{"_index":922,"title":{},"body":{"interfaces/Payment.html":{},"interfaces/PaymentMessage.html":{},"interfaces/State.html":{}}}],["aqu",{"_index":481,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MaterialModule.html":{},"components/PaymentComponent.html":{}}}],["aqui",{"_index":823,"title":{},"body":{"components/LoginComponent.html":{}}}],["architecture",{"_index":1500,"title":{},"body":{"index.html":{}}}],["archivo",{"_index":215,"title":{},"body":{"components/AccountComponent.html":{}}}],["array",{"_index":210,"title":{},"body":{"components/AccountComponent.html":{},"injectables/TokenStorageService.html":{}}}],["array.isarray(parsedmessage",{"_index":1428,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["arriba",{"_index":1029,"title":{},"body":{"components/PaymentComponent.html":{}}}],["arrow_back",{"_index":617,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["asegura",{"_index":654,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["asegurando",{"_index":914,"title":{},"body":{"interfaces/Payment.html":{},"components/PaymentComponent.html":{},"interfaces/PaymentMessage.html":{},"interfaces/State.html":{}}}],["asegúrate",{"_index":474,"title":{},"body":{"modules/AppModule.html":{},"components/PaymentComponent.html":{}}}],["asigna",{"_index":1021,"title":{},"body":{"components/PaymentComponent.html":{}}}],["asynchronous",{"_index":437,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["asynchronously",{"_index":1555,"title":{},"body":{"index.html":{}}}],["attemptauth",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{}}}],["attemptauth(credentials",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{}}}],["aumenta",{"_index":660,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["autenticación",{"_index":485,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/auth",{"_index":467,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["auth/auth.service",{"_index":483,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{}}}],["auth/login",{"_index":761,"title":{},"body":{"components/LoginComponent.html":{}}}],["authinterceptor",{"_index":486,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["authservice",{"_index":482,"title":{"injectables/AuthService.html":{}},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["authtoken",{"_index":1236,"title":{},"body":{"injectables/TokenStorageService.html":{},"miscellaneous/variables.html":{}}}],["authusername",{"_index":1240,"title":{},"body":{"injectables/TokenStorageService.html":{},"miscellaneous/variables.html":{}}}],["auto",{"_index":686,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["automáticos",{"_index":1393,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["available",{"_index":1600,"title":{},"body":{"modules.html":{}}}],["añade",{"_index":665,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["ba",{"_index":1104,"title":{},"body":{"injectables/PaymentService.html":{}}}],["back",{"_index":636,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["backend",{"_index":1036,"title":{},"body":{"components/PaymentComponent.html":{},"index.html":{}}}],["background",{"_index":1531,"title":{},"body":{"index.html":{}}}],["baja",{"_index":641,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["balance",{"_index":79,"title":{"interfaces/Balance.html":{}},"body":{"components/AccountComponent.html":{},"injectables/AccountService.html":{},"interfaces/Balance.html":{},"components/DepositComponent.html":{},"components/PaymentComponent.html":{},"injectables/PaymentService.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["balance1",{"_index":1079,"title":{},"body":{"injectables/PaymentService.html":{}}}],["balance2",{"_index":1080,"title":{},"body":{"injectables/PaymentService.html":{}}}],["balance:0",{"_index":1011,"title":{},"body":{"components/PaymentComponent.html":{}}}],["balance:2500",{"_index":371,"title":{},"body":{"injectables/AccountService.html":{}}}],["bar",{"_index":890,"title":{},"body":{"modules/MaterialModule.html":{},"components/NotificationComponent.html":{}}}],["becares",{"_index":447,"title":{},"body":{"components/AppComponent.html":{}}}],["between",{"_index":1528,"title":{},"body":{"index.html":{}}}],["bien",{"_index":503,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/WebsocketService.html":{}}}],["blob",{"_index":218,"title":{},"body":{"components/AccountComponent.html":{}}}],["blob([buffer",{"_index":219,"title":{},"body":{"components/AccountComponent.html":{}}}],["blocking",{"_index":1565,"title":{},"body":{"index.html":{}}}],["body",{"_index":1408,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["booktype",{"_index":209,"title":{},"body":{"components/AccountComponent.html":{}}}],["boolean",{"_index":588,"title":{},"body":{"components/DepositComponent.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{},"injectables/TokenStorageService.html":{}}}],["boot",{"_index":1521,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":310,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/DepositModule.html":{},"modules/MaterialModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(appcomponent",{"_index":1618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["borde",{"_index":645,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["bottom",{"_index":267,"title":{},"body":{"components/AccountComponent.html":{},"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["botón",{"_index":642,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["browse",{"_index":1598,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":461,"title":{},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["browsermodule",{"_index":459,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":669,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["buffer",{"_index":69,"title":{},"body":{"components/AccountComponent.html":{}}}],["built",{"_index":1515,"title":{},"body":{"index.html":{}}}],["business",{"_index":1552,"title":{},"body":{"index.html":{}}}],["button",{"_index":637,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["button[type=\"submit",{"_index":667,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["buttons",{"_index":270,"title":{},"body":{"components/AccountComponent.html":{}}}],["bécares",{"_index":706,"title":{},"body":{"components/FooterComponent.html":{}}}],["caducado",{"_index":1001,"title":{},"body":{"components/PaymentComponent.html":{}}}],["caducar",{"_index":1072,"title":{},"body":{"components/PaymentComponent.html":{}}}],["cambia",{"_index":765,"title":{},"body":{"components/LoginComponent.html":{},"injectables/WebsocketService.html":{}}}],["cambio",{"_index":824,"title":{},"body":{"components/LoginComponent.html":{}}}],["campos",{"_index":180,"title":{},"body":{"components/AccountComponent.html":{}}}],["canal",{"_index":1314,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["capabilities",{"_index":1577,"title":{},"body":{"index.html":{}}}],["captura",{"_index":774,"title":{},"body":{"components/LoginComponent.html":{},"components/PaymentComponent.html":{}}}],["caracteres",{"_index":576,"title":{},"body":{"components/DepositComponent.html":{}}}],["carballeira",{"_index":444,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{}}}],["card",{"_index":261,"title":{},"body":{"components/AccountComponent.html":{},"components/DepositComponent.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{}}}],["carral",{"_index":446,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{}}}],["catch",{"_index":1433,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["catch(error",{"_index":150,"title":{},"body":{"components/AccountComponent.html":{}}}],["catcherror",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{}}}],["cc",{"_index":78,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AccountService.html":{},"interfaces/Balance.html":{},"components/PaymentComponent.html":{},"injectables/PaymentService.html":{},"interfaces/User.html":{}}}],["center",{"_index":258,"title":{},"body":{"components/AccountComponent.html":{},"components/DepositComponent.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{}}}],["cerrado",{"_index":1403,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["channel",{"_index":1421,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["char",{"_index":1193,"title":{},"body":{"injectables/SessionService.html":{},"injectables/TokenStorageService.html":{}}}],["characters",{"_index":632,"title":{},"body":{"components/DepositComponent.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{}}}],["cierra",{"_index":1342,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["class",{"_index":120,"title":{"classes/JwtResponse.html":{},"classes/LoginInfo.html":{}},"body":{"components/AccountComponent.html":{},"modules/AccountModule.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/DepositComponent.html":{},"modules/DepositModule.html":{},"injectables/DepositService.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"classes/JwtResponse.html":{},"components/LoginComponent.html":{},"classes/LoginInfo.html":{},"modules/MaterialModule.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"injectables/TokenStorageService.html":{},"injectables/WebsocketService.html":{},"coverage.html":{}}}],["classes",{"_index":710,"title":{},"body":{"classes/JwtResponse.html":{},"classes/LoginInfo.html":{},"overview.html":{}}}],["clearsession",{"_index":1161,"title":{},"body":{"injectables/SessionService.html":{}}}],["clickevent",{"_index":729,"title":{},"body":{"components/LoginComponent.html":{}}}],["clickevent(event",{"_index":736,"title":{},"body":{"components/LoginComponent.html":{}}}],["client",{"_index":1288,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["client.debug",{"_index":1381,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["cliente",{"_index":1291,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["close",{"_index":1277,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["closes",{"_index":1286,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["cluster_accountmodule",{"_index":313,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_accountmodule_exports",{"_index":314,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_accountmodule_imports",{"_index":315,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":453,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":454,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":455,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_depositmodule",{"_index":688,"title":{},"body":{"modules/DepositModule.html":{},"overview.html":{}}}],["cluster_depositmodule_imports",{"_index":689,"title":{},"body":{"modules/DepositModule.html":{}}}],["cluster_materialmodule",{"_index":862,"title":{},"body":{"modules/MaterialModule.html":{},"overview.html":{}}}],["cluster_materialmodule_exports",{"_index":864,"title":{},"body":{"modules/MaterialModule.html":{},"overview.html":{}}}],["cluster_materialmodule_imports",{"_index":863,"title":{},"body":{"modules/MaterialModule.html":{},"overview.html":{}}}],["code",{"_index":930,"title":{},"body":{"components/PaymentComponent.html":{}}}],["codeexpirationtime",{"_index":931,"title":{},"body":{"components/PaymentComponent.html":{}}}],["codex",{"_index":440,"title":{},"body":{"components/AppComponent.html":{}}}],["column",{"_index":255,"title":{},"body":{"components/AccountComponent.html":{},"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["commonmodule",{"_index":22,"title":{},"body":{"components/AccountComponent.html":{},"modules/AccountModule.html":{},"modules/AppModule.html":{},"components/DepositComponent.html":{},"modules/DepositModule.html":{},"modules/MaterialModule.html":{},"components/PaymentComponent.html":{}}}],["communicates",{"_index":1548,"title":{},"body":{"index.html":{}}}],["communication",{"_index":1507,"title":{},"body":{"index.html":{}}}],["como",{"_index":183,"title":{},"body":{"components/AccountComponent.html":{},"components/PaymentComponent.html":{},"injectables/WebsocketService.html":{}}}],["component",{"_index":0,"title":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/DepositComponent.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DepositComponent.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":283,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/DepositComponent.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{}}}],["componentes",{"_index":328,"title":{},"body":{"modules/AccountModule.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/DepositComponent.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{},"overview.html":{}}}],["comprueba",{"_index":1426,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["con",{"_index":178,"title":{},"body":{"components/AccountComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{},"injectables/SessionService.html":{}}}],["concurrent",{"_index":1591,"title":{},"body":{"index.html":{}}}],["conectado",{"_index":1179,"title":{},"body":{"injectables/SessionService.html":{},"injectables/WebsocketService.html":{}}}],["conexion",{"_index":1139,"title":{},"body":{"injectables/PaymentService.html":{}}}],["conexión",{"_index":802,"title":{},"body":{"components/LoginComponent.html":{},"components/PaymentComponent.html":{},"injectables/WebsocketService.html":{}}}],["config",{"_index":1467,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configurado",{"_index":1292,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["configures",{"_index":1290,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["configuresocketclient",{"_index":1278,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["configuresocketclient(client",{"_index":1287,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["confirm",{"_index":635,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["confirmación",{"_index":1040,"title":{},"body":{"components/PaymentComponent.html":{}}}],["confirmar",{"_index":668,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["confirmpayment",{"_index":934,"title":{},"body":{"components/PaymentComponent.html":{}}}],["connecteduser",{"_index":1186,"title":{},"body":{"injectables/SessionService.html":{}}}],["connection",{"_index":1300,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["connectionsubject",{"_index":1273,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["connecttoroom",{"_index":730,"title":{},"body":{"components/LoginComponent.html":{}}}],["connecttoroom(userid",{"_index":740,"title":{},"body":{"components/LoginComponent.html":{},"components/PaymentComponent.html":{}}}],["consistency",{"_index":1574,"title":{},"body":{"index.html":{}}}],["console.error(\"error",{"_index":1434,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["console.error(\"socketclient",{"_index":1367,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["console.error('additional",{"_index":1362,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["console.error('authentication",{"_index":540,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.error('broker",{"_index":1359,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["console.error('detalles",{"_index":1399,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["console.error('error",{"_index":1398,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["console.error('invalid",{"_index":1248,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["console.error('no",{"_index":801,"title":{},"body":{"components/LoginComponent.html":{},"components/PaymentComponent.html":{},"injectables/WebsocketService.html":{}}}],["console.error('websocket",{"_index":1377,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["console.log(\"account",{"_index":405,"title":{},"body":{"injectables/AccountService.html":{}}}],["console.log(\"amount",{"_index":1056,"title":{},"body":{"components/PaymentComponent.html":{}}}],["console.log(\"antes",{"_index":163,"title":{},"body":{"components/AccountComponent.html":{}}}],["console.log(\"connected",{"_index":1357,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["console.log(\"constructor",{"_index":901,"title":{},"body":{"components/NotificationComponent.html":{}}}],["console.log(\"datos",{"_index":783,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(\"despues",{"_index":166,"title":{},"body":{"components/AccountComponent.html":{}}}],["console.log(\"enviando",{"_index":807,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(\"error",{"_index":151,"title":{},"body":{"components/AccountComponent.html":{}}}],["console.log(\"form",{"_index":993,"title":{},"body":{"components/PaymentComponent.html":{}}}],["console.log(\"individual",{"_index":1431,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["console.log(\"initialize",{"_index":1385,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["console.log(\"lista",{"_index":1429,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["console.log(\"login",{"_index":838,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(\"me",{"_index":818,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(\"mensaje",{"_index":1136,"title":{},"body":{"injectables/PaymentService.html":{},"injectables/WebsocketService.html":{}}}],["console.log(\"notificación",{"_index":790,"title":{},"body":{"components/LoginComponent.html":{},"injectables/WebsocketService.html":{}}}],["console.log(\"payment",{"_index":1117,"title":{},"body":{"injectables/PaymentService.html":{}}}],["console.log(\"paymentnotification",{"_index":906,"title":{},"body":{"components/NotificationComponent.html":{}}}],["console.log(\"payments",{"_index":227,"title":{},"body":{"components/AccountComponent.html":{}}}],["console.log(\"se",{"_index":1137,"title":{},"body":{"injectables/PaymentService.html":{}}}],["console.log(\"submit",{"_index":592,"title":{},"body":{"components/DepositComponent.html":{}}}],["console.log(\"users",{"_index":971,"title":{},"body":{"components/PaymentComponent.html":{}}}],["console.log(\"vuelve",{"_index":616,"title":{},"body":{"components/DepositComponent.html":{}}}],["console.log(\"web",{"_index":1331,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["console.log(\"websococket",{"_index":1415,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["console.log('access",{"_index":830,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log('accountcomponent",{"_index":122,"title":{},"body":{"components/AccountComponent.html":{}}}],["console.log('amount",{"_index":988,"title":{},"body":{"components/PaymentComponent.html":{}}}],["console.log('attempting",{"_index":1241,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["console.log('authentication",{"_index":534,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('conexión",{"_index":1349,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["console.log('mensaje",{"_index":1037,"title":{},"body":{"components/PaymentComponent.html":{},"injectables/PaymentService.html":{},"injectables/WebsocketService.html":{}}}],["console.log('payment",{"_index":967,"title":{},"body":{"components/PaymentComponent.html":{}}}],["console.log('paymentnotificacion",{"_index":1129,"title":{},"body":{"injectables/PaymentService.html":{}}}],["console.log('payments",{"_index":1121,"title":{},"body":{"injectables/PaymentService.html":{}}}],["console.log('preparando",{"_index":1031,"title":{},"body":{"components/PaymentComponent.html":{}}}],["console.log('recipient",{"_index":986,"title":{},"body":{"components/PaymentComponent.html":{}}}],["console.log('retrieved",{"_index":1256,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["console.log('token",{"_index":1246,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["console.log('usuario",{"_index":409,"title":{},"body":{"injectables/AccountService.html":{}}}],["console.log('usuarios",{"_index":399,"title":{},"body":{"injectables/AccountService.html":{}}}],["console.log('verification",{"_index":990,"title":{},"body":{"components/PaymentComponent.html":{}}}],["console.log('ya",{"_index":1351,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["console.log(`el",{"_index":156,"title":{},"body":{"components/AccountComponent.html":{}}}],["console.log(`enviando",{"_index":1405,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["console.log(error",{"_index":835,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(new",{"_index":1383,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["console.log(payment",{"_index":907,"title":{},"body":{"components/NotificationComponent.html":{}}}],["console.log(payments",{"_index":229,"title":{},"body":{"components/AccountComponent.html":{}}}],["console.log(this.form",{"_index":817,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(this.loginsuccessmessage",{"_index":793,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(this.websocket.getisconnected",{"_index":154,"title":{},"body":{"components/AccountComponent.html":{}}}],["console.log(users",{"_index":972,"title":{},"body":{"components/PaymentComponent.html":{}}}],["console.warn('websocket",{"_index":1402,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["const",{"_index":124,"title":{},"body":{"components/AccountComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/DepositComponent.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"injectables/TokenStorageService.html":{},"injectables/WebsocketService.html":{}}}],["constructor",{"_index":44,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/DepositComponent.html":{},"injectables/DepositService.html":{},"components/LoginComponent.html":{},"classes/LoginInfo.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"injectables/TokenStorageService.html":{},"injectables/WebsocketService.html":{}}}],["constructor(accountservice",{"_index":45,"title":{},"body":{"components/AccountComponent.html":{},"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["constructor(authservice",{"_index":731,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(http",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DepositService.html":{}}}],["constructor(private",{"_index":121,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/DepositComponent.html":{},"injectables/DepositService.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{},"injectables/PaymentService.html":{}}}],["constructor(router",{"_index":422,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(username",{"_index":858,"title":{},"body":{"classes/LoginInfo.html":{}}}],["constructor(websocket",{"_index":896,"title":{},"body":{"components/NotificationComponent.html":{}}}],["constructor(websocketservice",{"_index":345,"title":{},"body":{"injectables/AccountService.html":{},"injectables/PaymentService.html":{}}}],["construido",{"_index":1028,"title":{},"body":{"components/PaymentComponent.html":{}}}],["contain",{"_index":538,"title":{},"body":{"injectables/AuthService.html":{}}}],["container",{"_index":251,"title":{},"body":{"components/AccountComponent.html":{}}}],["content",{"_index":277,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AuthService.html":{},"components/DepositComponent.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{},"miscellaneous/variables.html":{}}}],["contraseña",{"_index":572,"title":{},"body":{"components/DepositComponent.html":{}}}],["control",{"_index":557,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["control.value",{"_index":589,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["controles",{"_index":957,"title":{},"body":{"components/PaymentComponent.html":{}}}],["convertir",{"_index":196,"title":{},"body":{"components/AccountComponent.html":{}}}],["copy",{"_index":436,"title":{},"body":{"components/AppComponent.html":{}}}],["correcta",{"_index":477,"title":{},"body":{"modules/AppModule.html":{}}}],["correctamente",{"_index":1370,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["correctly",{"_index":149,"title":{},"body":{"components/AccountComponent.html":{}}}],["correos",{"_index":1145,"title":{},"body":{"injectables/PaymentService.html":{}}}],["coverage",{"_index":1455,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crear",{"_index":175,"title":{},"body":{"components/AccountComponent.html":{},"interfaces/Payment.html":{},"components/PaymentComponent.html":{},"interfaces/PaymentMessage.html":{},"interfaces/State.html":{}}}],["createdat",{"_index":80,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AccountService.html":{},"interfaces/Balance.html":{},"components/PaymentComponent.html":{},"injectables/PaymentService.html":{},"interfaces/User.html":{}}}],["credentials",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{}}}],["cualquier",{"_index":1343,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["cuando",{"_index":1047,"title":{},"body":{"components/PaymentComponent.html":{}}}],["currency",{"_index":236,"title":{},"body":{"components/AccountComponent.html":{}}}],["current",{"_index":630,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["custom",{"_index":582,"title":{},"body":{"components/DepositComponent.html":{}}}],["código",{"_index":999,"title":{},"body":{"components/PaymentComponent.html":{}}}],["cómo",{"_index":1013,"title":{},"body":{"components/PaymentComponent.html":{}}}],["d+(\\.\\d{1,2})?)$/.test(value",{"_index":590,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["da",{"_index":1024,"title":{},"body":{"components/PaymentComponent.html":{}}}],["dar",{"_index":662,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["data",{"_index":148,"title":{},"body":{"components/AccountComponent.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["data.accesstoken",{"_index":831,"title":{},"body":{"components/LoginComponent.html":{}}}],["database",{"_index":1542,"title":{},"body":{"index.html":{}}}],["datasets",{"_index":1578,"title":{},"body":{"index.html":{}}}],["date",{"_index":82,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AccountService.html":{},"interfaces/Balance.html":{},"interfaces/Payment.html":{},"components/PaymentComponent.html":{},"interfaces/PaymentMessage.html":{},"injectables/PaymentService.html":{},"interfaces/State.html":{},"interfaces/User.html":{},"injectables/WebsocketService.html":{}}}],["date(payment.date).tolocalestring",{"_index":194,"title":{},"body":{"components/AccountComponent.html":{}}}],["date.now",{"_index":996,"title":{},"body":{"components/PaymentComponent.html":{}}}],["date:'short",{"_index":247,"title":{},"body":{"components/AccountComponent.html":{}}}],["date:\\'short",{"_index":284,"title":{},"body":{"components/AccountComponent.html":{}}}],["datos",{"_index":165,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AccountService.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"injectables/WebsocketService.html":{}}}],["de",{"_index":133,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AccountService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DepositComponent.html":{},"components/LoginComponent.html":{},"interfaces/Payment.html":{},"components/PaymentComponent.html":{},"interfaces/PaymentMessage.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"interfaces/State.html":{},"injectables/WebsocketService.html":{}}}],["deactivate",{"_index":1411,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["debug",{"_index":1384,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["debugging",{"_index":535,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TokenStorageService.html":{}}}],["decimal",{"_index":585,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["declaración",{"_index":569,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["declarations",{"_index":309,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/DepositModule.html":{},"modules/MaterialModule.html":{},"overview.html":{}}}],["default",{"_index":71,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AccountService.html":{},"injectables/AuthService.html":{},"components/DepositComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"injectables/TokenStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/variables.html":{}}}],["defecto",{"_index":1259,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["define",{"_index":956,"title":{},"body":{"components/PaymentComponent.html":{}}}],["defined",{"_index":52,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/DepositComponent.html":{},"injectables/DepositService.html":{},"classes/JwtResponse.html":{},"components/LoginComponent.html":{},"classes/LoginInfo.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"injectables/TokenStorageService.html":{},"injectables/WebsocketService.html":{}}}],["deja",{"_index":1018,"title":{},"body":{"components/PaymentComponent.html":{}}}],["del",{"_index":414,"title":{},"body":{"injectables/AccountService.html":{},"modules/AppRoutingModule.html":{},"components/DepositComponent.html":{},"components/LoginComponent.html":{},"interfaces/Payment.html":{},"components/PaymentComponent.html":{},"interfaces/PaymentMessage.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"interfaces/State.html":{},"injectables/WebsocketService.html":{}}}],["dependencies",{"_index":308,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/DepositModule.html":{},"modules/MaterialModule.html":{},"overview.html":{}}}],["deposit",{"_index":495,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DepositComponent.html":{}}}],["deposit'},{'name",{"_index":289,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/DepositComponent.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{}}}],["deposit.component",{"_index":691,"title":{},"body":{"modules/DepositModule.html":{}}}],["deposit.component.css",{"_index":545,"title":{},"body":{"components/DepositComponent.html":{}}}],["deposit.component.html",{"_index":546,"title":{},"body":{"components/DepositComponent.html":{}}}],["deposit/deposit.component",{"_index":473,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["depositcomponent",{"_index":288,"title":{"components/DepositComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DepositComponent.html":{},"modules/DepositModule.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["depositform",{"_index":547,"title":{},"body":{"components/DepositComponent.html":{}}}],["depositmodule",{"_index":687,"title":{"modules/DepositModule.html":{}},"body":{"modules/DepositModule.html":{},"modules.html":{},"overview.html":{}}}],["depositservice",{"_index":692,"title":{"injectables/DepositService.html":{}},"body":{"injectables/DepositService.html":{},"coverage.html":{}}}],["deprecated",{"_index":504,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["depósito",{"_index":173,"title":{},"body":{"components/AccountComponent.html":{}}}],["derecha",{"_index":650,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["description",{"_index":925,"title":{},"body":{"interfaces/Payment.html":{},"interfaces/PaymentMessage.html":{},"injectables/SessionService.html":{},"interfaces/State.html":{},"injectables/WebsocketService.html":{}}}],["desde",{"_index":776,"title":{},"body":{"components/LoginComponent.html":{},"components/PaymentComponent.html":{}}}],["deshabilitar",{"_index":116,"title":{},"body":{"components/AccountComponent.html":{}}}],["designed",{"_index":439,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["después",{"_index":140,"title":{},"body":{"components/AccountComponent.html":{},"injectables/WebsocketService.html":{}}}],["destinatario",{"_index":918,"title":{},"body":{"interfaces/Payment.html":{},"interfaces/PaymentMessage.html":{},"interfaces/State.html":{}}}],["destination",{"_index":1310,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["destination:`${destination}/${tokenstorageservice.getid",{"_index":1407,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["destination}/${tokenstorageservice.getid",{"_index":1374,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["destino",{"_index":395,"title":{},"body":{"injectables/AccountService.html":{},"injectables/PaymentService.html":{},"injectables/WebsocketService.html":{}}}],["desuscribirse",{"_index":1319,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["details",{"_index":1363,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["dev",{"_index":496,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DevComponent.html":{}}}],["dev'},{'name",{"_index":291,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/DepositComponent.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{}}}],["dev.component.css",{"_index":698,"title":{},"body":{"components/DevComponent.html":{}}}],["dev.component.html",{"_index":696,"title":{},"body":{"components/DevComponent.html":{}}}],["dev/dev.component",{"_index":488,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["devcomponent",{"_index":290,"title":{"components/DevComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DepositComponent.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{},"coverage.html":{}}}],["devolver",{"_index":1302,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["devuelve",{"_index":1258,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["dinámica",{"_index":1124,"title":{},"body":{"injectables/PaymentService.html":{}}}],["dinámicamente",{"_index":775,"title":{},"body":{"components/LoginComponent.html":{},"components/PaymentComponent.html":{}}}],["dinámico",{"_index":850,"title":{},"body":{"components/LoginComponent.html":{}}}],["direction",{"_index":254,"title":{},"body":{"components/AccountComponent.html":{},"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["directive",{"_index":281,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/DepositComponent.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{}}}],["directives",{"_index":301,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/DepositComponent.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{}}}],["disconnect",{"_index":1413,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["disconnected",{"_index":1416,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["display",{"_index":252,"title":{},"body":{"components/AccountComponent.html":{},"components/DepositComponent.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{}}}],["displayed",{"_index":1547,"title":{},"body":{"index.html":{}}}],["displayedcolumns",{"_index":31,"title":{},"body":{"components/AccountComponent.html":{}}}],["disponibles",{"_index":249,"title":{},"body":{"components/AccountComponent.html":{}}}],["distributed",{"_index":1508,"title":{},"body":{"index.html":{}}}],["dni",{"_index":83,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AccountService.html":{},"interfaces/Balance.html":{},"components/PaymentComponent.html":{},"injectables/PaymentService.html":{},"interfaces/User.html":{}}}],["documentation",{"_index":1456,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/DepositComponent.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{}}}],["done",{"_index":634,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["download",{"_index":241,"title":{},"body":{"components/AccountComponent.html":{}}}],["downloadexcel",{"_index":37,"title":{},"body":{"components/AccountComponent.html":{}}}],["during",{"_index":1582,"title":{},"body":{"index.html":{}}}],["dígitos",{"_index":1058,"title":{},"body":{"components/PaymentComponent.html":{}}}],["easily",{"_index":1588,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":1576,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":1499,"title":{},"body":{"index.html":{}}}],["ejemplo",{"_index":920,"title":{},"body":{"interfaces/Payment.html":{},"components/PaymentComponent.html":{},"interfaces/PaymentMessage.html":{},"interfaces/State.html":{},"injectables/WebsocketService.html":{}}}],["el",{"_index":214,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AccountService.html":{},"modules/AppRoutingModule.html":{},"components/DepositComponent.html":{},"components/LoginComponent.html":{},"interfaces/Payment.html":{},"components/PaymentComponent.html":{},"interfaces/PaymentMessage.html":{},"injectables/SessionService.html":{},"interfaces/State.html":{},"injectables/TokenStorageService.html":{},"injectables/WebsocketService.html":{}}}],["elasticsearch",{"_index":1537,"title":{},"body":{"index.html":{}}}],["electrónicos",{"_index":1146,"title":{},"body":{"injectables/PaymentService.html":{}}}],["element",{"_index":280,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/DepositComponent.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{}}}],["element.amount",{"_index":244,"title":{},"body":{"components/AccountComponent.html":{}}}],["element.date",{"_index":246,"title":{},"body":{"components/AccountComponent.html":{}}}],["element.receiver.name",{"_index":243,"title":{},"body":{"components/AccountComponent.html":{}}}],["element.sender.name",{"_index":242,"title":{},"body":{"components/AccountComponent.html":{}}}],["element.state.description",{"_index":245,"title":{},"body":{"components/AccountComponent.html":{}}}],["elementos",{"_index":657,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["email",{"_index":77,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AccountService.html":{},"interfaces/Balance.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{},"injectables/PaymentService.html":{},"interfaces/User.html":{}}}],["emite",{"_index":1045,"title":{},"body":{"components/PaymentComponent.html":{}}}],["emitir",{"_index":383,"title":{},"body":{"injectables/AccountService.html":{},"injectables/PaymentService.html":{},"injectables/WebsocketService.html":{}}}],["employed",{"_index":1575,"title":{},"body":{"index.html":{}}}],["en",{"_index":331,"title":{},"body":{"modules/AccountModule.html":{},"components/DepositComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{},"injectables/PaymentService.html":{},"injectables/WebsocketService.html":{}}}],["encima",{"_index":656,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["engine",{"_index":1543,"title":{},"body":{"index.html":{}}}],["ensuresessionidexists",{"_index":1162,"title":{},"body":{"injectables/SessionService.html":{}}}],["ensuring",{"_index":1510,"title":{},"body":{"index.html":{}}}],["enter",{"_index":626,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["enteredcode",{"_index":995,"title":{},"body":{"components/PaymentComponent.html":{}}}],["entro",{"_index":1449,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["envia",{"_index":845,"title":{},"body":{"components/LoginComponent.html":{}}}],["enviado",{"_index":1033,"title":{},"body":{"components/PaymentComponent.html":{}}}],["enviar",{"_index":389,"title":{},"body":{"injectables/AccountService.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{},"injectables/PaymentService.html":{},"injectables/WebsocketService.html":{}}}],["envía",{"_index":1311,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["error",{"_index":152,"title":{},"body":{"components/AccountComponent.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{},"injectables/WebsocketService.html":{}}}],["error.error.message",{"_index":837,"title":{},"body":{"components/LoginComponent.html":{}}}],["errormessage",{"_index":722,"title":{},"body":{"components/LoginComponent.html":{}}}],["es",{"_index":651,"title":{},"body":{"components/DepositComponent.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{},"injectables/WebsocketService.html":{}}}],["espacio",{"_index":663,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["específico",{"_index":403,"title":{},"body":{"injectables/AccountService.html":{}}}],["espera",{"_index":1305,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["esperar",{"_index":1039,"title":{},"body":{"components/PaymentComponent.html":{},"injectables/WebsocketService.html":{}}}],["est",{"_index":655,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{},"injectables/WebsocketService.html":{}}}],["esta",{"_index":158,"title":{},"body":{"components/AccountComponent.html":{},"components/NotificationComponent.html":{}}}],["establecida",{"_index":1350,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["estado",{"_index":910,"title":{},"body":{"components/NotificationComponent.html":{},"interfaces/Payment.html":{},"components/PaymentComponent.html":{},"interfaces/PaymentMessage.html":{},"interfaces/State.html":{},"injectables/WebsocketService.html":{}}}],["este",{"_index":1071,"title":{},"body":{"components/PaymentComponent.html":{}}}],["esto",{"_index":798,"title":{},"body":{"components/LoginComponent.html":{}}}],["etc",{"_index":923,"title":{},"body":{"interfaces/Payment.html":{},"interfaces/PaymentMessage.html":{},"interfaces/State.html":{}}}],["event",{"_index":739,"title":{},"body":{"components/LoginComponent.html":{}}}],["event.stoppropagation",{"_index":768,"title":{},"body":{"components/LoginComponent.html":{}}}],["eventcoalescing",{"_index":1613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["evento",{"_index":1046,"title":{},"body":{"components/PaymentComponent.html":{}}}],["excede",{"_index":980,"title":{},"body":{"components/PaymentComponent.html":{}}}],["exceeded",{"_index":1007,"title":{},"body":{"components/PaymentComponent.html":{}}}],["exceeds",{"_index":629,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["exceedsbalance",{"_index":979,"title":{},"body":{"components/PaymentComponent.html":{}}}],["excel",{"_index":201,"title":{},"body":{"components/AccountComponent.html":{}}}],["excel_extension",{"_index":32,"title":{},"body":{"components/AccountComponent.html":{}}}],["excel_type",{"_index":33,"title":{},"body":{"components/AccountComponent.html":{}}}],["excelbuffer",{"_index":207,"title":{},"body":{"components/AccountComponent.html":{}}}],["existe",{"_index":1171,"title":{},"body":{"injectables/SessionService.html":{},"injectables/WebsocketService.html":{}}}],["existente",{"_index":1344,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["exitoso",{"_index":788,"title":{},"body":{"components/LoginComponent.html":{},"injectables/PaymentService.html":{}}}],["experience",{"_index":1593,"title":{},"body":{"index.html":{}}}],["export",{"_index":119,"title":{},"body":{"components/AccountComponent.html":{},"modules/AccountModule.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/Balance.html":{},"components/DepositComponent.html":{},"modules/DepositModule.html":{},"injectables/DepositService.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"classes/JwtResponse.html":{},"interfaces/LogMessage.html":{},"components/LoginComponent.html":{},"classes/LoginInfo.html":{},"modules/MaterialModule.html":{},"components/NotificationComponent.html":{},"interfaces/Payment.html":{},"components/PaymentComponent.html":{},"interfaces/PaymentMessage.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"interfaces/State.html":{},"injectables/TokenStorageService.html":{},"interfaces/User.html":{},"injectables/WebsocketService.html":{}}}],["exporta",{"_index":327,"title":{},"body":{"modules/AccountModule.html":{},"modules/MaterialModule.html":{}}}],["exports",{"_index":312,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DepositModule.html":{},"modules/MaterialModule.html":{},"overview.html":{}}}],["express",{"_index":104,"title":{},"body":{"components/AccountComponent.html":{}}}],["express.express",{"_index":1491,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fail",{"_index":842,"title":{},"body":{"components/LoginComponent.html":{}}}],["failed",{"_index":851,"title":{},"body":{"components/LoginComponent.html":{}}}],["false",{"_index":751,"title":{},"body":{"components/LoginComponent.html":{},"components/PaymentComponent.html":{},"injectables/TokenStorageService.html":{},"injectables/WebsocketService.html":{}}}],["fast",{"_index":1538,"title":{},"body":{"index.html":{}}}],["favor",{"_index":1002,"title":{},"body":{"components/PaymentComponent.html":{}}}],["features",{"_index":1579,"title":{},"body":{"index.html":{}}}],["fecha",{"_index":924,"title":{},"body":{"interfaces/Payment.html":{},"interfaces/PaymentMessage.html":{},"interfaces/State.html":{}}}],["feedback",{"_index":1585,"title":{},"body":{"index.html":{}}}],["field",{"_index":880,"title":{},"body":{"modules/MaterialModule.html":{}}}],["fields",{"_index":598,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AccountComponent.html":{},"modules/AccountModule.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/Balance.html":{},"components/DepositComponent.html":{},"modules/DepositModule.html":{},"injectables/DepositService.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"classes/JwtResponse.html":{},"interfaces/LogMessage.html":{},"components/LoginComponent.html":{},"classes/LoginInfo.html":{},"modules/MaterialModule.html":{},"components/NotificationComponent.html":{},"interfaces/Payment.html":{},"components/PaymentComponent.html":{},"interfaces/PaymentMessage.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"interfaces/State.html":{},"injectables/TokenStorageService.html":{},"interfaces/User.html":{},"injectables/WebsocketService.html":{},"coverage.html":{}}}],["filename",{"_index":66,"title":{},"body":{"components/AccountComponent.html":{}}}],["filesaver",{"_index":110,"title":{},"body":{"components/AccountComponent.html":{}}}],["filesaver.saveas(data",{"_index":221,"title":{},"body":{"components/AccountComponent.html":{}}}],["fill",{"_index":596,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["fin",{"_index":1052,"title":{},"body":{"components/PaymentComponent.html":{}}}],["finalizada",{"_index":1304,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["first",{"_index":622,"title":{},"body":{"components/DepositComponent.html":{}}}],["flatdata",{"_index":185,"title":{},"body":{"components/AccountComponent.html":{}}}],["flex",{"_index":253,"title":{},"body":{"components/AccountComponent.html":{},"components/DepositComponent.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{}}}],["font",{"_index":673,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["footer",{"_index":702,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":293,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/DepositComponent.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{}}}],["footer.component.css",{"_index":704,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.html",{"_index":703,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.component",{"_index":431,"title":{},"body":{"components/AppComponent.html":{}}}],["footercomponent",{"_index":292,"title":{"components/FooterComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/DepositComponent.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{},"coverage.html":{}}}],["form",{"_index":664,"title":{},"body":{"components/DepositComponent.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{}}}],["format",{"_index":1249,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["formbuilder",{"_index":552,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["formgroup",{"_index":563,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["formsmodule",{"_index":418,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{}}}],["formulario",{"_index":666,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["frame",{"_index":1356,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["frame.body",{"_index":1364,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["frame.headers['message",{"_index":1361,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["frontend",{"_index":1517,"title":{},"body":{"index.html":{}}}],["frontend/.../app.config.server.ts",{"_index":1608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["frontend/.../app.config.ts",{"_index":1606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["frontend/.../auth.service.ts",{"_index":1609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["frontend/.../main.server.ts",{"_index":1607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["frontend/.../server.ts",{"_index":1490,"title":{},"body":{"miscellaneous/functions.html":{}}}],["frontend/.../token",{"_index":1610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["frontend/server.ts",{"_index":1459,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["frontend/src/account/account.component.ts",{"_index":10,"title":{},"body":{"components/AccountComponent.html":{},"coverage.html":{}}}],["frontend/src/account/account.component.ts:100",{"_index":58,"title":{},"body":{"components/AccountComponent.html":{}}}],["frontend/src/account/account.component.ts:119",{"_index":68,"title":{},"body":{"components/AccountComponent.html":{}}}],["frontend/src/account/account.component.ts:125",{"_index":61,"title":{},"body":{"components/AccountComponent.html":{}}}],["frontend/src/account/account.component.ts:26",{"_index":84,"title":{},"body":{"components/AccountComponent.html":{}}}],["frontend/src/account/account.component.ts:42",{"_index":94,"title":{},"body":{"components/AccountComponent.html":{}}}],["frontend/src/account/account.component.ts:43",{"_index":87,"title":{},"body":{"components/AccountComponent.html":{}}}],["frontend/src/account/account.component.ts:44",{"_index":95,"title":{},"body":{"components/AccountComponent.html":{}}}],["frontend/src/account/account.component.ts:45",{"_index":92,"title":{},"body":{"components/AccountComponent.html":{}}}],["frontend/src/account/account.component.ts:46",{"_index":53,"title":{},"body":{"components/AccountComponent.html":{}}}],["frontend/src/account/account.component.ts:54",{"_index":64,"title":{},"body":{"components/AccountComponent.html":{}}}],["frontend/src/account/account.component.ts:89",{"_index":63,"title":{},"body":{"components/AccountComponent.html":{}}}],["frontend/src/account/account.component.ts:94",{"_index":62,"title":{},"body":{"components/AccountComponent.html":{}}}],["frontend/src/account/account.module.ts",{"_index":318,"title":{},"body":{"modules/AccountModule.html":{}}}],["frontend/src/app/app.component.ts",{"_index":417,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["frontend/src/app/app.component.ts:30",{"_index":423,"title":{},"body":{"components/AppComponent.html":{}}}],["frontend/src/app/app.config.server.ts",{"_index":1465,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["frontend/src/app/app.config.ts",{"_index":1469,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["frontend/src/app/app.module.ts",{"_index":458,"title":{},"body":{"modules/AppModule.html":{}}}],["frontend/src/app/app.routes.ts",{"_index":479,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["frontend/src/app/dev/dev.component.ts",{"_index":695,"title":{},"body":{"components/DevComponent.html":{},"coverage.html":{}}}],["frontend/src/app/footer/footer.component.ts",{"_index":701,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["frontend/src/app/header/header.component.ts",{"_index":707,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["frontend/src/app/material/material.module.ts",{"_index":867,"title":{},"body":{"modules/MaterialModule.html":{}}}],["frontend/src/app/notification/notification.component.ts",{"_index":892,"title":{},"body":{"components/NotificationComponent.html":{},"coverage.html":{}}}],["frontend/src/app/notification/notification.component.ts:16",{"_index":897,"title":{},"body":{"components/NotificationComponent.html":{}}}],["frontend/src/app/notification/notification.component.ts:29",{"_index":898,"title":{},"body":{"components/NotificationComponent.html":{}}}],["frontend/src/auth/auth.service.ts",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["frontend/src/auth/auth.service.ts:18",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{}}}],["frontend/src/auth/auth.service.ts:22",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{}}}],["frontend/src/auth/jwt",{"_index":711,"title":{},"body":{"classes/JwtResponse.html":{},"coverage.html":{}}}],["frontend/src/auth/login",{"_index":856,"title":{},"body":{"classes/LoginInfo.html":{},"coverage.html":{}}}],["frontend/src/deposit/deposit.component.ts",{"_index":544,"title":{},"body":{"components/DepositComponent.html":{},"coverage.html":{}}}],["frontend/src/deposit/deposit.component.ts:21",{"_index":562,"title":{},"body":{"components/DepositComponent.html":{}}}],["frontend/src/deposit/deposit.component.ts:22",{"_index":566,"title":{},"body":{"components/DepositComponent.html":{}}}],["frontend/src/deposit/deposit.component.ts:23",{"_index":553,"title":{},"body":{"components/DepositComponent.html":{}}}],["frontend/src/deposit/deposit.component.ts:34",{"_index":556,"title":{},"body":{"components/DepositComponent.html":{}}}],["frontend/src/deposit/deposit.component.ts:42",{"_index":561,"title":{},"body":{"components/DepositComponent.html":{}}}],["frontend/src/deposit/deposit.component.ts:76",{"_index":554,"title":{},"body":{"components/DepositComponent.html":{}}}],["frontend/src/deposit/deposit.component.ts:81",{"_index":560,"title":{},"body":{"components/DepositComponent.html":{}}}],["frontend/src/deposit/deposit.module.ts",{"_index":690,"title":{},"body":{"modules/DepositModule.html":{}}}],["frontend/src/login/login.component.ts",{"_index":718,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["frontend/src/login/login.component.ts:147",{"_index":743,"title":{},"body":{"components/LoginComponent.html":{}}}],["frontend/src/login/login.component.ts:166",{"_index":741,"title":{},"body":{"components/LoginComponent.html":{}}}],["frontend/src/login/login.component.ts:30",{"_index":748,"title":{},"body":{"components/LoginComponent.html":{}}}],["frontend/src/login/login.component.ts:31",{"_index":752,"title":{},"body":{"components/LoginComponent.html":{}}}],["frontend/src/login/login.component.ts:32",{"_index":746,"title":{},"body":{"components/LoginComponent.html":{}}}],["frontend/src/login/login.component.ts:33",{"_index":757,"title":{},"body":{"components/LoginComponent.html":{}}}],["frontend/src/login/login.component.ts:34",{"_index":759,"title":{},"body":{"components/LoginComponent.html":{}}}],["frontend/src/login/login.component.ts:35",{"_index":758,"title":{},"body":{"components/LoginComponent.html":{}}}],["frontend/src/login/login.component.ts:36",{"_index":753,"title":{},"body":{"components/LoginComponent.html":{}}}],["frontend/src/login/login.component.ts:37",{"_index":754,"title":{},"body":{"components/LoginComponent.html":{}}}],["frontend/src/login/login.component.ts:38",{"_index":747,"title":{},"body":{"components/LoginComponent.html":{}}}],["frontend/src/login/login.component.ts:39",{"_index":756,"title":{},"body":{"components/LoginComponent.html":{}}}],["frontend/src/login/login.component.ts:40",{"_index":755,"title":{},"body":{"components/LoginComponent.html":{}}}],["frontend/src/login/login.component.ts:41",{"_index":735,"title":{},"body":{"components/LoginComponent.html":{}}}],["frontend/src/login/login.component.ts:54",{"_index":750,"title":{},"body":{"components/LoginComponent.html":{}}}],["frontend/src/login/login.component.ts:55",{"_index":738,"title":{},"body":{"components/LoginComponent.html":{}}}],["frontend/src/login/login.component.ts:60",{"_index":744,"title":{},"body":{"components/LoginComponent.html":{}}}],["frontend/src/login/login.component.ts:92",{"_index":745,"title":{},"body":{"components/LoginComponent.html":{}}}],["frontend/src/main.server.ts",{"_index":1474,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["frontend/src/models/account.model.ts",{"_index":543,"title":{},"body":{"interfaces/Balance.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["frontend/src/models/login.model.ts",{"_index":717,"title":{},"body":{"interfaces/LogMessage.html":{},"coverage.html":{}}}],["frontend/src/models/payment.model.ts",{"_index":911,"title":{},"body":{"interfaces/Payment.html":{},"interfaces/PaymentMessage.html":{},"interfaces/State.html":{},"coverage.html":{}}}],["frontend/src/payment/payment.component.ts",{"_index":926,"title":{},"body":{"components/PaymentComponent.html":{},"coverage.html":{}}}],["frontend/src/payment/payment.component.ts:102",{"_index":939,"title":{},"body":{"components/PaymentComponent.html":{}}}],["frontend/src/payment/payment.component.ts:118",{"_index":941,"title":{},"body":{"components/PaymentComponent.html":{}}}],["frontend/src/payment/payment.component.ts:140",{"_index":937,"title":{},"body":{"components/PaymentComponent.html":{}}}],["frontend/src/payment/payment.component.ts:147",{"_index":943,"title":{},"body":{"components/PaymentComponent.html":{}}}],["frontend/src/payment/payment.component.ts:247",{"_index":938,"title":{},"body":{"components/PaymentComponent.html":{}}}],["frontend/src/payment/payment.component.ts:36",{"_index":947,"title":{},"body":{"components/PaymentComponent.html":{}}}],["frontend/src/payment/payment.component.ts:37",{"_index":944,"title":{},"body":{"components/PaymentComponent.html":{}}}],["frontend/src/payment/payment.component.ts:51",{"_index":951,"title":{},"body":{"components/PaymentComponent.html":{}}}],["frontend/src/payment/payment.component.ts:52",{"_index":952,"title":{},"body":{"components/PaymentComponent.html":{}}}],["frontend/src/payment/payment.component.ts:53",{"_index":948,"title":{},"body":{"components/PaymentComponent.html":{}}}],["frontend/src/payment/payment.component.ts:54",{"_index":949,"title":{},"body":{"components/PaymentComponent.html":{}}}],["frontend/src/payment/payment.component.ts:55",{"_index":945,"title":{},"body":{"components/PaymentComponent.html":{}}}],["frontend/src/payment/payment.component.ts:56",{"_index":950,"title":{},"body":{"components/PaymentComponent.html":{}}}],["frontend/src/payment/payment.component.ts:57",{"_index":946,"title":{},"body":{"components/PaymentComponent.html":{}}}],["frontend/src/payment/payment.component.ts:58",{"_index":936,"title":{},"body":{"components/PaymentComponent.html":{}}}],["frontend/src/payment/payment.component.ts:82",{"_index":940,"title":{},"body":{"components/PaymentComponent.html":{}}}],["frontend/src/payment/payment.component.ts:86",{"_index":942,"title":{},"body":{"components/PaymentComponent.html":{}}}],["frontend/src/services/account.service.ts",{"_index":334,"title":{},"body":{"injectables/AccountService.html":{},"coverage.html":{}}}],["frontend/src/services/account.service.ts:13",{"_index":372,"title":{},"body":{"injectables/AccountService.html":{}}}],["frontend/src/services/account.service.ts:18",{"_index":367,"title":{},"body":{"injectables/AccountService.html":{}}}],["frontend/src/services/account.service.ts:29",{"_index":347,"title":{},"body":{"injectables/AccountService.html":{}}}],["frontend/src/services/account.service.ts:31",{"_index":346,"title":{},"body":{"injectables/AccountService.html":{}}}],["frontend/src/services/account.service.ts:34",{"_index":374,"title":{},"body":{"injectables/AccountService.html":{}}}],["frontend/src/services/account.service.ts:35",{"_index":373,"title":{},"body":{"injectables/AccountService.html":{}}}],["frontend/src/services/account.service.ts:36",{"_index":369,"title":{},"body":{"injectables/AccountService.html":{}}}],["frontend/src/services/account.service.ts:39",{"_index":358,"title":{},"body":{"injectables/AccountService.html":{}}}],["frontend/src/services/account.service.ts:51",{"_index":350,"title":{},"body":{"injectables/AccountService.html":{}}}],["frontend/src/services/account.service.ts:62",{"_index":354,"title":{},"body":{"injectables/AccountService.html":{}}}],["frontend/src/services/account.service.ts:73",{"_index":356,"title":{},"body":{"injectables/AccountService.html":{}}}],["frontend/src/services/account.service.ts:76",{"_index":359,"title":{},"body":{"injectables/AccountService.html":{}}}],["frontend/src/services/deposit.service.ts",{"_index":693,"title":{},"body":{"injectables/DepositService.html":{},"coverage.html":{}}}],["frontend/src/services/deposit.service.ts:8",{"_index":694,"title":{},"body":{"injectables/DepositService.html":{}}}],["frontend/src/services/payment.service.ts",{"_index":1077,"title":{},"body":{"injectables/PaymentService.html":{},"coverage.html":{}}}],["frontend/src/services/payment.service.ts:130",{"_index":1096,"title":{},"body":{"injectables/PaymentService.html":{}}}],["frontend/src/services/payment.service.ts:14",{"_index":1109,"title":{},"body":{"injectables/PaymentService.html":{}}}],["frontend/src/services/payment.service.ts:20",{"_index":1111,"title":{},"body":{"injectables/PaymentService.html":{}}}],["frontend/src/services/payment.service.ts:26",{"_index":1102,"title":{},"body":{"injectables/PaymentService.html":{}}}],["frontend/src/services/payment.service.ts:36",{"_index":1107,"title":{},"body":{"injectables/PaymentService.html":{}}}],["frontend/src/services/payment.service.ts:47",{"_index":1114,"title":{},"body":{"injectables/PaymentService.html":{}}}],["frontend/src/services/payment.service.ts:56",{"_index":1115,"title":{},"body":{"injectables/PaymentService.html":{}}}],["frontend/src/services/payment.service.ts:57",{"_index":1116,"title":{},"body":{"injectables/PaymentService.html":{}}}],["frontend/src/services/payment.service.ts:58",{"_index":1091,"title":{},"body":{"injectables/PaymentService.html":{}}}],["frontend/src/services/payment.service.ts:62",{"_index":1095,"title":{},"body":{"injectables/PaymentService.html":{}}}],["frontend/src/services/payment.service.ts:73",{"_index":1097,"title":{},"body":{"injectables/PaymentService.html":{}}}],["frontend/src/services/payment.service.ts:77",{"_index":1099,"title":{},"body":{"injectables/PaymentService.html":{}}}],["frontend/src/services/payment.service.ts:83",{"_index":1092,"title":{},"body":{"injectables/PaymentService.html":{}}}],["frontend/src/services/payment.service.ts:87",{"_index":1100,"title":{},"body":{"injectables/PaymentService.html":{}}}],["frontend/src/services/payment.service.ts:97",{"_index":1093,"title":{},"body":{"injectables/PaymentService.html":{}}}],["frontend/src/services/session.service.ts",{"_index":1157,"title":{},"body":{"injectables/SessionService.html":{},"coverage.html":{}}}],["frontend/src/services/session.service.ts:18",{"_index":1172,"title":{},"body":{"injectables/SessionService.html":{}}}],["frontend/src/services/session.service.ts:29",{"_index":1169,"title":{},"body":{"injectables/SessionService.html":{}}}],["frontend/src/services/session.service.ts:38",{"_index":1175,"title":{},"body":{"injectables/SessionService.html":{}}}],["frontend/src/services/session.service.ts:46",{"_index":1181,"title":{},"body":{"injectables/SessionService.html":{}}}],["frontend/src/services/session.service.ts:53",{"_index":1178,"title":{},"body":{"injectables/SessionService.html":{}}}],["frontend/src/services/session.service.ts:61",{"_index":1168,"title":{},"body":{"injectables/SessionService.html":{}}}],["frontend/src/services/session.service.ts:8",{"_index":1185,"title":{},"body":{"injectables/SessionService.html":{}}}],["frontend/src/services/session.service.ts:9",{"_index":1167,"title":{},"body":{"injectables/SessionService.html":{}}}],["frontend/src/services/token",{"_index":1211,"title":{},"body":{"injectables/TokenStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["frontend/src/services/websocket.service.ts",{"_index":1272,"title":{},"body":{"injectables/WebsocketService.html":{},"coverage.html":{}}}],["frontend/src/services/websocket.service.ts:104",{"_index":1318,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["frontend/src/services/websocket.service.ts:118",{"_index":1289,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["frontend/src/services/websocket.service.ts:127",{"_index":1294,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["frontend/src/services/websocket.service.ts:14",{"_index":1321,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["frontend/src/services/websocket.service.ts:15",{"_index":1323,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["frontend/src/services/websocket.service.ts:16",{"_index":1322,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["frontend/src/services/websocket.service.ts:163",{"_index":1307,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["frontend/src/services/websocket.service.ts:17",{"_index":1320,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["frontend/src/services/websocket.service.ts:175",{"_index":1285,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["frontend/src/services/websocket.service.ts:18",{"_index":1284,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["frontend/src/services/websocket.service.ts:186",{"_index":1296,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["frontend/src/services/websocket.service.ts:41",{"_index":1298,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["frontend/src/services/websocket.service.ts:85",{"_index":1313,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["fs",{"_index":108,"title":{},"body":{"components/AccountComponent.html":{}}}],["full",{"_index":493,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["funciona",{"_index":501,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["función",{"_index":212,"title":{},"body":{"components/AccountComponent.html":{},"injectables/WebsocketService.html":{}}}],["function",{"_index":1460,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1489,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gap",{"_index":271,"title":{},"body":{"components/AccountComponent.html":{}}}],["genera",{"_index":1003,"title":{},"body":{"components/PaymentComponent.html":{},"injectables/SessionService.html":{}}}],["generado",{"_index":1070,"title":{},"body":{"components/PaymentComponent.html":{}}}],["generar",{"_index":1076,"title":{},"body":{"components/PaymentComponent.html":{}}}],["generarcodigo",{"_index":935,"title":{},"body":{"components/PaymentComponent.html":{}}}],["generateuuid",{"_index":1163,"title":{},"body":{"injectables/SessionService.html":{},"injectables/TokenStorageService.html":{}}}],["getaccount",{"_index":338,"title":{},"body":{"injectables/AccountService.html":{}}}],["getconnection",{"_index":1418,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["getdata",{"_index":38,"title":{},"body":{"components/AccountComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{}}}],["getid",{"_index":1215,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["getinstance",{"_index":1333,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["getisconnected",{"_index":1335,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["getpaymentmessages",{"_index":1084,"title":{},"body":{"injectables/PaymentService.html":{}}}],["getpaymentnotification",{"_index":1085,"title":{},"body":{"injectables/PaymentService.html":{}}}],["getpaymentsbyuser",{"_index":1086,"title":{},"body":{"injectables/PaymentService.html":{}}}],["getpaymentsbyuser(user",{"_index":1094,"title":{},"body":{"injectables/PaymentService.html":{}}}],["getpaymentsmock",{"_index":1087,"title":{},"body":{"injectables/PaymentService.html":{}}}],["getpaymentsobservable",{"_index":1088,"title":{},"body":{"injectables/PaymentService.html":{}}}],["getpaymetsbyuser",{"_index":1118,"title":{},"body":{"injectables/PaymentService.html":{}}}],["getrecipientemails",{"_index":1147,"title":{},"body":{"injectables/PaymentService.html":{}}}],["getsessionid",{"_index":1164,"title":{},"body":{"injectables/SessionService.html":{}}}],["getting",{"_index":1492,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":1216,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["getuser",{"_index":1165,"title":{},"body":{"injectables/SessionService.html":{}}}],["getuserbyid",{"_index":340,"title":{},"body":{"injectables/AccountService.html":{}}}],["getuserbyid(userid",{"_index":348,"title":{},"body":{"injectables/AccountService.html":{}}}],["getuserlogin",{"_index":341,"title":{},"body":{"injectables/AccountService.html":{}}}],["getuserlogin(loginmessage",{"_index":352,"title":{},"body":{"injectables/AccountService.html":{}}}],["getusername",{"_index":1217,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["getuserobservable",{"_index":342,"title":{},"body":{"injectables/AccountService.html":{}}}],["getusers",{"_index":343,"title":{},"body":{"injectables/AccountService.html":{}}}],["getusersobservable",{"_index":344,"title":{},"body":{"injectables/AccountService.html":{}}}],["goback",{"_index":549,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["graph",{"_index":1599,"title":{},"body":{"modules.html":{}}}],["guarda",{"_index":1182,"title":{},"body":{"injectables/SessionService.html":{}}}],["guardados",{"_index":784,"title":{},"body":{"components/LoginComponent.html":{}}}],["guardar",{"_index":213,"title":{},"body":{"components/AccountComponent.html":{}}}],["ha",{"_index":1000,"title":{},"body":{"components/PaymentComponent.html":{},"injectables/WebsocketService.html":{}}}],["hacer",{"_index":169,"title":{},"body":{"components/AccountComponent.html":{}}}],["hacia",{"_index":649,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["handle",{"_index":1495,"title":{},"body":{"index.html":{}}}],["handleresponse",{"_index":1152,"title":{},"body":{"injectables/PaymentService.html":{}}}],["handles",{"_index":1562,"title":{},"body":{"index.html":{}}}],["handling",{"_index":1526,"title":{},"body":{"index.html":{}}}],["hay",{"_index":248,"title":{},"body":{"components/AccountComponent.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{},"injectables/WebsocketService.html":{}}}],["header",{"_index":658,"title":{},"body":{"components/DepositComponent.html":{},"components/HeaderComponent.html":{},"components/PaymentComponent.html":{}}}],["header'},{'name",{"_index":295,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/DepositComponent.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{}}}],["header.component.css",{"_index":709,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.html",{"_index":708,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.component",{"_index":432,"title":{},"body":{"components/AppComponent.html":{}}}],["headercomponent",{"_index":294,"title":{"components/HeaderComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/DepositComponent.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{},"coverage.html":{}}}],["headers",{"_index":529,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["heartbeatincoming",{"_index":1394,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["heartbeatoutgoing",{"_index":1396,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["hecho",{"_index":593,"title":{},"body":{"components/DepositComponent.html":{}}}],["height",{"_index":450,"title":{},"body":{"components/AppComponent.html":{},"components/DepositComponent.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{}}}],["hide",{"_index":723,"title":{},"body":{"components/LoginComponent.html":{}}}],["hidratación",{"_index":118,"title":{},"body":{"components/AccountComponent.html":{}}}],["high",{"_index":1511,"title":{},"body":{"index.html":{}}}],["historial",{"_index":198,"title":{},"body":{"components/AccountComponent.html":{}}}],["historialpagos",{"_index":217,"title":{},"body":{"components/AccountComponent.html":{}}}],["histories",{"_index":1595,"title":{},"body":{"index.html":{}}}],["hoja",{"_index":200,"title":{},"body":{"components/AccountComponent.html":{}}}],["host",{"_index":14,"title":{},"body":{"components/AccountComponent.html":{}}}],["html",{"_index":279,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/DepositComponent.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{}}}],["html,body",{"_index":854,"title":{},"body":{"components/LoginComponent.html":{}}}],["http",{"_index":500,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/DepositService.html":{}}}],["http://localhost:8080/login",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{}}}],["http_interceptors",{"_index":487,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["httpclient",{"_index":375,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{},"injectables/DepositService.html":{}}}],["httpclientmodule",{"_index":464,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["httpheaders",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["httpinterceptorproviders",{"_index":466,"title":{},"body":{"modules/AppModule.html":{}}}],["httpoptions",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httpoptions).pipe",{"_index":532,"title":{},"body":{"injectables/AuthService.html":{}}}],["id",{"_index":73,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AccountService.html":{},"interfaces/Balance.html":{},"components/NotificationComponent.html":{},"interfaces/Payment.html":{},"components/PaymentComponent.html":{},"interfaces/PaymentMessage.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"interfaces/State.html":{},"interfaces/User.html":{}}}],["id:0",{"_index":370,"title":{},"body":{"injectables/AccountService.html":{},"components/PaymentComponent.html":{}}}],["identificador",{"_index":1337,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["identifier",{"_index":1457,"title":{},"body":{"coverage.html":{}}}],["idoperacion",{"_index":1336,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["idtoken",{"_index":1238,"title":{},"body":{"injectables/TokenStorageService.html":{},"miscellaneous/variables.html":{}}}],["if(message.userid",{"_index":839,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(payments",{"_index":230,"title":{},"body":{"components/AccountComponent.html":{}}}],["if(this.tries",{"_index":599,"title":{},"body":{"components/DepositComponent.html":{}}}],["if(users",{"_index":973,"title":{},"body":{"components/PaymentComponent.html":{}}}],["immediate",{"_index":1584,"title":{},"body":{"index.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AccountComponent.html":{},"components/DepositComponent.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{}}}],["import",{"_index":96,"title":{},"body":{"components/AccountComponent.html":{},"modules/AccountModule.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/DepositComponent.html":{},"modules/DepositModule.html":{},"injectables/DepositService.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/NotificationComponent.html":{},"interfaces/Payment.html":{},"components/PaymentComponent.html":{},"interfaces/PaymentMessage.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"interfaces/State.html":{},"injectables/TokenStorageService.html":{},"injectables/WebsocketService.html":{}}}],["importa",{"_index":322,"title":{},"body":{"modules/AccountModule.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{}}}],["importado",{"_index":480,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["importar",{"_index":463,"title":{},"body":{"modules/AppModule.html":{}}}],["imports",{"_index":21,"title":{},"body":{"components/AccountComponent.html":{},"modules/AccountModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DepositComponent.html":{},"modules/DepositModule.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{}}}],["improving",{"_index":1569,"title":{},"body":{"index.html":{}}}],["index",{"_index":29,"title":{"index.html":{}},"body":{"components/AccountComponent.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Balance.html":{},"components/DepositComponent.html":{},"classes/JwtResponse.html":{},"interfaces/LogMessage.html":{},"components/LoginComponent.html":{},"classes/LoginInfo.html":{},"components/NotificationComponent.html":{},"interfaces/Payment.html":{},"components/PaymentComponent.html":{},"interfaces/PaymentMessage.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"interfaces/State.html":{},"injectables/TokenStorageService.html":{},"interfaces/User.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["indexes/searches",{"_index":1560,"title":{},"body":{"index.html":{}}}],["indexing",{"_index":1540,"title":{},"body":{"index.html":{}}}],["individual",{"_index":1432,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AccountComponent.html":{},"modules/AccountModule.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/Balance.html":{},"components/DepositComponent.html":{},"modules/DepositModule.html":{},"injectables/DepositService.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"classes/JwtResponse.html":{},"interfaces/LogMessage.html":{},"components/LoginComponent.html":{},"classes/LoginInfo.html":{},"modules/MaterialModule.html":{},"components/NotificationComponent.html":{},"interfaces/Payment.html":{},"components/PaymentComponent.html":{},"interfaces/PaymentMessage.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"interfaces/State.html":{},"injectables/TokenStorageService.html":{},"interfaces/User.html":{},"injectables/WebsocketService.html":{}}}],["info.ts",{"_index":857,"title":{},"body":{"classes/LoginInfo.html":{},"coverage.html":{}}}],["info.ts:3",{"_index":860,"title":{},"body":{"classes/LoginInfo.html":{}}}],["info.ts:4",{"_index":859,"title":{},"body":{"classes/LoginInfo.html":{}}}],["información",{"_index":1183,"title":{},"body":{"injectables/SessionService.html":{}}}],["inicial",{"_index":1030,"title":{},"body":{"components/PaymentComponent.html":{}}}],["inicializa",{"_index":1345,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["inicialización",{"_index":568,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["inicializado",{"_index":1369,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["inicialízalo",{"_index":1020,"title":{},"body":{"components/PaymentComponent.html":{}}}],["inicio",{"_index":786,"title":{},"body":{"components/LoginComponent.html":{},"components/PaymentComponent.html":{},"injectables/PaymentService.html":{}}}],["initialized",{"_index":123,"title":{},"body":{"components/AccountComponent.html":{},"components/PaymentComponent.html":{}}}],["inits",{"_index":1295,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["initsocket",{"_index":1279,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["initsocket(url",{"_index":1293,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["inject",{"_index":900,"title":{},"body":{"components/NotificationComponent.html":{}}}],["inject(matsnackbar",{"_index":899,"title":{},"body":{"components/NotificationComponent.html":{}}}],["injectable",{"_index":332,"title":{"injectables/AccountService.html":{},"injectables/AuthService.html":{},"injectables/DepositService.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"injectables/TokenStorageService.html":{},"injectables/WebsocketService.html":{}},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{},"injectables/DepositService.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"injectables/TokenStorageService.html":{},"injectables/WebsocketService.html":{},"coverage.html":{}}}],["injectables",{"_index":333,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{},"injectables/DepositService.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"injectables/TokenStorageService.html":{},"injectables/WebsocketService.html":{},"overview.html":{}}}],["instance",{"_index":1329,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["instant",{"_index":1549,"title":{},"body":{"index.html":{}}}],["integrity",{"_index":1573,"title":{},"body":{"index.html":{}}}],["intentar",{"_index":1354,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["interact",{"_index":1519,"title":{},"body":{"index.html":{}}}],["interacts",{"_index":1544,"title":{},"body":{"index.html":{}}}],["interceptor",{"_index":468,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["interface",{"_index":541,"title":{"interfaces/Balance.html":{},"interfaces/LogMessage.html":{},"interfaces/Payment.html":{},"interfaces/PaymentMessage.html":{},"interfaces/State.html":{},"interfaces/User.html":{}},"body":{"interfaces/Balance.html":{},"interfaces/LogMessage.html":{},"interfaces/Payment.html":{},"interfaces/PaymentMessage.html":{},"interfaces/State.html":{},"interfaces/User.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":542,"title":{},"body":{"interfaces/Balance.html":{},"interfaces/LogMessage.html":{},"interfaces/Payment.html":{},"interfaces/PaymentMessage.html":{},"interfaces/State.html":{},"interfaces/User.html":{},"overview.html":{}}}],["invalido",{"_index":1057,"title":{},"body":{"components/PaymentComponent.html":{}}}],["inyecta",{"_index":766,"title":{},"body":{"components/LoginComponent.html":{}}}],["isconnected",{"_index":161,"title":{},"body":{"components/AccountComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{},"injectables/WebsocketService.html":{}}}],["isloggedin",{"_index":724,"title":{},"body":{"components/LoginComponent.html":{}}}],["isloginfailed",{"_index":725,"title":{},"body":{"components/LoginComponent.html":{}}}],["isnan(amount",{"_index":613,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["istokenvalid",{"_index":1218,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["istokenvalid(token",{"_index":1227,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["items",{"_index":257,"title":{},"body":{"components/AccountComponent.html":{},"components/DepositComponent.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{}}}],["java",{"_index":1541,"title":{},"body":{"index.html":{}}}],["joinroom(userid",{"_index":1132,"title":{},"body":{"injectables/PaymentService.html":{}}}],["json.parse(message",{"_index":1135,"title":{},"body":{"injectables/PaymentService.html":{}}}],["json.parse(message.body",{"_index":1425,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["json.parse(userdata",{"_index":1208,"title":{},"body":{"injectables/SessionService.html":{}}}],["json.stringify(message",{"_index":1409,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["json.stringify(user",{"_index":1205,"title":{},"body":{"injectables/SessionService.html":{}}}],["justify",{"_index":855,"title":{},"body":{"components/LoginComponent.html":{}}}],["jwt",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TokenStorageService.html":{}}}],["jwtresponse",{"_index":525,"title":{"classes/JwtResponse.html":{}},"body":{"injectables/AuthService.html":{},"classes/JwtResponse.html":{},"coverage.html":{}}}],["key",{"_index":587,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["la",{"_index":117,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AccountService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DepositComponent.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"injectables/WebsocketService.html":{}}}],["large",{"_index":1496,"title":{},"body":{"index.html":{}}}],["left",{"_index":605,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["legend",{"_index":278,"title":{},"body":{"components/AccountComponent.html":{},"modules/AccountModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DepositComponent.html":{},"modules/DepositModule.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{},"overview.html":{}}}],["length",{"_index":1271,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["leverages",{"_index":1501,"title":{},"body":{"index.html":{}}}],["light",{"_index":670,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["limpia",{"_index":139,"title":{},"body":{"components/AccountComponent.html":{},"injectables/SessionService.html":{}}}],["list",{"_index":272,"title":{},"body":{"components/AccountComponent.html":{}}}],["lista",{"_index":386,"title":{},"body":{"injectables/AccountService.html":{},"injectables/WebsocketService.html":{}}}],["literal",{"_index":558,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["llamar",{"_index":211,"title":{},"body":{"components/AccountComponent.html":{},"components/PaymentComponent.html":{}}}],["lo",{"_index":1022,"title":{},"body":{"components/PaymentComponent.html":{},"injectables/SessionService.html":{}}}],["localstorage.getitem('loginnotification",{"_index":126,"title":{},"body":{"components/AccountComponent.html":{}}}],["localstorage.getitem(token_id",{"_index":1264,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["localstorage.removeitem('loginnotification",{"_index":138,"title":{},"body":{"components/AccountComponent.html":{}}}],["localstorage.setitem('loginnotification",{"_index":821,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.setitem(token_id",{"_index":1262,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["log",{"_index":238,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AuthService.html":{},"components/DepositComponent.html":{},"components/PaymentComponent.html":{},"injectables/TokenStorageService.html":{}}}],["logic",{"_index":1525,"title":{},"body":{"index.html":{}}}],["login",{"_index":491,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/PaymentService.html":{}}}],["login'},{'name",{"_index":297,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/DepositComponent.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{}}}],["login(message",{"_index":742,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.css",{"_index":720,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":721,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":472,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["logincomponent",{"_index":296,"title":{"components/LoginComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DepositComponent.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logindata",{"_index":726,"title":{},"body":{"components/LoginComponent.html":{}}}],["logininfo",{"_index":516,"title":{"classes/LoginInfo.html":{}},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"classes/LoginInfo.html":{},"coverage.html":{}}}],["logininfo(this.form.username",{"_index":826,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginmessage",{"_index":355,"title":{},"body":{"injectables/AccountService.html":{},"components/LoginComponent.html":{}}}],["loginservice",{"_index":762,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginsuccessmessage",{"_index":727,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginurl",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{}}}],["logmessage",{"_index":353,"title":{"interfaces/LogMessage.html":{}},"body":{"injectables/AccountService.html":{},"interfaces/LogMessage.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["long",{"_index":633,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["los",{"_index":179,"title":{},"body":{"components/AccountComponent.html":{},"modules/AccountModule.html":{},"injectables/AccountService.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/PaymentComponent.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"injectables/WebsocketService.html":{}}}],["lugar",{"_index":1412,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["lógica",{"_index":1438,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["main",{"_index":684,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["maintaining",{"_index":1535,"title":{},"body":{"index.html":{}}}],["make",{"_index":1074,"title":{},"body":{"components/PaymentComponent.html":{}}}],["makedeposit",{"_index":39,"title":{},"body":{"components/AccountComponent.html":{}}}],["makepayment",{"_index":40,"title":{},"body":{"components/AccountComponent.html":{}}}],["manage",{"_index":1589,"title":{},"body":{"index.html":{}}}],["manages",{"_index":1551,"title":{},"body":{"index.html":{}}}],["managing",{"_index":1524,"title":{},"body":{"index.html":{}}}],["maneja",{"_index":1150,"title":{},"body":{"injectables/PaymentService.html":{}}}],["manejar",{"_index":498,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{}}}],["map",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{},"injectables/WebsocketService.html":{}}}],["map(response",{"_index":533,"title":{},"body":{"injectables/AuthService.html":{}}}],["marca",{"_index":1400,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["margen",{"_index":661,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["margin",{"_index":266,"title":{},"body":{"components/AccountComponent.html":{},"components/DepositComponent.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{}}}],["mat",{"_index":275,"title":{},"body":{"components/AccountComponent.html":{},"components/LoginComponent.html":{}}}],["matbuttonmodule",{"_index":868,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcardmodule",{"_index":883,"title":{},"body":{"modules/MaterialModule.html":{}}}],["match",{"_index":604,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["matching",{"_index":304,"title":{},"body":{"components/AccountComponent.html":{},"modules/AccountModule.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/Balance.html":{},"components/DepositComponent.html":{},"modules/DepositModule.html":{},"injectables/DepositService.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"classes/JwtResponse.html":{},"interfaces/LogMessage.html":{},"components/LoginComponent.html":{},"classes/LoginInfo.html":{},"modules/MaterialModule.html":{},"components/NotificationComponent.html":{},"interfaces/Payment.html":{},"components/PaymentComponent.html":{},"interfaces/PaymentMessage.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"interfaces/State.html":{},"injectables/TokenStorageService.html":{},"interfaces/User.html":{},"injectables/WebsocketService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["material/material.module",{"_index":430,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{}}}],["materialmodule",{"_index":24,"title":{"modules/MaterialModule.html":{}},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DepositComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/PaymentComponent.html":{},"modules.html":{},"overview.html":{}}}],["matformfieldmodule",{"_index":878,"title":{},"body":{"modules/MaterialModule.html":{}}}],["math.floor(100000",{"_index":1061,"title":{},"body":{"components/PaymentComponent.html":{}}}],["math.random",{"_index":1062,"title":{},"body":{"components/PaymentComponent.html":{},"injectables/SessionService.html":{},"injectables/TokenStorageService.html":{}}}],["maticonmodule",{"_index":872,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodule",{"_index":881,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodule",{"_index":876,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matoption",{"_index":865,"title":{},"body":{"modules/MaterialModule.html":{},"overview.html":{}}}],["matselect",{"_index":866,"title":{},"body":{"modules/MaterialModule.html":{},"overview.html":{}}}],["matsidenavmodule",{"_index":874,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbar",{"_index":888,"title":{},"body":{"modules/MaterialModule.html":{},"components/NotificationComponent.html":{}}}],["mattablemodule",{"_index":885,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodule",{"_index":870,"title":{},"body":{"modules/MaterialModule.html":{}}}],["max",{"_index":264,"title":{},"body":{"components/AccountComponent.html":{},"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["maximum",{"_index":608,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["maxtwodecimals",{"_index":591,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["maxtwodecimalvalidator",{"_index":550,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["maxtwodecimalvalidator(control",{"_index":555,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["mejor",{"_index":131,"title":{},"body":{"components/AccountComponent.html":{}}}],["menos",{"_index":574,"title":{},"body":{"components/DepositComponent.html":{}}}],["mensaje",{"_index":808,"title":{},"body":{"components/LoginComponent.html":{},"components/PaymentComponent.html":{},"injectables/WebsocketService.html":{}}}],["mensajes",{"_index":1125,"title":{},"body":{"injectables/PaymentService.html":{},"injectables/WebsocketService.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":1619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":400,"title":{},"body":{"injectables/AccountService.html":{},"components/LoginComponent.html":{},"injectables/PaymentService.html":{},"injectables/WebsocketService.html":{}}}],["message.body",{"_index":1446,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["messagecontent",{"_index":1134,"title":{},"body":{"injectables/PaymentService.html":{}}}],["messagecontent.sender.email",{"_index":1143,"title":{},"body":{"injectables/PaymentService.html":{}}}],["messaging",{"_index":1509,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/DepositComponent.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{}}}],["methods",{"_index":36,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AccountService.html":{},"injectables/AuthService.html":{},"components/DepositComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"injectables/TokenStorageService.html":{},"injectables/WebsocketService.html":{}}}],["min",{"_index":449,"title":{},"body":{"components/AppComponent.html":{}}}],["miscellaneous",{"_index":1488,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mismos",{"_index":891,"title":{},"body":{"modules/MaterialModule.html":{}}}],["models/account.model",{"_index":101,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AccountService.html":{},"components/DepositComponent.html":{},"components/PaymentComponent.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{}}}],["models/login.model",{"_index":379,"title":{},"body":{"injectables/AccountService.html":{},"components/LoginComponent.html":{}}}],["models/payment.model",{"_index":106,"title":{},"body":{"components/AccountComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{},"injectables/PaymentService.html":{},"injectables/WebsocketService.html":{}}}],["modern",{"_index":1502,"title":{},"body":{"index.html":{}}}],["modificamos",{"_index":570,"title":{},"body":{"components/DepositComponent.html":{}}}],["module",{"_index":305,"title":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DepositModule.html":{},"modules/MaterialModule.html":{}},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/DepositModule.html":{},"modules/MaterialModule.html":{},"overview.html":{}}}],["modules",{"_index":307,"title":{"modules.html":{}},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DepositModule.html":{},"modules/MaterialModule.html":{},"modules.html":{},"overview.html":{}}}],["money",{"_index":619,"title":{},"body":{"components/DepositComponent.html":{}}}],["monto",{"_index":919,"title":{},"body":{"interfaces/Payment.html":{},"interfaces/PaymentMessage.html":{},"interfaces/State.html":{}}}],["mostrar",{"_index":136,"title":{},"body":{"components/AccountComponent.html":{}}}],["mostrarla",{"_index":141,"title":{},"body":{"components/AccountComponent.html":{}}}],["mouseevent",{"_index":737,"title":{},"body":{"components/LoginComponent.html":{}}}],["ms",{"_index":984,"title":{},"body":{"components/PaymentComponent.html":{}}}],["msg",{"_index":1382,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["muestra",{"_index":1067,"title":{},"body":{"components/PaymentComponent.html":{}}}],["multi",{"_index":509,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["multiple",{"_index":1567,"title":{},"body":{"index.html":{}}}],["mysql",{"_index":1532,"title":{},"body":{"index.html":{}}}],["más",{"_index":643,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["método",{"_index":1144,"title":{},"body":{"injectables/PaymentService.html":{}}}],["módulos",{"_index":324,"title":{},"body":{"modules/AccountModule.html":{},"modules/MaterialModule.html":{}}}],["n/a",{"_index":195,"title":{},"body":{"components/AccountComponent.html":{}}}],["name",{"_index":55,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Balance.html":{},"components/DepositComponent.html":{},"injectables/DepositService.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"classes/LoginInfo.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"injectables/TokenStorageService.html":{},"interfaces/User.html":{},"injectables/WebsocketService.html":{}}}],["navega",{"_index":167,"title":{},"body":{"components/AccountComponent.html":{}}}],["nbsp",{"_index":625,"title":{},"body":{"components/DepositComponent.html":{}}}],["necesario",{"_index":652,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["necesitas",{"_index":330,"title":{},"body":{"modules/AccountModule.html":{},"components/PaymentComponent.html":{}}}],["necesites",{"_index":326,"title":{},"body":{"modules/AccountModule.html":{},"modules/MaterialModule.html":{}}}],["new",{"_index":81,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AccountService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{},"injectables/PaymentService.html":{},"injectables/WebsocketService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngform",{"_index":760,"title":{},"body":{"components/LoginComponent.html":{}}}],["ngif",{"_index":719,"title":{},"body":{"components/LoginComponent.html":{}}}],["ngmodule",{"_index":319,"title":{},"body":{"modules/AccountModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DepositModule.html":{},"modules/MaterialModule.html":{}}}],["ngoninit",{"_index":41,"title":{},"body":{"components/AccountComponent.html":{},"components/DepositComponent.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{}}}],["ngoptimizedimage",{"_index":429,"title":{},"body":{"components/AppComponent.html":{}}}],["ngskiphydration",{"_index":115,"title":{},"body":{"components/AccountComponent.html":{}}}],["nico",{"_index":1173,"title":{},"body":{"injectables/SessionService.html":{}}}],["nos",{"_index":1338,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["notificacion",{"_index":902,"title":{},"body":{"components/NotificationComponent.html":{}}}],["notificación",{"_index":137,"title":{},"body":{"components/AccountComponent.html":{},"components/LoginComponent.html":{},"injectables/PaymentService.html":{}}}],["notification",{"_index":125,"title":{},"body":{"components/AccountComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{}}}],["notification'},{'name",{"_index":299,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/DepositComponent.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{}}}],["notification.component.css",{"_index":894,"title":{},"body":{"components/NotificationComponent.html":{}}}],["notification.component.html",{"_index":893,"title":{},"body":{"components/NotificationComponent.html":{}}}],["notification/notification.component",{"_index":433,"title":{},"body":{"components/AppComponent.html":{}}}],["notificationcomponent",{"_index":298,"title":{"components/NotificationComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/DepositComponent.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{},"coverage.html":{}}}],["nuevo",{"_index":1004,"title":{},"body":{"components/PaymentComponent.html":{}}}],["null",{"_index":559,"title":{},"body":{"components/DepositComponent.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{},"injectables/SessionService.html":{},"injectables/WebsocketService.html":{}}}],["number",{"_index":349,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/Balance.html":{},"components/DepositComponent.html":{},"interfaces/LogMessage.html":{},"interfaces/Payment.html":{},"components/PaymentComponent.html":{},"interfaces/PaymentMessage.html":{},"interfaces/State.html":{},"injectables/TokenStorageService.html":{},"interfaces/User.html":{}}}],["number('xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g",{"_index":1250,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["number(token",{"_index":1265,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["numbers",{"_index":1590,"title":{},"body":{"index.html":{}}}],["o",{"_index":1017,"title":{},"body":{"components/PaymentComponent.html":{},"injectables/WebsocketService.html":{}}}],["object",{"_index":1621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objeto",{"_index":1027,"title":{},"body":{"components/PaymentComponent.html":{},"injectables/SessionService.html":{}}}],["observable",{"_index":357,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{},"injectables/DepositService.html":{},"injectables/PaymentService.html":{},"injectables/WebsocketService.html":{}}}],["obtener",{"_index":385,"title":{},"body":{"injectables/AccountService.html":{},"injectables/PaymentService.html":{}}}],["obtiene",{"_index":1176,"title":{},"body":{"injectables/SessionService.html":{}}}],["obtienes",{"_index":1014,"title":{},"body":{"components/PaymentComponent.html":{}}}],["officedocument.spreadsheetml.sheet;charset=utf",{"_index":90,"title":{},"body":{"components/AccountComponent.html":{}}}],["official",{"_index":435,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{}}}],["onconnect",{"_index":1366,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["onconnectionready",{"_index":1280,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AccountComponent.html":{},"components/DepositComponent.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{}}}],["onstomperror",{"_index":1397,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["onsubmit",{"_index":551,"title":{},"body":{"components/DepositComponent.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{}}}],["onwebsocketclose",{"_index":1401,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["opción",{"_index":132,"title":{},"body":{"components/AccountComponent.html":{}}}],["openconnection",{"_index":1281,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["openconnection(sesionid",{"_index":1297,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["opens",{"_index":1299,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["operations",{"_index":1530,"title":{},"body":{"index.html":{}}}],["option",{"_index":623,"title":{},"body":{"components/DepositComponent.html":{}}}],["optional",{"_index":57,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/DepositComponent.html":{},"injectables/DepositService.html":{},"classes/JwtResponse.html":{},"components/LoginComponent.html":{},"classes/LoginInfo.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"injectables/TokenStorageService.html":{},"injectables/WebsocketService.html":{}}}],["otro",{"_index":834,"title":{},"body":{"components/LoginComponent.html":{},"components/PaymentComponent.html":{}}}],["otros",{"_index":323,"title":{},"body":{"modules/AccountModule.html":{},"components/DepositComponent.html":{},"modules/MaterialModule.html":{},"components/PaymentComponent.html":{}}}],["out",{"_index":239,"title":{},"body":{"components/AccountComponent.html":{},"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/DepositModule.html":{},"modules/MaterialModule.html":{},"overview.html":{}}}],["outlet",{"_index":448,"title":{},"body":{"components/AppComponent.html":{}}}],["overview",{"_index":1601,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["ovi@xeridia.com",{"_index":364,"title":{},"body":{"injectables/AccountService.html":{},"injectables/PaymentService.html":{}}}],["ovidiu",{"_index":361,"title":{},"body":{"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"injectables/PaymentService.html":{}}}],["padding",{"_index":259,"title":{},"body":{"components/AccountComponent.html":{},"components/DepositComponent.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{}}}],["page",{"_index":250,"title":{},"body":{"components/AccountComponent.html":{}}}],["pagina",{"_index":699,"title":{},"body":{"components/DevComponent.html":{},"components/LoginComponent.html":{}}}],["pago",{"_index":171,"title":{},"body":{"components/AccountComponent.html":{},"components/NotificationComponent.html":{},"interfaces/Payment.html":{},"components/PaymentComponent.html":{},"interfaces/PaymentMessage.html":{},"injectables/PaymentService.html":{},"interfaces/State.html":{},"injectables/WebsocketService.html":{}}}],["pagos",{"_index":199,"title":{},"body":{"components/AccountComponent.html":{},"injectables/WebsocketService.html":{}}}],["para",{"_index":135,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AccountService.html":{},"modules/AppRoutingModule.html":{},"components/DepositComponent.html":{},"components/DevComponent.html":{},"components/LoginComponent.html":{},"interfaces/Payment.html":{},"components/PaymentComponent.html":{},"interfaces/PaymentMessage.html":{},"injectables/PaymentService.html":{},"interfaces/State.html":{},"injectables/TokenStorageService.html":{},"injectables/WebsocketService.html":{}}}],["param",{"_index":1203,"title":{},"body":{"injectables/SessionService.html":{},"injectables/WebsocketService.html":{}}}],["parameters",{"_index":54,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/DepositComponent.html":{},"injectables/DepositService.html":{},"components/LoginComponent.html":{},"classes/LoginInfo.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"injectables/TokenStorageService.html":{},"injectables/WebsocketService.html":{}}}],["params['userid",{"_index":773,"title":{},"body":{"components/LoginComponent.html":{},"components/PaymentComponent.html":{}}}],["parsedmessage",{"_index":1424,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["parsefloat(control.value",{"_index":977,"title":{},"body":{"components/PaymentComponent.html":{}}}],["parsefloat(this.depositform.get('amount')?.value",{"_index":612,"title":{},"body":{"components/DepositComponent.html":{}}}],["parsefloat(this.paymentform.get('amount')?.value",{"_index":1008,"title":{},"body":{"components/PaymentComponent.html":{}}}],["pasa",{"_index":844,"title":{},"body":{"components/LoginComponent.html":{},"components/PaymentComponent.html":{}}}],["password",{"_index":76,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AccountService.html":{},"interfaces/Balance.html":{},"components/DepositComponent.html":{},"interfaces/LogMessage.html":{},"components/LoginComponent.html":{},"classes/LoginInfo.html":{},"components/PaymentComponent.html":{},"injectables/PaymentService.html":{},"interfaces/User.html":{}}}],["path",{"_index":489,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":492,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["payment",{"_index":93,"title":{"interfaces/Payment.html":{}},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DepositComponent.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"interfaces/Payment.html":{},"components/PaymentComponent.html":{},"interfaces/PaymentMessage.html":{},"injectables/PaymentService.html":{},"interfaces/State.html":{},"coverage.html":{},"index.html":{}}}],["payment.amount",{"_index":190,"title":{},"body":{"components/AccountComponent.html":{}}}],["payment.component.css",{"_index":927,"title":{},"body":{"components/PaymentComponent.html":{}}}],["payment.component.html",{"_index":928,"title":{},"body":{"components/PaymentComponent.html":{}}}],["payment.date",{"_index":193,"title":{},"body":{"components/AccountComponent.html":{}}}],["payment.id",{"_index":909,"title":{},"body":{"components/NotificationComponent.html":{}}}],["payment.receiver.name",{"_index":188,"title":{},"body":{"components/AccountComponent.html":{}}}],["payment.sender.name",{"_index":187,"title":{},"body":{"components/AccountComponent.html":{}}}],["payment.state.description",{"_index":192,"title":{},"body":{"components/AccountComponent.html":{},"components/NotificationComponent.html":{}}}],["payment/payment.component",{"_index":471,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["paymentcomponent",{"_index":300,"title":{"components/PaymentComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DepositComponent.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["paymentdata",{"_index":913,"title":{},"body":{"interfaces/Payment.html":{},"components/PaymentComponent.html":{},"interfaces/PaymentMessage.html":{},"interfaces/State.html":{}}}],["paymentform",{"_index":932,"title":{},"body":{"components/PaymentComponent.html":{}}}],["paymenthistory",{"_index":34,"title":{},"body":{"components/AccountComponent.html":{},"injectables/PaymentService.html":{}}}],["paymentmessage",{"_index":105,"title":{"interfaces/PaymentMessage.html":{}},"body":{"components/AccountComponent.html":{},"interfaces/Payment.html":{},"components/PaymentComponent.html":{},"interfaces/PaymentMessage.html":{},"injectables/PaymentService.html":{},"interfaces/State.html":{},"injectables/WebsocketService.html":{},"coverage.html":{}}}],["paymentnotification",{"_index":1081,"title":{},"body":{"injectables/PaymentService.html":{}}}],["paymentobservable",{"_index":35,"title":{},"body":{"components/AccountComponent.html":{}}}],["paymentresponse",{"_index":1154,"title":{},"body":{"injectables/PaymentService.html":{}}}],["paymentresponse.receiver.name",{"_index":1156,"title":{},"body":{"injectables/PaymentService.html":{}}}],["payments",{"_index":231,"title":{},"body":{"components/AccountComponent.html":{},"index.html":{}}}],["paymentservice",{"_index":47,"title":{"injectables/PaymentService.html":{}},"body":{"components/AccountComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{},"injectables/PaymentService.html":{},"coverage.html":{}}}],["paymentssubject",{"_index":1082,"title":{},"body":{"injectables/PaymentService.html":{}}}],["paymentsubject",{"_index":1083,"title":{},"body":{"injectables/PaymentService.html":{}}}],["pedir",{"_index":164,"title":{},"body":{"components/AccountComponent.html":{}}}],["pendiente",{"_index":921,"title":{},"body":{"interfaces/Payment.html":{},"components/PaymentComponent.html":{},"interfaces/PaymentMessage.html":{},"interfaces/State.html":{}}}],["periodcount",{"_index":1269,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["persisting",{"_index":1572,"title":{},"body":{"index.html":{}}}],["personalizada",{"_index":1445,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["places",{"_index":586,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["please",{"_index":609,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["podrías",{"_index":1038,"title":{},"body":{"components/PaymentComponent.html":{}}}],["por",{"_index":404,"title":{},"body":{"injectables/AccountService.html":{},"components/DepositComponent.html":{},"interfaces/Payment.html":{},"components/PaymentComponent.html":{},"interfaces/PaymentMessage.html":{},"interfaces/State.html":{},"injectables/TokenStorageService.html":{},"injectables/WebsocketService.html":{}}}],["posición",{"_index":648,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["position",{"_index":638,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["preparar",{"_index":1010,"title":{},"body":{"components/PaymentComponent.html":{}}}],["private",{"_index":42,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AccountService.html":{},"injectables/AuthService.html":{},"components/DepositComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"injectables/TokenStorageService.html":{},"injectables/WebsocketService.html":{}}}],["procesando",{"_index":1435,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["process",{"_index":1556,"title":{},"body":{"index.html":{}}}],["processed",{"_index":1050,"title":{},"body":{"components/PaymentComponent.html":{},"injectables/PaymentService.html":{},"index.html":{}}}],["processes",{"_index":1527,"title":{},"body":{"index.html":{}}}],["processing",{"_index":1498,"title":{},"body":{"index.html":{}}}],["project",{"_index":1494,"title":{},"body":{"index.html":{}}}],["properties",{"_index":30,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Balance.html":{},"components/DepositComponent.html":{},"classes/JwtResponse.html":{},"interfaces/LogMessage.html":{},"components/LoginComponent.html":{},"classes/LoginInfo.html":{},"components/NotificationComponent.html":{},"interfaces/Payment.html":{},"components/PaymentComponent.html":{},"interfaces/PaymentMessage.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"interfaces/State.html":{},"injectables/TokenStorageService.html":{},"interfaces/User.html":{},"injectables/WebsocketService.html":{}}}],["proporciona",{"_index":1015,"title":{},"body":{"components/PaymentComponent.html":{}}}],["proveedor",{"_index":505,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["provide",{"_index":506,"title":{},"body":{"modules/AppRoutingModule.html":{},"index.html":{}}}],["provideanimationsasync",{"_index":1617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideclienthydration",{"_index":1615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":380,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{},"injectables/DepositService.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"injectables/TokenStorageService.html":{},"injectables/WebsocketService.html":{}}}],["providehttpclient",{"_index":1616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":1614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":311,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DepositModule.html":{},"modules/MaterialModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["provideserverrendering",{"_index":1620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":1612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":339,"title":{},"body":{"injectables/AccountService.html":{},"injectables/PaymentService.html":{},"injectables/TokenStorageService.html":{},"injectables/WebsocketService.html":{}}}],["puede",{"_index":1260,"title":{},"body":{"injectables/TokenStorageService.html":{},"injectables/WebsocketService.html":{}}}],["puedes",{"_index":128,"title":{},"body":{"components/AccountComponent.html":{},"injectables/WebsocketService.html":{}}}],["página",{"_index":168,"title":{},"body":{"components/AccountComponent.html":{},"modules/AppRoutingModule.html":{}}}],["que",{"_index":325,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"components/DepositComponent.html":{},"modules/MaterialModule.html":{},"interfaces/Payment.html":{},"components/PaymentComponent.html":{},"interfaces/PaymentMessage.html":{},"interfaces/State.html":{},"injectables/WebsocketService.html":{}}}],["querying",{"_index":1594,"title":{},"body":{"index.html":{}}}],["queue",{"_index":1316,"title":{},"body":{"injectables/WebsocketService.html":{},"index.html":{}}}],["queuing",{"_index":1563,"title":{},"body":{"index.html":{}}}],["rabbitmq",{"_index":1529,"title":{},"body":{"index.html":{}}}],["random",{"_index":1194,"title":{},"body":{"injectables/SessionService.html":{},"injectables/TokenStorageService.html":{}}}],["rbn@xeridia.com",{"_index":1105,"title":{},"body":{"injectables/PaymentService.html":{}}}],["reactiveformsmodule",{"_index":469,"title":{},"body":{"modules/AppModule.html":{},"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["readonly",{"_index":1158,"title":{},"body":{"injectables/SessionService.html":{}}}],["real",{"_index":1505,"title":{},"body":{"index.html":{}}}],["receivedmessage",{"_index":1352,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["receiver",{"_index":182,"title":{},"body":{"components/AccountComponent.html":{},"interfaces/Payment.html":{},"components/PaymentComponent.html":{},"interfaces/PaymentMessage.html":{},"injectables/PaymentService.html":{},"interfaces/State.html":{}}}],["receiver','amount','state",{"_index":86,"title":{},"body":{"components/AccountComponent.html":{}}}],["recibe",{"_index":1048,"title":{},"body":{"components/PaymentComponent.html":{}}}],["recibida",{"_index":791,"title":{},"body":{"components/LoginComponent.html":{},"injectables/WebsocketService.html":{}}}],["recibido",{"_index":410,"title":{},"body":{"injectables/AccountService.html":{},"injectables/PaymentService.html":{},"injectables/WebsocketService.html":{}}}],["recibidos",{"_index":228,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AccountService.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{},"injectables/PaymentService.html":{}}}],["recibir",{"_index":396,"title":{},"body":{"injectables/AccountService.html":{},"components/LoginComponent.html":{},"injectables/PaymentService.html":{},"injectables/WebsocketService.html":{}}}],["recipient",{"_index":621,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["recipientusers",{"_index":933,"title":{},"body":{"components/PaymentComponent.html":{}}}],["reconnectdelay",{"_index":1390,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["redirectto",{"_index":490,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redirigir",{"_index":494,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reintenta",{"_index":1443,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["reintentando",{"_index":1436,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["reintentar",{"_index":1441,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["reintento",{"_index":1439,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["reintentos",{"_index":1392,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["relational",{"_index":1533,"title":{},"body":{"index.html":{}}}],["remains",{"_index":1580,"title":{},"body":{"index.html":{}}}],["remitente",{"_index":917,"title":{},"body":{"interfaces/Payment.html":{},"interfaces/PaymentMessage.html":{},"interfaces/State.html":{}}}],["reported",{"_index":1360,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["represente",{"_index":1035,"title":{},"body":{"components/PaymentComponent.html":{}}}],["request",{"_index":1054,"title":{},"body":{"components/PaymentComponent.html":{}}}],["requests",{"_index":1553,"title":{},"body":{"index.html":{}}}],["requiera",{"_index":573,"title":{},"body":{"components/DepositComponent.html":{}}}],["required",{"_index":597,"title":{},"body":{"components/DepositComponent.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{}}}],["reset",{"_index":317,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/DepositModule.html":{},"modules/MaterialModule.html":{},"overview.html":{}}}],["resilience",{"_index":1513,"title":{},"body":{"index.html":{}}}],["response",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.accesstoken",{"_index":536,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.ts",{"_index":712,"title":{},"body":{"classes/JwtResponse.html":{},"coverage.html":{}}}],["response.ts:2",{"_index":714,"title":{},"body":{"classes/JwtResponse.html":{}}}],["response.ts:3",{"_index":715,"title":{},"body":{"classes/JwtResponse.html":{}}}],["response.ts:4",{"_index":716,"title":{},"body":{"classes/JwtResponse.html":{}}}],["responsible",{"_index":1523,"title":{},"body":{"index.html":{}}}],["responsive",{"_index":1581,"title":{},"body":{"index.html":{}}}],["respuesta",{"_index":397,"title":{},"body":{"injectables/AccountService.html":{},"injectables/PaymentService.html":{},"injectables/WebsocketService.html":{}}}],["results",{"_index":303,"title":{},"body":{"components/AccountComponent.html":{},"modules/AccountModule.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/Balance.html":{},"components/DepositComponent.html":{},"modules/DepositModule.html":{},"injectables/DepositService.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"classes/JwtResponse.html":{},"interfaces/LogMessage.html":{},"components/LoginComponent.html":{},"classes/LoginInfo.html":{},"modules/MaterialModule.html":{},"components/NotificationComponent.html":{},"interfaces/Payment.html":{},"components/PaymentComponent.html":{},"interfaces/PaymentMessage.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"interfaces/State.html":{},"injectables/TokenStorageService.html":{},"interfaces/User.html":{},"injectables/WebsocketService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retrieval",{"_index":1561,"title":{},"body":{"index.html":{}}}],["retrieves",{"_index":1558,"title":{},"body":{"index.html":{}}}],["return",{"_index":382,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{},"components/DepositComponent.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"injectables/TokenStorageService.html":{},"injectables/WebsocketService.html":{}}}],["returns",{"_index":59,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AccountService.html":{},"injectables/AuthService.html":{},"components/DepositComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"injectables/TokenStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{}}}],["right",{"_index":681,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["roles",{"_index":1213,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["roomid",{"_index":849,"title":{},"body":{"components/LoginComponent.html":{}}}],["root",{"_index":381,"title":{},"body":{"injectables/AccountService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/DepositService.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"injectables/TokenStorageService.html":{},"injectables/WebsocketService.html":{}}}],["root'},{'name",{"_index":287,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/DepositComponent.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{}}}],["route",{"_index":732,"title":{},"body":{"components/LoginComponent.html":{}}}],["router",{"_index":103,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/DepositComponent.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{}}}],["routerlink",{"_index":23,"title":{},"body":{"components/AccountComponent.html":{}}}],["routermodule",{"_index":320,"title":{},"body":{"modules/AccountModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/DepositModule.html":{}}}],["routermodule.forroot(routes",{"_index":497,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routeroutlet",{"_index":419,"title":{},"body":{"components/AppComponent.html":{}}}],["routes",{"_index":426,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{}}}],["ruben",{"_index":441,"title":{},"body":{"components/AppComponent.html":{}}}],["rubén",{"_index":705,"title":{},"body":{"components/FooterComponent.html":{},"injectables/PaymentService.html":{}}}],["run",{"_index":1462,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ruta",{"_index":475,"title":{},"body":{"modules/AppModule.html":{},"injectables/PaymentService.html":{},"injectables/WebsocketService.html":{}}}],["rxjs",{"_index":377,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{},"injectables/DepositService.html":{},"injectables/PaymentService.html":{},"injectables/WebsocketService.html":{}}}],["rxjs/operators",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{}}}],["saldo",{"_index":233,"title":{},"body":{"components/AccountComponent.html":{},"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["save",{"_index":1242,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["saved",{"_index":1247,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["saveexcelfile",{"_index":43,"title":{},"body":{"components/AccountComponent.html":{}}}],["saveexcelfile(buffer",{"_index":65,"title":{},"body":{"components/AccountComponent.html":{}}}],["saveid",{"_index":1219,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["saveid(token",{"_index":1229,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["saver",{"_index":111,"title":{},"body":{"components/AccountComponent.html":{}}}],["savetoken",{"_index":1220,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["savetoken(token",{"_index":1231,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["saveuser",{"_index":1166,"title":{},"body":{"injectables/SessionService.html":{}}}],["saveuser(user",{"_index":1180,"title":{},"body":{"injectables/SessionService.html":{}}}],["saveusername",{"_index":1221,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["saveusername(username",{"_index":1233,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["scalability",{"_index":1512,"title":{},"body":{"index.html":{}}}],["scalable",{"_index":1587,"title":{},"body":{"index.html":{}}}],["scale",{"_index":1497,"title":{},"body":{"index.html":{}}}],["se",{"_index":779,"title":{},"body":{"components/LoginComponent.html":{},"injectables/TokenStorageService.html":{},"injectables/WebsocketService.html":{}}}],["sea",{"_index":476,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Payment.html":{},"components/PaymentComponent.html":{},"interfaces/PaymentMessage.html":{},"interfaces/State.html":{}}}],["search",{"_index":1539,"title":{},"body":{"index.html":{}}}],["second",{"_index":624,"title":{},"body":{"components/DepositComponent.html":{}}}],["segundo",{"_index":985,"title":{},"body":{"components/PaymentComponent.html":{},"injectables/WebsocketService.html":{}}}],["segundos",{"_index":1066,"title":{},"body":{"components/PaymentComponent.html":{}}}],["según",{"_index":1012,"title":{},"body":{"components/PaymentComponent.html":{}}}],["select",{"_index":620,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["selector",{"_index":16,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/DepositComponent.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{}}}],["sender",{"_index":85,"title":{},"body":{"components/AccountComponent.html":{},"interfaces/Payment.html":{},"components/PaymentComponent.html":{},"interfaces/PaymentMessage.html":{},"injectables/PaymentService.html":{},"interfaces/State.html":{}}}],["sendmessage",{"_index":846,"title":{},"body":{"components/LoginComponent.html":{},"injectables/WebsocketService.html":{}}}],["sendmessage(destination",{"_index":1306,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["sendpayment",{"_index":1089,"title":{},"body":{"injectables/PaymentService.html":{}}}],["sendpayment(userid",{"_index":1098,"title":{},"body":{"injectables/PaymentService.html":{}}}],["sendpaymentmessage(destination",{"_index":1448,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["sends",{"_index":1308,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["sent",{"_index":1055,"title":{},"body":{"components/PaymentComponent.html":{}}}],["ser",{"_index":1032,"title":{},"body":{"components/PaymentComponent.html":{}}}],["server",{"_index":1309,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["serverconfig",{"_index":1468,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":406,"title":{},"body":{"injectables/AccountService.html":{},"injectables/PaymentService.html":{},"injectables/WebsocketService.html":{},"index.html":{}}}],["services",{"_index":1522,"title":{},"body":{"index.html":{}}}],["services/account.service",{"_index":98,"title":{},"body":{"components/AccountComponent.html":{},"modules/AppModule.html":{},"components/DepositComponent.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{}}}],["services/login.service",{"_index":763,"title":{},"body":{"components/LoginComponent.html":{}}}],["services/payment.service",{"_index":109,"title":{},"body":{"components/AccountComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{}}}],["services/session.service",{"_index":478,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{}}}],["services/token",{"_index":113,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{}}}],["services/websocket.service",{"_index":112,"title":{},"body":{"components/AccountComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{}}}],["servicio",{"_index":484,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{}}}],["servidor",{"_index":812,"title":{},"body":{"components/LoginComponent.html":{}}}],["sesionid",{"_index":1301,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["sesionservice",{"_index":734,"title":{},"body":{"components/LoginComponent.html":{}}}],["sesión",{"_index":787,"title":{},"body":{"components/LoginComponent.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{}}}],["sessionid",{"_index":1184,"title":{},"body":{"injectables/SessionService.html":{}}}],["sessionidkey",{"_index":1159,"title":{},"body":{"injectables/SessionService.html":{}}}],["sessionservice",{"_index":457,"title":{"injectables/SessionService.html":{}},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"injectables/SessionService.html":{},"coverage.html":{},"overview.html":{}}}],["sessionstorage",{"_index":1254,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["sessionstorage.getitem(this.sessionidkey",{"_index":1200,"title":{},"body":{"injectables/SessionService.html":{}}}],["sessionstorage.getitem(this.userkey",{"_index":1207,"title":{},"body":{"injectables/SessionService.html":{}}}],["sessionstorage.getitem(token_key",{"_index":1255,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["sessionstorage.getitem(username_key",{"_index":1268,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["sessionstorage.removeitem(this.sessionidkey",{"_index":1209,"title":{},"body":{"injectables/SessionService.html":{}}}],["sessionstorage.removeitem(this.userkey",{"_index":1210,"title":{},"body":{"injectables/SessionService.html":{}}}],["sessionstorage.setitem(this.sessionidkey",{"_index":1201,"title":{},"body":{"injectables/SessionService.html":{}}}],["sessionstorage.setitem(this.userkey",{"_index":1204,"title":{},"body":{"injectables/SessionService.html":{}}}],["settimeout",{"_index":814,"title":{},"body":{"components/LoginComponent.html":{},"components/PaymentComponent.html":{},"injectables/WebsocketService.html":{}}}],["sheetnames",{"_index":206,"title":{},"body":{"components/AccountComponent.html":{}}}],["sheets",{"_index":205,"title":{},"body":{"components/AccountComponent.html":{}}}],["si",{"_index":329,"title":{},"body":{"modules/AccountModule.html":{},"components/DepositComponent.html":{},"components/PaymentComponent.html":{},"injectables/SessionService.html":{},"injectables/TokenStorageService.html":{},"injectables/WebsocketService.html":{}}}],["sido",{"_index":1368,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["signal",{"_index":764,"title":{},"body":{"components/LoginComponent.html":{},"modules/MaterialModule.html":{}}}],["signal(true",{"_index":749,"title":{},"body":{"components/LoginComponent.html":{}}}],["simulation",{"_index":438,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["simulator",{"_index":424,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["simultaneously",{"_index":1568,"title":{},"body":{"index.html":{}}}],["size",{"_index":674,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["socket",{"_index":157,"title":{},"body":{"components/AccountComponent.html":{},"injectables/WebsocketService.html":{}}}],["socketclient",{"_index":1274,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["sockjs",{"_index":1324,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["sockjs(url",{"_index":1387,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["solicitud",{"_index":390,"title":{},"body":{"injectables/AccountService.html":{}}}],["solicitudes",{"_index":499,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["solo",{"_index":1427,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AccountComponent.html":{},"modules/AccountModule.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/Balance.html":{},"components/DepositComponent.html":{},"modules/DepositModule.html":{},"injectables/DepositService.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"classes/JwtResponse.html":{},"interfaces/LogMessage.html":{},"components/LoginComponent.html":{},"classes/LoginInfo.html":{},"modules/MaterialModule.html":{},"components/NotificationComponent.html":{},"interfaces/Payment.html":{},"components/PaymentComponent.html":{},"interfaces/PaymentMessage.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"interfaces/State.html":{},"injectables/TokenStorageService.html":{},"interfaces/User.html":{},"injectables/WebsocketService.html":{}}}],["specific",{"_index":1420,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["spring",{"_index":1520,"title":{},"body":{"index.html":{}}}],["springboot",{"_index":1151,"title":{},"body":{"injectables/PaymentService.html":{},"injectables/WebsocketService.html":{}}}],["standalone",{"_index":19,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/DepositComponent.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{}}}],["started",{"_index":1493,"title":{"index.html":{}},"body":{}}],["state",{"_index":191,"title":{"interfaces/State.html":{}},"body":{"components/AccountComponent.html":{},"interfaces/Payment.html":{},"components/PaymentComponent.html":{},"interfaces/PaymentMessage.html":{},"injectables/PaymentService.html":{},"interfaces/State.html":{},"coverage.html":{}}}],["statements",{"_index":1458,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1214,"title":{},"body":{"injectables/TokenStorageService.html":{},"injectables/WebsocketService.html":{}}}],["status",{"_index":1586,"title":{},"body":{"index.html":{}}}],["statuses",{"_index":1546,"title":{},"body":{"index.html":{}}}],["stomp",{"_index":803,"title":{},"body":{"components/LoginComponent.html":{},"components/PaymentComponent.html":{},"injectables/WebsocketService.html":{}}}],["stomp.client(url",{"_index":1388,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["stomp.js",{"_index":1330,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["stomp/stompjs",{"_index":1326,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["stompjs",{"_index":1328,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["stompsubscription",{"_index":1325,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["storage",{"_index":1534,"title":{},"body":{"index.html":{}}}],["storage.service",{"_index":114,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{},"injectables/WebsocketService.html":{}}}],["storage.service.ts",{"_index":1212,"title":{},"body":{"injectables/TokenStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storage.service.ts:11",{"_index":1222,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["storage.service.ts:14",{"_index":1232,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["storage.service.ts:25",{"_index":1223,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["storage.service.ts:33",{"_index":1225,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["storage.service.ts:42",{"_index":1230,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["storage.service.ts:49",{"_index":1224,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["storage.service.ts:54",{"_index":1234,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["storage.service.ts:59",{"_index":1226,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["storage.service.ts:63",{"_index":1228,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["stores",{"_index":1557,"title":{},"body":{"index.html":{}}}],["string",{"_index":67,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AuthService.html":{},"interfaces/Balance.html":{},"components/DepositComponent.html":{},"classes/JwtResponse.html":{},"interfaces/LogMessage.html":{},"components/LoginComponent.html":{},"classes/LoginInfo.html":{},"interfaces/Payment.html":{},"components/PaymentComponent.html":{},"interfaces/PaymentMessage.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"interfaces/State.html":{},"injectables/TokenStorageService.html":{},"interfaces/User.html":{},"injectables/WebsocketService.html":{},"miscellaneous/variables.html":{}}}],["string(this.code",{"_index":1005,"title":{},"body":{"components/PaymentComponent.html":{}}}],["strings",{"_index":184,"title":{},"body":{"components/AccountComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/DepositComponent.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{}}}],["styleurl",{"_index":697,"title":{},"body":{"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{}}}],["styleurls",{"_index":25,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/DepositComponent.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{}}}],["subject",{"_index":368,"title":{},"body":{"injectables/AccountService.html":{},"injectables/PaymentService.html":{},"injectables/WebsocketService.html":{}}}],["subject.next(json.parse(message.body",{"_index":1375,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["subject.next(message.body",{"_index":1447,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["subject.next(parsedmessage",{"_index":1430,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["subscribe",{"_index":1282,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["subscribe(destination",{"_index":1312,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["subscribepaymentnotification",{"_index":1090,"title":{},"body":{"injectables/PaymentService.html":{}}}],["subscribes",{"_index":1419,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["subscribetoaccountchannel(channel",{"_index":1453,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["subscribetochannel(channel",{"_index":1422,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["subscribetologinchannel(channel",{"_index":1444,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["subscribetopaymentchannel(channel",{"_index":1450,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["subscription",{"_index":1372,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["subscription.unsubscribe",{"_index":1379,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["subscriptions",{"_index":1275,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["success",{"_index":840,"title":{},"body":{"components/LoginComponent.html":{}}}],["successfully",{"_index":983,"title":{},"body":{"components/PaymentComponent.html":{},"injectables/TokenStorageService.html":{}}}],["sucessfull",{"_index":1142,"title":{},"body":{"injectables/PaymentService.html":{}}}],["superior",{"_index":646,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["supongamos",{"_index":1043,"title":{},"body":{"components/PaymentComponent.html":{}}}],["support",{"_index":1596,"title":{},"body":{"modules.html":{}}}],["surname",{"_index":75,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AccountService.html":{},"interfaces/Balance.html":{},"components/PaymentComponent.html":{},"injectables/PaymentService.html":{},"interfaces/User.html":{}}}],["surpassed",{"_index":607,"title":{},"body":{"components/DepositComponent.html":{}}}],["sus",{"_index":958,"title":{},"body":{"components/PaymentComponent.html":{}}}],["susceptible",{"_index":1026,"title":{},"body":{"components/PaymentComponent.html":{}}}],["suscribe",{"_index":780,"title":{},"body":{"components/LoginComponent.html":{}}}],["suscribir",{"_index":1451,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["suscribiremos",{"_index":1339,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["suscribirse",{"_index":393,"title":{},"body":{"injectables/AccountService.html":{},"injectables/PaymentService.html":{},"injectables/WebsocketService.html":{}}}],["suscripción",{"_index":1437,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["svg",{"_index":1597,"title":{},"body":{"modules.html":{}}}],["system",{"_index":1514,"title":{},"body":{"index.html":{}}}],["tabla",{"_index":197,"title":{},"body":{"components/AccountComponent.html":{}}}],["table",{"_index":1487,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1486,"title":{},"body":{"coverage.html":{}}}],["tamaño",{"_index":672,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["también",{"_index":915,"title":{},"body":{"interfaces/Payment.html":{},"components/PaymentComponent.html":{},"interfaces/PaymentMessage.html":{},"interfaces/State.html":{}}}],["tap",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{}}}],["technologies",{"_index":1504,"title":{},"body":{"index.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/DepositComponent.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{}}}],["templateurl",{"_index":27,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/DepositComponent.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{}}}],["temporal",{"_index":799,"title":{},"body":{"components/LoginComponent.html":{}}}],["teodor",{"_index":362,"title":{},"body":{"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"injectables/PaymentService.html":{}}}],["testeo",{"_index":700,"title":{},"body":{"components/DevComponent.html":{}}}],["text",{"_index":268,"title":{},"body":{"components/AccountComponent.html":{},"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["texto",{"_index":676,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["this._snackbar.open(\"hola",{"_index":903,"title":{},"body":{"components/NotificationComponent.html":{}}}],["this._snackbar.open(`el",{"_index":908,"title":{},"body":{"components/NotificationComponent.html":{}}}],["this.account",{"_index":143,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AccountService.html":{},"components/DepositComponent.html":{},"components/PaymentComponent.html":{},"injectables/PaymentService.html":{}}}],["this.account.balance.balance",{"_index":978,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.account.password",{"_index":601,"title":{},"body":{"components/DepositComponent.html":{}}}],["this.account2",{"_index":1112,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.accounts",{"_index":965,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.accounts.map(account",{"_index":1148,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.accountservice.getaccount",{"_index":144,"title":{},"body":{"components/AccountComponent.html":{},"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["this.accountservice.getaccounts",{"_index":966,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.accountservice.getuserbyid(tokenstorageservice.getid",{"_index":223,"title":{},"body":{"components/AccountComponent.html":{},"components/PaymentComponent.html":{}}}],["this.accountservice.getuserlogin(loginmessage",{"_index":809,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.accountservice.getuserobservable().subscribe((user",{"_index":224,"title":{},"body":{"components/AccountComponent.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{}}}],["this.accountservice.getusers",{"_index":969,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.accountservice.getusersobservable().subscribe((users",{"_index":970,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.authservice.attemptauth(this.logininfo).subscribe",{"_index":827,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.balance",{"_index":365,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.balance1",{"_index":1101,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.balance2",{"_index":1106,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.close",{"_index":1341,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.code",{"_index":1060,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.codeexpirationtime",{"_index":997,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.confirmpayment",{"_index":1051,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.connectionsubject.asobservable",{"_index":1417,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.connectionsubject.next(false",{"_index":1340,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.connectionsubject.next(this.isconnected",{"_index":1347,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.connectionsubject.next(true",{"_index":1348,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.connecttoroom(this.userid",{"_index":778,"title":{},"body":{"components/LoginComponent.html":{},"components/PaymentComponent.html":{}}}],["this.depositform",{"_index":577,"title":{},"body":{"components/DepositComponent.html":{}}}],["this.depositform.get('password')?.value",{"_index":600,"title":{},"body":{"components/DepositComponent.html":{}}}],["this.depositform.invalid",{"_index":594,"title":{},"body":{"components/DepositComponent.html":{}}}],["this.email",{"_index":847,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.ensuresessionidexists",{"_index":1187,"title":{},"body":{"injectables/SessionService.html":{}}}],["this.errormessage",{"_index":836,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.excel_extension",{"_index":222,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.excel_type",{"_index":220,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.form.password",{"_index":806,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.form.username",{"_index":805,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.formbuilder.group",{"_index":564,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["this.generateuuid",{"_index":1202,"title":{},"body":{"injectables/SessionService.html":{}}}],["this.getdata",{"_index":162,"title":{},"body":{"components/AccountComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{}}}],["this.hide.set(!this.hide",{"_index":767,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.http.post(this.loginurl",{"_index":531,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.initsocket('http://localhost:8080/socket",{"_index":1346,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.isconnected",{"_index":797,"title":{},"body":{"components/LoginComponent.html":{},"components/PaymentComponent.html":{},"injectables/WebsocketService.html":{}}}],["this.isloggedin",{"_index":770,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.isloginfailed",{"_index":832,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.istokenvalid(token",{"_index":1243,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["this.login(data",{"_index":785,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.login(user",{"_index":810,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.logindata",{"_index":782,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.logininfo",{"_index":825,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginservice.getloginmessages().subscribe((data",{"_index":781,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginservice.getloginnotification().subscribe((notification",{"_index":789,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginservice.joinroom(userid",{"_index":843,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginservice.sendmessage(this.userid",{"_index":813,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginsuccessmessage",{"_index":792,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.maxtwodecimalvalidator",{"_index":580,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["this.openconnection(\"1",{"_index":1332,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.password",{"_index":848,"title":{},"body":{"components/LoginComponent.html":{},"classes/LoginInfo.html":{}}}],["this.paymentform",{"_index":960,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.paymentform.get('amount')?.value",{"_index":989,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.paymentform.get('recipient')?.value",{"_index":987,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.paymentform.get('verification')?.value",{"_index":991,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.paymentform.invalid",{"_index":992,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.paymentform.value",{"_index":968,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.paymenthistory",{"_index":145,"title":{},"body":{"components/AccountComponent.html":{},"injectables/PaymentService.html":{}}}],["this.paymenthistory.map(payment",{"_index":186,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.paymentnotification.asobservable",{"_index":1131,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.paymentnotification.next(`payment",{"_index":1141,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.paymentnotification.next(message",{"_index":1130,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.paymentservice",{"_index":1044,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.paymentservice.getpaymentmessages().subscribe(data",{"_index":147,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.paymentservice.getpaymentnotification().subscribe((notification",{"_index":1049,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.paymentservice.getpaymentnotification().subscribe((payment",{"_index":905,"title":{},"body":{"components/NotificationComponent.html":{}}}],["this.paymentservice.getpaymentsbyuser(this.account",{"_index":225,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.paymentservice.getpaymentsmock",{"_index":146,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.paymentservice.getpaymentsobservable().subscribe((payments",{"_index":226,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.paymentservice.getrecipientemails",{"_index":964,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.paymentservice.joinroom(userid",{"_index":1073,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.paymentservice.sendpayment(this.account.id.tostring",{"_index":1034,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.paymentservice.sendpayment(this.account.userid",{"_index":1025,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.paymentservice.subscribepaymentnotification",{"_index":904,"title":{},"body":{"components/NotificationComponent.html":{}}}],["this.paymentssubject.asobservable",{"_index":1123,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.paymentssubject.next(message",{"_index":1122,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.paymentsubject.asobservable",{"_index":1127,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.paymentsubject.next(messagecontent",{"_index":1140,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.paymentsubject.next(paymentresponse",{"_index":1155,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.recipientemails",{"_index":963,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.recipientusers",{"_index":974,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.route.params.subscribe(params",{"_index":771,"title":{},"body":{"components/LoginComponent.html":{},"components/PaymentComponent.html":{}}}],["this.router.navigate(['/account",{"_index":614,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["this.router.navigate(['/login",{"_index":611,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["this.saveexcelfile(excelbuffer",{"_index":216,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.socketclient",{"_index":1353,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.socketclient.activate",{"_index":1365,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.socketclient.active",{"_index":1404,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.socketclient.connected",{"_index":1371,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.socketclient.deactivate",{"_index":1410,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.socketclient.onconnect",{"_index":1355,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.socketclient.onstomperror",{"_index":1358,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.socketclient.publish",{"_index":1406,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.socketclient.subscribe",{"_index":1373,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.socketclient.subscribe(channel",{"_index":1423,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.subscribetoaccountchannel(channel",{"_index":1454,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.subscribetologinchannel(channel",{"_index":1442,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.subscribetopaymentchannel(channel",{"_index":1452,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.subscriptions.clear",{"_index":1414,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.subscriptions.delete(destination",{"_index":1380,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.subscriptions.get(destination",{"_index":1378,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.subscriptions.set(destination",{"_index":1376,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.token",{"_index":833,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.tokenstorage.gettoken",{"_index":769,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.tokenstorage.savetoken(data.accesstoken",{"_index":828,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.tokenstorage.savetoken(response.accesstoken",{"_index":537,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokenstorage.saveusername(data.username",{"_index":829,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.tries",{"_index":602,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["this.userid",{"_index":772,"title":{},"body":{"components/LoginComponent.html":{},"components/PaymentComponent.html":{}}}],["this.username",{"_index":861,"title":{},"body":{"classes/LoginInfo.html":{}}}],["this.userssubject.asobservable",{"_index":416,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.userssubject.next(message",{"_index":401,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.usersubject.asobservable",{"_index":415,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.usersubject.next(message",{"_index":411,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.validatebalance",{"_index":961,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.websocket",{"_index":794,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.websocket.onconnectionready().subscribe((isconnected",{"_index":160,"title":{},"body":{"components/AccountComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{}}}],["this.websocket.onconnectionready().subscribe((valor",{"_index":155,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.websocket.openconnection(\"1",{"_index":153,"title":{},"body":{"components/AccountComponent.html":{},"components/LoginComponent.html":{}}}],["this.websocket.openconnection(this.sesionservice.getsessionid",{"_index":796,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.websocketservice.openconnection('userid').subscribe((message",{"_index":1153,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.websocketservice.openconnection(userid).subscribe((message",{"_index":1133,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.websocketservice.sendmessage('/app/log",{"_index":412,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.websocketservice.sendmessage('/app/payment/user",{"_index":1119,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.websocketservice.sendmessage('/app/user/list",{"_index":392,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.websocketservice.sendmessage(`/app/payment",{"_index":1126,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.websocketservice.sendmessage(`/app/user/${userid.tostring",{"_index":407,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.websocketservice.subscribe('/topic/users').subscribe((message",{"_index":398,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.websocketservice.subscribe(`/topic/login`).subscribe((message",{"_index":413,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.websocketservice.subscribe(`/topic/notification/payment`).subscribe((message",{"_index":1128,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.websocketservice.subscribe(`/topic/payment/user`).subscribe((message",{"_index":1120,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.websocketservice.subscribe(`/topic/user/${userid}`).subscribe((message",{"_index":408,"title":{},"body":{"injectables/AccountService.html":{}}}],["through",{"_index":1545,"title":{},"body":{"index.html":{}}}],["throughput",{"_index":1570,"title":{},"body":{"index.html":{}}}],["tiempo",{"_index":1440,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["time",{"_index":1506,"title":{},"body":{"index.html":{}}}],["tipo",{"_index":916,"title":{},"body":{"interfaces/Payment.html":{},"components/PaymentComponent.html":{},"interfaces/PaymentMessage.html":{},"interfaces/State.html":{}}}],["title",{"_index":276,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{}}}],["todo",{"_index":502,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["todos",{"_index":391,"title":{},"body":{"injectables/AccountService.html":{},"injectables/PaymentService.html":{}}}],["token",{"_index":728,"title":{},"body":{"components/LoginComponent.html":{},"injectables/TokenStorageService.html":{},"injectables/WebsocketService.html":{}}}],["token.match(/\\./g",{"_index":1270,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["token.tostring",{"_index":1263,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["token_id",{"_index":1237,"title":{},"body":{"injectables/TokenStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["token_key",{"_index":1235,"title":{},"body":{"injectables/TokenStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokenstorage",{"_index":50,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{}}}],["tokenstorageservice",{"_index":51,"title":{"injectables/TokenStorageService.html":{}},"body":{"components/AccountComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{},"injectables/TokenStorageService.html":{},"injectables/WebsocketService.html":{},"coverage.html":{}}}],["tokenstorageservice.saveid(message.userid",{"_index":841,"title":{},"body":{"components/LoginComponent.html":{}}}],["tokenstorageservice.saveid(tokenstorageservice.generateuuid",{"_index":800,"title":{},"body":{"components/LoginComponent.html":{}}}],["top",{"_index":274,"title":{},"body":{"components/AccountComponent.html":{},"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["topic",{"_index":1315,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["total",{"_index":234,"title":{},"body":{"components/AccountComponent.html":{},"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["traer",{"_index":240,"title":{},"body":{"components/AccountComponent.html":{}}}],["transaction",{"_index":1592,"title":{},"body":{"index.html":{}}}],["transactional",{"_index":1559,"title":{},"body":{"index.html":{}}}],["transactions",{"_index":1536,"title":{},"body":{"index.html":{}}}],["través",{"_index":388,"title":{},"body":{"injectables/AccountService.html":{},"components/PaymentComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/DepositComponent.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{}}}],["tries",{"_index":548,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["true",{"_index":20,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DepositComponent.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{},"injectables/WebsocketService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":142,"title":{},"body":{"components/AccountComponent.html":{},"injectables/WebsocketService.html":{}}}],["two",{"_index":584,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["type",{"_index":56,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Balance.html":{},"components/DepositComponent.html":{},"injectables/DepositService.html":{},"classes/JwtResponse.html":{},"interfaces/LogMessage.html":{},"components/LoginComponent.html":{},"classes/LoginInfo.html":{},"components/NotificationComponent.html":{},"interfaces/Payment.html":{},"components/PaymentComponent.html":{},"interfaces/PaymentMessage.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"interfaces/State.html":{},"injectables/TokenStorageService.html":{},"interfaces/User.html":{},"injectables/WebsocketService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":1252,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["ui",{"_index":134,"title":{},"body":{"components/AccountComponent.html":{}}}],["un",{"_index":170,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AccountService.html":{},"components/DepositComponent.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{},"injectables/SessionService.html":{},"injectables/TokenStorageService.html":{},"injectables/WebsocketService.html":{}}}],["una",{"_index":130,"title":{},"body":{"components/AccountComponent.html":{},"components/PaymentComponent.html":{},"injectables/WebsocketService.html":{}}}],["undefined",{"_index":425,"title":{},"body":{"components/AppComponent.html":{},"injectables/TokenStorageService.html":{}}}],["unsubscribe",{"_index":1283,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["unsubscribe(destination",{"_index":1317,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["up",{"_index":628,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["updates",{"_index":1550,"title":{},"body":{"index.html":{}}}],["url",{"_index":777,"title":{},"body":{"components/LoginComponent.html":{},"components/PaymentComponent.html":{},"injectables/WebsocketService.html":{}}}],["usa",{"_index":811,"title":{},"body":{"components/LoginComponent.html":{},"components/PaymentComponent.html":{},"injectables/PaymentService.html":{},"injectables/WebsocketService.html":{}}}],["usar",{"_index":129,"title":{},"body":{"components/AccountComponent.html":{},"components/PaymentComponent.html":{},"injectables/WebsocketService.html":{}}}],["useclass",{"_index":508,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["used",{"_index":1571,"title":{},"body":{"index.html":{}}}],["user",{"_index":70,"title":{"interfaces/User.html":{}},"body":{"components/AccountComponent.html":{},"injectables/AccountService.html":{},"interfaces/Balance.html":{},"components/DepositComponent.html":{},"interfaces/Payment.html":{},"components/PaymentComponent.html":{},"interfaces/PaymentMessage.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"interfaces/State.html":{},"interfaces/User.html":{},"injectables/WebsocketService.html":{},"coverage.html":{},"index.html":{}}}],["user.email",{"_index":1075,"title":{},"body":{"components/PaymentComponent.html":{}}}],["userdata",{"_index":1206,"title":{},"body":{"injectables/SessionService.html":{}}}],["userid",{"_index":351,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/LogMessage.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{},"injectables/PaymentService.html":{}}}],["userkey",{"_index":1160,"title":{},"body":{"injectables/SessionService.html":{}}}],["username",{"_index":713,"title":{},"body":{"classes/JwtResponse.html":{},"interfaces/LogMessage.html":{},"components/LoginComponent.html":{},"classes/LoginInfo.html":{},"injectables/TokenStorageService.html":{}}}],["username_key",{"_index":1239,"title":{},"body":{"injectables/TokenStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":975,"title":{},"body":{"components/PaymentComponent.html":{},"index.html":{}}}],["userssubject",{"_index":336,"title":{},"body":{"injectables/AccountService.html":{}}}],["usersubject",{"_index":337,"title":{},"body":{"injectables/AccountService.html":{}}}],["usuario",{"_index":402,"title":{},"body":{"injectables/AccountService.html":{},"components/LoginComponent.html":{},"injectables/SessionService.html":{},"injectables/WebsocketService.html":{}}}],["usuarios",{"_index":387,"title":{},"body":{"injectables/AccountService.html":{},"injectables/WebsocketService.html":{}}}],["uuid",{"_index":1174,"title":{},"body":{"injectables/SessionService.html":{}}}],["vacío",{"_index":1019,"title":{},"body":{"components/PaymentComponent.html":{}}}],["valid",{"_index":627,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["validaciones",{"_index":959,"title":{},"body":{"components/PaymentComponent.html":{}}}],["validación",{"_index":571,"title":{},"body":{"components/DepositComponent.html":{}}}],["validatebalance",{"_index":976,"title":{},"body":{"components/PaymentComponent.html":{}}}],["validationerrors",{"_index":954,"title":{},"body":{"components/PaymentComponent.html":{}}}],["validator",{"_index":583,"title":{},"body":{"components/DepositComponent.html":{}}}],["validatorfn",{"_index":955,"title":{},"body":{"components/PaymentComponent.html":{}}}],["validators",{"_index":567,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["validators.min(0.01",{"_index":579,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["validators.minlength(6",{"_index":581,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["validators.pattern(/^\\d",{"_index":962,"title":{},"body":{"components/PaymentComponent.html":{}}}],["validators.required",{"_index":578,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["valido",{"_index":994,"title":{},"body":{"components/PaymentComponent.html":{}}}],["valor",{"_index":159,"title":{},"body":{"components/AccountComponent.html":{},"components/PaymentComponent.html":{},"injectables/TokenStorageService.html":{}}}],["value",{"_index":72,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AccountService.html":{},"injectables/AuthService.html":{},"components/DepositComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"injectables/TokenStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/variables.html":{}}}],["value.tostring",{"_index":1251,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["value.tostring(16",{"_index":1199,"title":{},"body":{"injectables/SessionService.html":{}}}],["var",{"_index":282,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/DepositComponent.html":{},"components/DevComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{}}}],["variable",{"_index":1466,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1605,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verifica",{"_index":1170,"title":{},"body":{"injectables/SessionService.html":{}}}],["verificar",{"_index":1257,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["verification",{"_index":631,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["versión",{"_index":176,"title":{},"body":{"components/AccountComponent.html":{}}}],["vez",{"_index":1303,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["via",{"_index":1554,"title":{},"body":{"index.html":{}}}],["villafanez",{"_index":442,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{}}}],["visibility",{"_index":853,"title":{},"body":{"components/LoginComponent.html":{}}}],["visibility_off",{"_index":852,"title":{},"body":{"components/LoginComponent.html":{}}}],["void",{"_index":60,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AccountService.html":{},"components/DepositComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"injectables/TokenStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{}}}],["volume",{"_index":1583,"title":{},"body":{"index.html":{}}}],["volver",{"_index":618,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["voy",{"_index":819,"title":{},"body":{"components/LoginComponent.html":{}}}],["vuelta",{"_index":384,"title":{},"body":{"injectables/AccountService.html":{}}}],["válido",{"_index":981,"title":{},"body":{"components/PaymentComponent.html":{}}}],["web",{"_index":1503,"title":{},"body":{"index.html":{}}}],["website",{"_index":434,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["websocket",{"_index":48,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AccountService.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{},"injectables/WebsocketService.html":{}}}],["websocket.service",{"_index":378,"title":{},"body":{"injectables/AccountService.html":{},"injectables/PaymentService.html":{}}}],["websocketfactory",{"_index":1389,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["websockets",{"_index":1023,"title":{},"body":{"components/PaymentComponent.html":{},"index.html":{}}}],["websocketservice",{"_index":49,"title":{"injectables/WebsocketService.html":{}},"body":{"components/AccountComponent.html":{},"injectables/AccountService.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/PaymentComponent.html":{},"injectables/PaymentService.html":{},"injectables/WebsocketService.html":{},"coverage.html":{},"overview.html":{}}}],["websocketservice.getinstance",{"_index":795,"title":{},"body":{"components/LoginComponent.html":{}}}],["websocketservice.instance",{"_index":1334,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["width",{"_index":262,"title":{},"body":{"components/AccountComponent.html":{},"components/DepositComponent.html":{},"components/LoginComponent.html":{},"components/PaymentComponent.html":{}}}],["window",{"_index":1253,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["window.location.replace(\"/account",{"_index":815,"title":{},"body":{"components/LoginComponent.html":{}}}],["window.location.replace(\"account",{"_index":822,"title":{},"body":{"components/LoginComponent.html":{}}}],["window.location.replace(\"deposit",{"_index":174,"title":{},"body":{"components/AccountComponent.html":{}}}],["window.location.replace(\"payment",{"_index":172,"title":{},"body":{"components/AccountComponent.html":{}}}],["window.sessionstorage.removeitem(token_key",{"_index":1244,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["window.sessionstorage.removeitem(username_key",{"_index":1266,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["window.sessionstorage.setitem(token_key",{"_index":1245,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["window.sessionstorage.setitem(username_key",{"_index":1267,"title":{},"body":{"injectables/TokenStorageService.html":{}}}],["without",{"_index":1564,"title":{},"body":{"index.html":{}}}],["workbook",{"_index":204,"title":{},"body":{"components/AccountComponent.html":{}}}],["worksheet",{"_index":202,"title":{},"body":{"components/AccountComponent.html":{}}}],["ws",{"_index":1386,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["wssubscription",{"_index":1276,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["x",{"_index":1196,"title":{},"body":{"injectables/SessionService.html":{},"injectables/TokenStorageService.html":{}}}],["xito",{"_index":1041,"title":{},"body":{"components/PaymentComponent.html":{}}}],["xlsx",{"_index":88,"title":{},"body":{"components/AccountComponent.html":{}}}],["xlsx.utils.json_to_sheet(flatdata",{"_index":203,"title":{},"body":{"components/AccountComponent.html":{}}}],["xlsx.write(workbook",{"_index":208,"title":{},"body":{"components/AccountComponent.html":{}}}],["xxxx",{"_index":1189,"title":{},"body":{"injectables/SessionService.html":{}}}],["xxxxxxxx",{"_index":1188,"title":{},"body":{"injectables/SessionService.html":{}}}],["xxxxxxxxxxxx'.replace(/[xy]/g",{"_index":1192,"title":{},"body":{"injectables/SessionService.html":{}}}],["y",{"_index":181,"title":{},"body":{"components/AccountComponent.html":{},"components/PaymentComponent.html":{},"injectables/SessionService.html":{},"injectables/WebsocketService.html":{}}}],["yxxx",{"_index":1191,"title":{},"body":{"injectables/SessionService.html":{}}}],["z",{"_index":653,"title":{},"body":{"components/DepositComponent.html":{},"components/PaymentComponent.html":{}}}],["zoom",{"_index":316,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/DepositModule.html":{},"modules/MaterialModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AccountComponent.html":{"url":"components/AccountComponent.html","title":"component - AccountComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AccountComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    frontend/src/account/account.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                app-account\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterLink\n                                MaterialModule\n                \n            \n\n            \n                styleUrls\n                ./account.component.css\n            \n\n\n\n            \n                templateUrl\n                ./account.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                EXCEL_EXTENSION\n                            \n                            \n                                EXCEL_TYPE\n                            \n                            \n                                paymentHistory\n                            \n                            \n                                paymentObservable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                downloadExcel\n                            \n                            \n                                getData\n                            \n                            \n                                makeDeposit\n                            \n                            \n                                makePayment\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                saveExcelFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(accountService: AccountService, paymentService: PaymentService, websocket: WebsocketService, tokenStorage: TokenStorageService)\n                    \n                \n                        \n                            \n                                Defined in frontend/src/account/account.component.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        paymentService\n                                                  \n                                                        \n                                                                        PaymentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        websocket\n                                                  \n                                                        \n                                                                        WebsocketService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tokenStorage\n                                                  \n                                                        \n                                                                        TokenStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        downloadExcel\n                        \n                    \n                \n            \n            \n                \ndownloadExcel()\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/account/account.component.ts:100\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/account/account.component.ts:125\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeDeposit\n                        \n                    \n                \n            \n            \n                \nmakeDeposit()\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/account/account.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makePayment\n                        \n                    \n                \n            \n            \n                \nmakePayment()\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/account/account.component.ts:89\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/account/account.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        saveExcelFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveExcelFile(buffer: any, fileName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/account/account.component.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                buffer\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                fileName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        account\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: 0,\n    name: '',\n    surname: '',\n    password: '',\n    email: '',\n    cc: {\n      id: 0,\n      balance: 0,\n      createdAt: new Date()\n    },\n    dni: '',\n    createdAt: new Date()\n  }\n                    \n                \n                    \n                        \n                                Defined in frontend/src/account/account.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['sender', 'receiver','amount','state', 'date']\n                    \n                \n                    \n                        \n                                Defined in frontend/src/account/account.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        EXCEL_EXTENSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '.xlsx'\n                    \n                \n                    \n                        \n                                Defined in frontend/src/account/account.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        EXCEL_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8'\n                    \n                \n                    \n                        \n                                Defined in frontend/src/account/account.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paymentHistory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Payment[]\n\n                    \n                \n                    \n                        \n                                Defined in frontend/src/account/account.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paymentObservable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in frontend/src/account/account.component.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AccountService } from '../services/account.service';\nimport {CommonModule} from \"@angular/common\";\nimport {RouterLink} from \"@angular/router\";\nimport { User } from '../models/account.model';\nimport { MaterialModule } from '../app/material/material.module';\nimport { Router } from 'express';\nimport { Payment, PaymentMessage } from '../models/payment.model';\nimport { access } from 'fs';\nimport { PaymentService } from '../services/payment.service';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport { WebsocketService } from '../services/websocket.service';\nimport { TokenStorageService } from '../services/token-storage.service';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  standalone: true,\n  imports: [CommonModule, RouterLink, MaterialModule],\n  styleUrls: ['./account.component.css'],\n  host: { 'ngSkipHydration': '' }  // Deshabilitar la hidratación\n})\nexport class AccountComponent implements OnInit {\n\n  account: User = {\n    id: 0,\n    name: '',\n    surname: '',\n    password: '',\n    email: '',\n    cc: {\n      id: 0,\n      balance: 0,\n      createdAt: new Date()\n    },\n    dni: '',\n    createdAt: new Date()\n  };\n\n\n  paymentHistory!: Payment[]\n  displayedColumns: string[] = ['sender', 'receiver','amount','state', 'date'];\n  paymentObservable: any;\n  EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n  EXCEL_EXTENSION = '.xlsx';\n\n  constructor(private accountService: AccountService, \n    private paymentService: PaymentService,\n    private websocket: WebsocketService,\n    private tokenStorage: TokenStorageService\n  ) { }\n\n  ngOnInit(): void{\n    console.log('AccountComponent initialized');\n    // const notification = localStorage.getItem('loginNotification');\n    // if (notification) {\n    //   alert(notification);  // Puedes usar una mejor opción de UI para mostrar la notificación\n    //   localStorage.removeItem('loginNotification');  // Limpia la notificación después de mostrarla\n    // }\n    // try{\n      // this.account = this.accountService.getAccount();\n      // this.paymentHistory = this.paymentService.getPaymentsMOCK();\n      // this.paymentService.getPaymentMessages().subscribe(data=>{\n      //   this.paymentHistory = data\n      // })\n    //   console.log('AccountComponent initialized correctly');\n    // }catch(error){\n    //   console.log(\"Error: \" + error);\n    // }\n    // this.websocket.openConnection(\"1\");\n\n    // console.log(this.websocket.getIsConnected());\n    \n    // this.websocket.onConnectionReady().subscribe((valor) => {\n    //   console.log(`El socket esta ${valor}`);\n    // });\n    this.websocket.onConnectionReady().subscribe((isConnected) => {\n      if (isConnected) {\n        //this.getData();\n      }\n    });\n    \n    // console.log(\"Antes de pedir datos\");\n    \n    // console.log(\"Despues de pedir datos\");\n  }\n  \n  makePayment() {\n    // Navega a la página de \"Hacer un Pago\"\n    window.location.replace(\"payment\");\n  }\n\n  makeDeposit() {\n    // Navega a la página de \"Hacer un Depósito\"\n    window.location.replace(\"deposit\");\n  }\n\n\n  downloadExcel(): void {\n    // Crear una versión aplanada de paymentHistory con los campos sender y receiver como strings\n    const flatData = this.paymentHistory.map(payment => ({\n      sender: payment.sender.name,\n      receiver: payment.receiver.name,\n      amount: payment.amount,\n      state: payment.state.description,\n      date: payment.date ? new Date(payment.date).toLocaleString() : 'N/A'\n    }));\n\n    // Convertir la tabla de historial de pagos a una hoja de Excel\n    const worksheet = XLSX.utils.json_to_sheet(flatData);\n    const workbook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };\n    const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\n\n    // Llamar a la función saveExcelFile para guardar el archivo\n    this.saveExcelFile(excelBuffer, \"HistorialPagos\");\n  }\n\n  private saveExcelFile(buffer: any, fileName: string): void {\n    const data: Blob = new Blob([buffer], { type: this.EXCEL_TYPE });\n    FileSaver.saveAs(data, fileName + this.EXCEL_EXTENSION);\n  }\n\n\n  getData() {\n    this.accountService.getUserById(TokenStorageService.getId());\n    this.accountService.getUserObservable().subscribe((user: User) => {\n      this.account = user;\n      this.paymentService.getPaymentsByUser(this.account);\n      this.paymentService.getPaymentsObservable().subscribe((payments: Payment[]) => {\n        console.log(\"Payments recibidos\")\n        console.log(payments)\n        if(payments){\n          this.paymentHistory = payments;\n        }\n      });\n    });\n\n  }  \n}\n\n    \n\n    \n        \n\n\n  \n  \n    \n      {{ account.name }}\n      Saldo total: {{ account.balance| currency }} -->\n      Saldo total: {{ account.cc.balance }}\n      Log Out\n    \n  \n\n  \n  \n    Hacer un Pago\n    Hacer un Depósito\n    Traer datos -->\n  \n\n  \n  \n    \n      Historial de Pagos\n      \n        download\n      \n    \n\n     \n\n      \n         Sender \n         {{element.sender.name}} \n      \n\n      \n         Receiver \n         {{element.receiver.name}} \n      \n\n      \n         Amount \n         {{element.amount}} \n      \n\n      \n         State \n         {{element.state.description}} \n      \n\n      \n         Date \n         {{element.date | date:'short'}} \n      \n\n      \n      \n\n      \n        \n          No hay datos disponibles\n        \n      \n\n    \n  \n\n\n\n    \n\n    \n                \n                    ./account.component.css\n                \n                .payment-page-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 20px;\n  }\n  \n  .user-info-card {\n    width: 100%;\n    max-width: 400px;\n    margin-bottom: 20px;\n    text-align: center;\n  }\n  \n  .action-buttons {\n    display: flex;\n    gap: 20px;\n    margin-bottom: 20px;\n  }\n  \n  .payments-list-card {\n    width: 100%;\n    max-width: 600px;\n    margin-top: 20px;\n  }\n  \n  mat-card-title, mat-card-content {\n    text-align: center;\n  }\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{ account.name }}      Saldo total: {{ account.balance| currency }} -->      Saldo total: {{ account.cc.balance }}      Log Out              Hacer un Pago    Hacer un Depósito    Traer datos -->                Historial de Pagos              download                              Sender          {{element.sender.name}}                      Receiver          {{element.receiver.name}}                      Amount          {{element.amount}}                      State          {{element.state.description}}                      Date          {{element.date | date:\\'short\\'}}                                           No hay datos disponibles                    '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DepositComponent', 'selector': 'app-deposit'},{'name': 'DevComponent', 'selector': 'app-dev'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PaymentComponent', 'selector': 'app-payment'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AccountComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccountModule.html":{"url":"modules/AccountModule.html","title":"module - AccountModule","body":"\n                   \n\n\n\n\n    Modules\n    AccountModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AccountModule\n\n\n\ncluster_AccountModule_exports\n\n\n\ncluster_AccountModule_imports\n\n\n\n\nAccountComponent\n\nAccountComponent\n\n\n\nAccountModule\n\nAccountModule\n\nAccountModule -->\n\nAccountComponent->AccountModule\n\n\n\n\n\nAccountComponent \n\nAccountComponent \n\nAccountComponent  -->\n\nAccountModule->AccountComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            frontend/src/account/account.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AccountComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AccountComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { AccountComponent } from './account.component';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule, // Importa otros módulos que necesites\n    RouterModule,\n    AccountComponent\n  ],\n  exports: [AccountComponent] // Exporta componentes si los necesitas en otros módulos\n})\nexport class AccountModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountService.html":{"url":"injectables/AccountService.html","title":"injectable - AccountService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccountService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            frontend/src/services/account.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                account\n                            \n                            \n                                    Private\n                                accountNotification\n                            \n                            \n                                    Private\n                                balance\n                            \n                            \n                                    Private\n                                usersSubject\n                            \n                            \n                                    Private\n                                userSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAccount\n                            \n                            \n                                    Public\n                                getUserById\n                            \n                            \n                                    Public\n                                getUserLogin\n                            \n                            \n                                    Public\n                                getUserObservable\n                            \n                            \n                                    Public\n                                getUsers\n                            \n                            \n                                    Public\n                                getUsersObservable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(websocketService: WebsocketService)\n                    \n                \n                        \n                            \n                                Defined in frontend/src/services/account.service.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        websocketService\n                                                  \n                                                        \n                                                                        WebsocketService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAccount\n                        \n                    \n                \n            \n            \n                \ngetAccount()\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/services/account.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         User\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserById(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/services/account.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getUserLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserLogin(loginMessage: LogMessage)\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/services/account.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginMessage\n                                            \n                                                            LogMessage\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getUserObservable\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserObservable()\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/services/account.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/services/account.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getUsersObservable\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsersObservable()\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/services/account.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        account\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: 1,\n    name: 'Ovidiu',\n    surname: 'Teodor',\n    password: '123456',\n    email: 'ovi@xeridia.com',\n    cc: this.balance,\n    dni: '12345678A',\n    createdAt: new Date()\n  }\n                    \n                \n                    \n                        \n                                Defined in frontend/src/services/account.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        accountNotification\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in frontend/src/services/account.service.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        balance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Balance\n\n                    \n                \n                \n                    \n                        Default value : {\n    id:0,\n    balance:2500,\n    createdAt: new Date()\n  }\n                    \n                \n                    \n                        \n                                Defined in frontend/src/services/account.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        usersSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in frontend/src/services/account.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in frontend/src/services/account.service.ts:34\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, Subject } from 'rxjs';\nimport {Balance, User} from \"../models/account.model\";\nimport { WebsocketService } from './websocket.service';\nimport { LogMessage } from '../models/login.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService{\n\n  private balance: Balance = {\n    id:0,\n    balance:2500,\n    createdAt: new Date()\n  }\n  private account: User = {\n    id: 1,\n    name: 'Ovidiu',\n    surname: 'Teodor',\n    password: '123456',\n    email: 'ovi@xeridia.com',\n    cc: this.balance,\n    dni: '12345678A',\n    createdAt: new Date()\n  };\n\n  getAccount(): User {\n    return this.account;\n  }\n  constructor(private websocketService: WebsocketService) { }\n\n  private userSubject = new Subject();  // Para emitir los datos de vuelta\n  private usersSubject = new Subject();\n  private accountNotification = new Subject();\n\n  // Obtener lista de usuarios a través de WebSocket\n  public getUsers(): void {\n    // Enviar solicitud para obtener todos los usuarios\n    this.websocketService.sendMessage('/app/user/list', {});\n\n    // Suscribirse al destino para recibir la respuesta\n    this.websocketService.subscribe('/topic/users').subscribe((message) => {\n      console.log('Usuarios recibidos:', message);\n      this.usersSubject.next(message);\n    });\n  }\n\n  // Obtener un usuario específico por ID a través de WebSocket\n  public getUserById(userId: number): void {\n    console.log(\"Account Service getUserById\")\n    this.websocketService.sendMessage(`/app/user/${userId.toString()}`, userId);\n\n    // Suscribirse al destino para recibir la respuesta\n    this.websocketService.subscribe(`/topic/user/${userId}`).subscribe((message) => {\n      console.log('Usuario recibido:', message);\n      this.userSubject.next(message);\n    });\n  }\n  // Obtener un usuario específico por ID a través de WebSocket\n  public getUserLogin(loginMessage: LogMessage): void {\n    this.websocketService.sendMessage('/app/log', loginMessage);\n\n    // Suscribirse al destino para recibir la respuesta\n    this.websocketService.subscribe(`/topic/login`).subscribe((message) => {\n      console.log('Usuario recibido:', message);\n      this.userSubject.next(message);\n    });\n  }\n\n  // Obtener el observable del usuario\n  public getUserObservable() : Observable {\n    return this.userSubject.asObservable();\n  }\n  public getUsersObservable() : Observable {\n    return this.usersSubject.asObservable();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    frontend/src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            FormsModule\n                            RouterOutlet\n                                MaterialModule\n                                FooterComponent\n                                HeaderComponent\n                                NotificationComponent\n                \n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in frontend/src/app/app.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         \"Payment Simulator\" | undefined\n\n                    \n                \n                    \n                        \n                                Defined in frontend/src/app/app.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AccountComponent } from '../account/account.component';\nimport { Component } from '@angular/core';\nimport {FormsModule} from \"@angular/forms\";\nimport {RouterOutlet} from \"@angular/router\";\nimport {NgOptimizedImage} from \"@angular/common\";\nimport { Router } from '@angular/router';\nimport { MaterialModule } from './material/material.module';\nimport { FooterComponent } from \"./footer/footer.component\";\nimport { HeaderComponent } from \"./header/header.component\";\nimport { NotificationComponent } from \"./notification/notification.component\";\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  standalone: true,\n  imports: [\n    FormsModule,\n    RouterOutlet,\n    MaterialModule,\n    FooterComponent,\n    HeaderComponent,\n    NotificationComponent\n],\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title: 'Payment Simulator' | undefined;\n  constructor(private router: Router) {}\n\n}\n\n\n    \n\n    \n        \n\n  \n    Payment Website\n  \n -->\n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n\n\n  \n    \n      \n        \n        Payment official website\n      \n    \n  \n  \n    \n      &copy; Asynchronous Payment Simulation. Designed with\n      HTML Codex\n       by \n      Ruben Villafanez, Alejandro Carballeira, Ovidiu Teodor, Adrian Carral and Ruben Becares.\n    \n  \n -->\n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                router-outlet{\n    min-height: 90vh;\n}\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Payment Website   -->                                                Payment official website                        © Asynchronous Payment Simulation. Designed with      HTML Codex       by       Ruben Villafanez, Alejandro Carballeira, Ovidiu Teodor, Adrian Carral and Ruben Becares.       -->'\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DepositComponent', 'selector': 'app-deposit'},{'name': 'DevComponent', 'selector': 'app-dev'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PaymentComponent', 'selector': 'app-payment'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAccountComponent\n\nAccountComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccountComponent->AppModule\n\n\n\n\n\nAccountModule\n\nAccountModule\n\nAppModule -->\n\nAccountModule->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nDepositComponent\n\nDepositComponent\n\nAppModule -->\n\nDepositComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nPaymentComponent\n\nPaymentComponent\n\nAppModule -->\n\nPaymentComponent->AppModule\n\n\n\n\n\nAccountService\n\nAccountService\n\nAppModule -->\n\nAccountService->AppModule\n\n\n\n\n\nSessionService\n\nSessionService\n\nAppModule -->\n\nSessionService->AppModule\n\n\n\n\n\nWebsocketService\n\nWebsocketService\n\nAppModule -->\n\nWebsocketService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            frontend/src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AccountService\n                        \n                        \n                            SessionService\n                        \n                        \n                            WebsocketService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AccountComponent\n                        \n                        \n                            AccountModule\n                        \n                        \n                            AppComponent\n                        \n                        \n                            AppRoutingModule\n                        \n                        \n                            DepositComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            PaymentComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppComponent } from './app.component';\nimport { CommonModule } from '@angular/common';  // Importar CommonModule\nimport { HttpClientModule } from '@angular/common/http';\nimport { AccountModule } from '../account/account.module';\nimport {AccountService} from \"../services/account.service\";\nimport {httpInterceptorProviders} from \"../auth/auth-interceptor\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {AppRoutingModule} from \"./app.routes\";\nimport {PaymentComponent} from \"../payment/payment.component\";\nimport {LoginComponent} from \"../login/login.component\";\nimport {DepositComponent} from \"../deposit/deposit.component\";\nimport {AccountComponent} from \"../account/account.component\"; // Asegúrate de que la ruta sea correcta\nimport { WebsocketService } from '../services/websocket.service';\nimport { SessionService } from '../services/session.service';\nimport { MaterialModule } from './material/material.module';\n\n@NgModule({\n  declarations: [\n\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AccountModule,\n    AppComponent,\n    CommonModule,\n    FormsModule,\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    PaymentComponent,\n    LoginComponent,\n    DepositComponent,\n    AccountComponent\n  ],\n  providers: [\n    AccountService,\n    WebsocketService,\n    SessionService,\n    httpInterceptorProviders\n  ]\n})\nexport class AppModule { }\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            frontend/src/app/app.routes.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from '../login/login.component';\nimport { AccountComponent } from '../account/account.component';\nimport { PaymentComponent } from '../payment/payment.component';\nimport { DepositComponent } from '../deposit/deposit.component';\nimport { HttpClientModule } from \"@angular/common/http\"; // HttpClientModule importado aquí\nimport { FormsModule } from \"@angular/forms\";\nimport { AuthService } from '../auth/auth.service'; // Servicio de autenticación\n// import { AuthInterceptor } from '../auth/auth-interceptor';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { DevComponent } from './dev/dev.component';\n\nexport const routes: Routes = [\n  { path: '', redirectTo: 'login', pathMatch: 'full' }, // Redirigir a la página de login\n  { path: 'login', component: LoginComponent },\n  { path: 'account', component: AccountComponent },\n  { path: 'payment', component: PaymentComponent },\n  { path: 'deposit', component: DepositComponent },\n  { path: 'dev', component: DevComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes),\n    HttpClientModule,  // Para manejar solicitudes HTTP, no funciona del todo bien (deprecated)\n    FormsModule\n  ],\n  exports: [\n    RouterModule\n  ],\n  providers: [\n    // AuthService,  // Proveedor del servicio de autenticación\n    // {\n    //   provide: HTTP_INTERCEPTORS,  // Agrega el interceptor\n    //   // useClass: AuthInterceptor,\n    //   multi: true\n    // }\n  ]\n})\nexport class AppRoutingModule { }\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            frontend/src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loginUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                attemptAuth\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, tokenStorage: TokenStorageService)\n                    \n                \n                        \n                            \n                                Defined in frontend/src/auth/auth.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tokenStorage\n                                                  \n                                                        \n                                                                        TokenStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        attemptAuth\n                        \n                    \n                \n            \n            \n                \nattemptAuth(credentials: LoginInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/auth/auth.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                credentials\n                                            \n                                                            LoginInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loginUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:8080/login'\n                    \n                \n                    \n                        \n                                Defined in frontend/src/auth/auth.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport {catchError, Observable, tap} from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { LoginInfo } from './login-info';\nimport { JwtResponse } from './jwt-response';\nimport { TokenStorageService } from '../services/token-storage.service';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private loginUrl = 'http://localhost:8080/login';\n\n  constructor(private http: HttpClient, private tokenStorage: TokenStorageService) { }\n\n  attemptAuth(credentials: LoginInfo): Observable {\n    return this.http.post(this.loginUrl, credentials, httpOptions).pipe(\n      map(response => {\n        console.log('Authentication response:', response); // Log for debugging\n        if (response.accessToken) {\n          this.tokenStorage.saveToken(response.accessToken);\n        } else {\n          console.log('Authentication response does not contain an accessToken.'); // Log for debugging\n          console.error('Authentication response does not contain an accessToken.');\n        }\n        return response;\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Balance.html":{"url":"interfaces/Balance.html","title":"interface - Balance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Balance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            frontend/src/models/account.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            balance\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        balance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        balance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id: number;\n  name: string;\n  surname: string; \n  password: string;\n  email: string;\n  cc: Balance; \n  dni: string;\n  createdAt: Date; \n}\n\nexport interface Balance {\n  id: number;\n  balance: number;\n  createdAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DepositComponent.html":{"url":"components/DepositComponent.html","title":"component - DepositComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DepositComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    frontend/src/deposit/deposit.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-deposit\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            CommonModule\n                                MaterialModule\n                \n            \n\n            \n                styleUrls\n                ./deposit.component.css\n            \n\n\n\n            \n                templateUrl\n                ./deposit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                            \n                                depositForm\n                            \n                            \n                                tries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                            \n                                maxTwoDecimalValidator\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(accountService: AccountService, formBuilder: FormBuilder, router: Router)\n                    \n                \n                        \n                            \n                                Defined in frontend/src/deposit/deposit.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/deposit/deposit.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maxTwoDecimalValidator\n                        \n                    \n                \n            \n            \n                \nmaxTwoDecimalValidator(control: any)\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/deposit/deposit.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/deposit/deposit.component.ts:81\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/deposit/deposit.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        account\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in frontend/src/deposit/deposit.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        depositForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : this.formBuilder.group({})\n                    \n                \n                    \n                        \n                                Defined in frontend/src/deposit/deposit.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n                    \n                        \n                                Defined in frontend/src/deposit/deposit.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {FormBuilder, FormGroup, ReactiveFormsModule, Validators} from \"@angular/forms\";\nimport { AccountService } from '../services/account.service';\nimport { User } from '../models/account.model';\nimport {CommonModule} from \"@angular/common\";\nimport { MaterialModule } from '../app/material/material.module';\n\n@Component({\n  selector: 'app-deposit',\n  templateUrl: './deposit.component.html',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    CommonModule,\n    MaterialModule\n],\n  styleUrls: ['./deposit.component.css']\n})\nexport class DepositComponent implements OnInit {\n  account!: User;\n  tries: number = 3;\n  depositForm: FormGroup = this.formBuilder.group({}); // Inicialización en la declaración\n\n  constructor(private accountService: AccountService, private formBuilder: FormBuilder, private router: Router) {\n    // Modificamos la validación de la contraseña para que requiera al menos 6 caracteres\n    this.depositForm = this.formBuilder.group({\n      amount: ['', [Validators.required, Validators.min(0.01), this.maxTwoDecimalValidator]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  // Custom validator for max two decimal places\n  maxTwoDecimalValidator(control: any): { [key: string]: boolean } | null {\n    const value = control.value;\n    if (value && !/^(\\d+(\\.\\d{1,2})?)$/.test(value)) {\n      return { maxTwoDecimals: true };\n    }\n    return null;\n  }\n\n  onSubmit() {\n    console.log(\"submit hecho\");\n    if (this.depositForm.invalid) {\n      alert('Please fill in all the required fields.');\n      return;\n    }\n\n    if(this.tries != 0) {\n      if (this.depositForm.get('password')?.value != this.account.password) {\n        this.tries -= 1;\n        alert(`Passwords do not match. You have ${this.tries} tries left.`);\n        if (this.tries == 0) {\n          alert('You have surpassed the maximum amount of tries. Please log again.');\n          this.router.navigate(['/login']);\n          return;\n        }\n        return;\n      }\n    }\n\n    const amount = parseFloat(this.depositForm.get('amount')?.value);\n    if (isNaN(amount) || amount  {\n      this.router.navigate(['/account']);\n    }, 1000);\n  }\n\n  goBack() {\n    console.log(\"vuelve account\");\n    this.router.navigate(['/account']);\n  }\n\n  ngOnInit(): void {\n    this.account = this.accountService.getAccount();\n  }\n}\n\n    \n\n    \n        \n  \n    arrow_back\n    Volver\n  \n\n  Deposit Money\n  \n  \n    \n      {{ account.name }}\n      Saldo total: {{ account.cc.balance }}\n    \n  \n\n  \n    \n      \n        \n          Select Recipient\n          \n            First option\n            Second option\n          \n         -->\n\n        \n          Amount\n          \n          €&nbsp; -->\n          €\n        \n        \n          \n            Please enter a valid amount with up to two decimal places.\n          \n          \n            The amount exceeds your current balance.\n          \n        \n        \n          Verification\n          \n        \n        \n          Password must be at least 6 characters long.\n        \n        \n          done\n          Confirm Payment\n        \n      \n\n    \n  \n\n\n\n    \n\n    \n                \n                    ./deposit.component.css\n                \n                .back-button {\n  /* position: absolute; */\n  /* top: 5rem;  Baja el botón más abajo del borde superior */\n  /* left: 20px; Ajusta la posición hacia la derecha si es necesario */\n  z-index: 1000; /* Asegura que esté por encima de otros elementos */\n}\n\nheader {\n  margin-top: 100px;  /* Aumenta el margen superior para dar espacio al botón */\n  text-align: center;\n}\n\nform {\n  margin-top: 20px; /* Añade margen para dar espacio al formulario */\n}\n\nbutton[type=\"submit\"] {\n  margin-top: 20px; /* Añade un margen superior para el botón de confirmar */\n}\n\n\n.btn-light {\n  padding: 10px 20px; /* Ajusta el tamaño del botón si es necesario */\n  font-size: 16px; /* Ajusta el tamaño del texto */\n}\n\n.user-info-card {\n  /* position: absolute; */\n  /* top: 3rem;\n  left: 40%; */\n  width: 100%;\n  max-width: 400px;\n  margin-bottom: 20px;\n  text-align: center;\n}\n\n.card-content{\n  max-width: 25%;\n  /* left: 50vw; */\n  /* right: 50%; */\n  /* top: 7rem; */\n}\n\n.main{\n  height: 90vh;\n  width: 90vw;\n  margin: auto;\n  \n}\n\n.right-align {\n  text-align: right;\n}\n\n.main {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      arrow_back    Volver    Deposit Money              {{ account.name }}      Saldo total: {{ account.cc.balance }}                                    Select Recipient                      First option            Second option                   -->                  Amount                    €  -->          €                                      Please enter a valid amount with up to two decimal places.                                The amount exceeds your current balance.                                    Verification                                    Password must be at least 6 characters long.                          done          Confirm Payment                    '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DepositComponent', 'selector': 'app-deposit'},{'name': 'DevComponent', 'selector': 'app-dev'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PaymentComponent', 'selector': 'app-payment'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DepositComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DepositModule.html":{"url":"modules/DepositModule.html","title":"module - DepositModule","body":"\n                   \n\n\n\n\n    Modules\n    DepositModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DepositModule\n\n\n\ncluster_DepositModule_imports\n\n\n\n\nAccountComponent\n\nAccountComponent\n\n\n\nDepositModule\n\nDepositModule\n\nDepositModule -->\n\nAccountComponent->DepositModule\n\n\n\n\n\nDepositComponent\n\nDepositComponent\n\nDepositModule -->\n\nDepositComponent->DepositModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            frontend/src/deposit/deposit.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AccountComponent\n                        \n                        \n                            DepositComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { DepositComponent } from './deposit.component';\nimport {AccountComponent} from \"../../account/account.component\";\n\n@NgModule({\n  declarations: [],\n  imports: [\n    AccountComponent,\n    CommonModule,\n    RouterModule,\n    DepositComponent\n  ]\n})\nexport class DepositModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DepositService.html":{"url":"injectables/DepositService.html","title":"injectable - DepositService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DepositService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            frontend/src/services/deposit.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in frontend/src/services/deposit.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DepositService {\n\n  constructor(private http: HttpClient) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DevComponent.html":{"url":"components/DevComponent.html","title":"component - DevComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DevComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    frontend/src/app/dev/dev.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dev\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./dev.component.html\n            \n\n\n\n            \n                styleUrl\n                ./dev.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-dev',\n  standalone: true,\n  imports: [],\n  templateUrl: './dev.component.html',\n  styleUrl: './dev.component.css'\n})\nexport class DevComponent {\n\n}\n\n    \n\n    \n        \n    Pagina para testeo\n    \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Pagina para testeo                '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DepositComponent', 'selector': 'app-deposit'},{'name': 'DevComponent', 'selector': 'app-dev'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PaymentComponent', 'selector': 'app-payment'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DevComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    frontend/src/app/footer/footer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./footer.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  standalone: true,\n  imports: [],\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.css'\n})\nexport class FooterComponent {\n\n}\n\n    \n\n    \n        \n    Payment official website\n    \n    Rubén Villafanez, Alejandro Carballeira, Ovidiu Teodor, Adrian Carral and Rubén Bécares\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Payment official website        Rubén Villafanez, Alejandro Carballeira, Ovidiu Teodor, Adrian Carral and Rubén Bécares'\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DepositComponent', 'selector': 'app-deposit'},{'name': 'DevComponent', 'selector': 'app-dev'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PaymentComponent', 'selector': 'app-payment'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    frontend/src/app/header/header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                MaterialModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n            \n                styleUrl\n                ./header.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MaterialModule } from '../material/material.module';\n\n@Component({\n  selector: 'app-header',\n  standalone: true,\n  imports: [\n    MaterialModule\n  ],\n  templateUrl: './header.component.html',\n  styleUrl: './header.component.css'\n})\nexport class HeaderComponent {\n\n}\n\n    \n\n    \n        \n    Payment Website\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Payment Website'\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DepositComponent', 'selector': 'app-deposit'},{'name': 'DevComponent', 'selector': 'app-dev'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PaymentComponent', 'selector': 'app-payment'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtResponse.html":{"url":"classes/JwtResponse.html","title":"class - JwtResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            frontend/src/auth/jwt-response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                accessToken\n                            \n                            \n                                    Optional\n                                type\n                            \n                            \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in frontend/src/auth/jwt-response.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in frontend/src/auth/jwt-response.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in frontend/src/auth/jwt-response.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class JwtResponse {\n  accessToken?: string;\n  type?: string;\n  username?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LogMessage.html":{"url":"interfaces/LogMessage.html","title":"interface - LogMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LogMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            frontend/src/models/login.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                                \n                                        \n                                            userName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LogMessage{\n    userId: number;\n    userName: string;\n    password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    frontend/src/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            FormsModule\n                            NgIf\n                                MaterialModule\n                \n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                errorMessage\n                            \n                            \n                                form\n                            \n                            \n                                hide\n                            \n                            \n                                isConnected\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                isLoginFailed\n                            \n                            \n                                loginData\n                            \n                            \n                                    Private\n                                    Optional\n                                loginInfo\n                            \n                            \n                                loginSuccessMessage\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                token\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clickEvent\n                            \n                            \n                                connectToRoom\n                            \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, tokenStorage: TokenStorageService, route: ActivatedRoute, accountService: AccountService, websocket: WebsocketService, sesionService: SessionService)\n                    \n                \n                        \n                            \n                                Defined in frontend/src/login/login.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tokenStorage\n                                                  \n                                                        \n                                                                        TokenStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        websocket\n                                                  \n                                                        \n                                                                        WebsocketService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sesionService\n                                                  \n                                                        \n                                                                        SessionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clickEvent\n                        \n                    \n                \n            \n            \n                \nclickEvent(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/login/login.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        connectToRoom\n                        \n                    \n                \n            \n            \n                \nconnectToRoom(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/login/login.component.ts:166\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(message: LogMessage)\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/login/login.component.ts:147\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            LogMessage\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/login/login.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/login/login.component.ts:92\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in frontend/src/login/login.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in frontend/src/login/login.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in frontend/src/login/login.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in frontend/src/login/login.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isConnected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in frontend/src/login/login.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in frontend/src/login/login.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoginFailed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in frontend/src/login/login.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LogMessage | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in frontend/src/login/login.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        loginInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoginInfo\n\n                    \n                \n                    \n                        \n                                Defined in frontend/src/login/login.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginSuccessMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in frontend/src/login/login.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in frontend/src/login/login.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in frontend/src/login/login.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in frontend/src/login/login.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport { FormsModule, NgForm } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport {LoginInfo} from \"../auth/login-info\";\nimport {AuthService} from \"../auth/auth.service\";\nimport { LogMessage } from '../models/login.model';\nimport {TokenStorageService} from \"../services/token-storage.service\";\nimport {NgIf} from \"@angular/common\";  // Importa Router\n// import { LoginService } from '../services/login.service';\nimport { MaterialModule } from '../app/material/material.module';\nimport {signal} from '@angular/core';\nimport { AccountService } from '../services/account.service';\nimport { WebsocketService } from '../services/websocket.service';\nimport { SessionService } from '../services/session.service';\n\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [\n    FormsModule,\n    NgIf,\n    MaterialModule\n  ],\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']  // Cambia styleUrl a styleUrls\n})\n\nexport class LoginComponent implements OnInit {\n  form: any = {};\n  isConnected: boolean = false;\n  email: string = '';\n  password: string = '';\n  userId: string = '';\n  token?: string;\n  isLoggedIn = false;\n  isLoginFailed = false;\n  errorMessage = '';\n  loginSuccessMessage: string = '';  \n  loginData: LogMessage | null = null; \n  private loginInfo?: LoginInfo;\n\n  // websocket!: WebsocketService\n\n  constructor(private authService: AuthService, \n    private tokenStorage: TokenStorageService,\n    // private loginService: LoginService, \n    private route: ActivatedRoute,\n    private accountService: AccountService,\n    private websocket: WebsocketService,\n    private sesionService: SessionService\n  ) {}  // Inyecta Router en el constructor\n  \n  hide = signal(true);\n  clickEvent(event: MouseEvent) {\n    this.hide.set(!this.hide());\n    event.stopPropagation();\n  }\n\n  ngOnInit(): void {\n    // if (this.tokenStorage.getToken() != null && this.tokenStorage.getToken() != '{}') {\n    //     this.isLoggedIn = true;\n    // }\n    // this.route.params.subscribe(params => {\n    //   this.userId = params['userId'];  // Captura el userId dinámicamente desde la URL\n    //   this.connectToRoom(this.userId);  \n  \n      // // Se suscribe para recibir los datos de login\n      //! this.loginService.getLoginMessages().subscribe((data: LogMessage) => {\n      //!   this.loginData = data;\n      //!   console.log(\"Datos de login guardados: \", this.loginData);\n      //!   this.login(data);\n      //! });\n  \n      // // Se suscribe para recibir la notificación de inicio de sesión exitoso\n      //! this.loginService.getLoginNotification().subscribe((notification: string) => {\n      //!   console.log(\"Notificación recibida:\", notification);\n      //!   this.loginSuccessMessage = notification;\n      //!   console.log(this.loginSuccessMessage);  \n      //! });\n    // });\n\n    // this.websocket.openConnection(\"1\");\n    // this.websocket = WebsocketService.getInstance()\n\n    // this.websocket.openConnection(this.sesionService.getSessionId() ?? \"\");\n    this.isConnected = true; // ! Esto es temporal\n\n    TokenStorageService.saveId(TokenStorageService.generateUUID());\n  }\n\n  onSubmit() {\n    if (!this.isConnected) {\n      console.error('No hay conexión STOMP activa.');\n      return;\n    }\n    const loginMessage = {\n      userId: -1,\n      userName: this.form.username,\n      password: this.form.password\n    } as LogMessage;\n    console.log(\"Enviando mensaje de inicio de sesión:\", loginMessage);\n\n    this.accountService.getUserLogin(loginMessage);\n    this.accountService.getUserObservable().subscribe((user: LogMessage) => {\n      this.login(user);\n    });\n\n    // Usa el servicio `LoginService` para enviar el mensaje al servidor\n      // ! this.loginService.sendMessage(this.userId, loginMessage); \n  //   this.loginService.getLoginNotification().subscribe((notification: string) => {\n      \n  //     // // setTimeout(() => {\n        // window.location.replace(\"/account\");\n  //     // // }, 2000);\n  //     // console.log(this.form);\n      \n    \n    console.log(this.form);\n    // console.log(\"me voy a accountttt\");\n    // localStorage.setItem('loginNotification', `Inicio de sesión exitoso para el usuario ${this.form.username}`);\n    //window.location.replace(\"account\"); //aqui hay un cambio de pagina\n\n  //     // this.loginInfo = new LoginInfo(this.form.username, this.form.password);\n\n  //     // this.authService.attemptAuth(this.loginInfo).subscribe(\n  //     //   data => {\n  //     //     this.tokenStorage.saveToken(data.accessToken || '{}');\n  //     //     this.tokenStorage.saveUsername(data.username || '{}');\n  //     //     console.log('Access Token:', data.accessToken);\n  //     //     this.isLoginFailed = false;\n  //     //     this.isLoggedIn = true;\n  //     //     this.token = this.tokenStorage.getToken();\n  //     //     //window.location.replace(\"account\");  // Aqui hay otro cambio de pagina?\n          \n  //     //   },\n  //     //   error => {\n  //     //     console.log(error);\n  //     //     this.errorMessage = error.error.message;\n  //     //     this.isLoginFailed = true;\n  //     //   }\n  //     // );\n  //   }\n  // )\n}\n\n  login(message: LogMessage){\n\n    console.log(\"Login...\")\n\n    this.isLoginFailed = false;\n\n    if(message.userId != -1){\n      console.log(\"Login Success\")\n      window.location.replace(\"/account\");\n      TokenStorageService.saveId(message.userId)\n      localStorage.setItem('loginNotification', `Inicio de sesión exitoso para el usuario ${this.form.username}`);\n      \n    }else{\n      console.log(\"Login Fail\")\n      this.isLoginFailed = true;\n    }\n\n  }\n\n  connectToRoom(userId: string): void {\n    // this.loginService.joinRoom(userId);  // Pasa el userId al servicio para manejar la conexión WebSocket\n    this.isConnected = true;\n  }\n\n  //envia el mensaje con los datos del login\n  /*\n  sendMessage(): void {\n    if (this.isConnected) {\n      const logMessage = {\n        userId: this.email,\n        password: this.password\n      } as LogMessage;\n  \n      console.log(\"Enviando mensaje de inicio de sesión:\", logMessage);  \n      this.loginService.sendMessage(this.userId, logMessage);  // Usa el roomId dinámico\n    } else {\n      console.error('No hay conexión STOMP activa.');\n    }\n  }\n*/\n}\n\n    \n\n    \n        \n  \n    \n      Login\n      \n        \n          Username\n          \n          \n            \n              Username is required\n            \n          \n        \n        \n          Password\n          \n          \n          \n            \n              Password is required\n            \n            \n              Password must be at least 6 characters\n            \n          \n        \n        \n          \n            Login\n          \n          \n            Login failed: {{ errorMessage }}\n          \n        \n      \n\n      \n      \n\n    \n  \n -->\n\n  \n  Login\n\n  \n    \n      \n        Username\n        \n      \n      \n        \n          Username is required\n        \n      \n      \n      \n        Password\n        \n          \n  \n        \n          {{hide() ? 'visibility_off' : 'visibility'}}\n        \n      \n      \n        \n          Password is required\n        \n        \n          Password must be at least 6 characters\n        \n      \n      \n      Login\n    \n    \n            Login failed {{ errorMessage }}\n          \n  \n\n    \n\n    \n                \n                    ./login.component.css\n                \n                html,body{\n    height: 100%;\n    width: 100%;\n    padding: 0;\n    margin: 0;\n}\n\nmat-card{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    /* width: 50%;\n    height: 50%; */\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Login                        Username                                              Username is required                                                Password                                                        Password is required                                      Password must be at least 6 characters                                                            Login                                Login failed: {{ errorMessage }}                                           -->    Login                    Username                                      Username is required                                  Password                                      {{hide() ? \\'visibility_off\\' : \\'visibility\\'}}                                      Password is required                          Password must be at least 6 characters                          Login                    Login failed {{ errorMessage }}            '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DepositComponent', 'selector': 'app-deposit'},{'name': 'DevComponent', 'selector': 'app-dev'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PaymentComponent', 'selector': 'app-payment'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginInfo.html":{"url":"classes/LoginInfo.html","title":"class - LoginInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            frontend/src/auth/login-info.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string, password: string)\n                    \n                \n                        \n                            \n                                Defined in frontend/src/auth/login-info.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in frontend/src/auth/login-info.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in frontend/src/auth/login-info.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoginInfo {\n\n  username: string;\n  password: string;\n\n  constructor(username: string, password: string) {\n    this.username = username;\n    this.password = password;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MaterialModule\n\n\n\ncluster_MaterialModule_imports\n\n\n\ncluster_MaterialModule_exports\n\n\n\n\nMatOption\n\nMatOption\n\n\n\nMaterialModule\n\nMaterialModule\n\nMaterialModule -->\n\nMatOption->MaterialModule\n\n\n\n\n\nMatSelect\n\nMatSelect\n\nMaterialModule -->\n\nMatSelect->MaterialModule\n\n\n\n\n\nMatOption \n\nMatOption \n\nMatOption  -->\n\nMaterialModule->MatOption \n\n\n\n\n\nMatSelect \n\nMatSelect \n\nMatSelect  -->\n\nMaterialModule->MatSelect \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            frontend/src/app/material/material.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            MatOption\n                        \n                        \n                            MatSelect\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MatOption\n                        \n                        \n                            MatSelect\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\n\nimport {MatCardModule} from '@angular/material/card';\nimport {MatTableModule} from '@angular/material/table';\nimport { MatOption, MatSelect } from '@angular/material/select';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n// Importa aquí otros módulos que necesites\n\n@NgModule({\n  imports: [\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatListModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCardModule,\n    MatTableModule,\n    MatSelect,\n    MatOption,\n    // signal\n    // Agrega otros módulos aquí\n  ],\n  exports: [\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatListModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCardModule,\n    MatTableModule,\n    MatSelect,\n    MatOption,\n    // signal\n    // Exporta los mismos módulos\n  ]\n})\nexport class MaterialModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationComponent.html":{"url":"components/NotificationComponent.html","title":"component - NotificationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotificationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    frontend/src/app/notification/notification.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notification\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./notification.component.html\n            \n\n\n\n            \n                styleUrl\n                ./notification.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _snackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(websocket: WebsocketService, paymentService: PaymentService)\n                    \n                \n                        \n                            \n                                Defined in frontend/src/app/notification/notification.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        websocket\n                                                  \n                                                        \n                                                                        WebsocketService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        paymentService\n                                                  \n                                                        \n                                                                        PaymentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/app/notification/notification.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MatSnackBar)\n                    \n                \n                    \n                        \n                                Defined in frontend/src/app/notification/notification.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { WebsocketService } from '../../services/websocket.service';\nimport { PaymentService } from '../../services/payment.service';\nimport { Payment } from '../../models/payment.model';\n\n@Component({\n  selector: 'app-notification',\n  standalone: true,\n  imports: [],\n  templateUrl: './notification.component.html',\n  styleUrl: './notification.component.css'\n})\nexport class NotificationComponent {\n\n  private _snackBar = inject(MatSnackBar);\n  \n\n  constructor(private websocket: WebsocketService, private paymentService: PaymentService){\n    console.log(\"Constructor notificacion\");\n    // this._snackBar.open(\"Hola\");\n    this.websocket.onConnectionReady().subscribe((isConnected) => {\n      if (isConnected) {\n        this.getData();\n      }\n    });\n  }\n\n  getData() {\n    this.paymentService.subscribePaymentNotification();\n    this.paymentService.getPaymentNotification().subscribe((payment: Payment) => {\n      console.log(\"PaymentNotification recibidos\")\n      console.log(payment)\n      this._snackBar.open(`El pago con id ${payment.id} esta en estado ${payment.state.description}`);\n    });\n\n  }\n\n}\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DepositComponent', 'selector': 'app-deposit'},{'name': 'DevComponent', 'selector': 'app-dev'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PaymentComponent', 'selector': 'app-payment'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotificationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Payment.html":{"url":"interfaces/Payment.html","title":"interface - Payment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Payment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            frontend/src/models/payment.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            receiver\n                                        \n                                \n                                \n                                        \n                                            sender\n                                        \n                                \n                                \n                                        \n                                            state\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        receiver\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        receiver:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sender\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sender:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        state:         State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { User } from \"./account.model\";\n\n// Crear `paymentData` asegurando que `sender` también sea del tipo `User`\nexport interface PaymentMessage {\n  sender: User; // El remitente del pago, de tipo User\n  receiver: User; // El destinatario del pago, de tipo User\n  amount: number; // Monto del pago\n  state: number; // Estado del pago, por ejemplo, 0 para pendiente, 1 para aprobado, etc.\n  date: Date; // Fecha del pago\n}\n\nexport interface Payment {\n  id: number,\n  sender: User; // El remitente del pago, de tipo User\n  receiver: User; // El destinatario del pago, de tipo User\n  amount: number; // Monto del pago\n  state: State; // Estado del pago, por ejemplo, 0 para pendiente, 1 para aprobado, etc.\n  date: Date; // Fecha del pago\n}\n\nexport interface State {\n  state: number,\n  description: string\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaymentComponent.html":{"url":"components/PaymentComponent.html","title":"component - PaymentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PaymentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    frontend/src/payment/payment.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-payment\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            FormsModule\n                            ReactiveFormsModule\n                            CommonModule\n                                MaterialModule\n                \n            \n\n            \n                styleUrls\n                ./payment.component.css\n            \n\n\n\n            \n                templateUrl\n                ./payment.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                            \n                                accounts\n                            \n                            \n                                code\n                            \n                            \n                                codeExpirationTime\n                            \n                            \n                                isConnected\n                            \n                            \n                                paymentData\n                            \n                            \n                                paymentForm\n                            \n                            \n                                recipientUsers\n                            \n                            \n                                tries\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPayment\n                            \n                            \n                                generarCodigo\n                            \n                            \n                                getData\n                            \n                            \n                                goBack\n                            \n                            \n                                maxTwoDecimalValidator\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(accountService: AccountService, router: Router, formBuilder: FormBuilder, paymentService: PaymentService, websocket: WebsocketService, tokenStorage: TokenStorageService)\n                    \n                \n                        \n                            \n                                Defined in frontend/src/payment/payment.component.ts:58\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        paymentService\n                                                  \n                                                        \n                                                                        PaymentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        websocket\n                                                  \n                                                        \n                                                                        WebsocketService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tokenStorage\n                                                  \n                                                        \n                                                                        TokenStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmPayment\n                        \n                    \n                \n            \n            \n                \nconfirmPayment()\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/payment/payment.component.ts:140\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generarCodigo\n                        \n                    \n                \n            \n            \n                \ngenerarCodigo()\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/payment/payment.component.ts:247\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/payment/payment.component.ts:102\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/payment/payment.component.ts:82\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maxTwoDecimalValidator\n                        \n                    \n                \n            \n            \n                \nmaxTwoDecimalValidator(control: any)\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/payment/payment.component.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/payment/payment.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/payment/payment.component.ts:147\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        account\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: 0,\n    name: '',\n    surname: '',\n    password: '',\n    email: '',\n    cc: {\n      id: 0,\n      balance: 0,\n      createdAt: new Date()\n    },\n    dni: '',\n    createdAt: new Date()\n  }\n                    \n                \n                    \n                        \n                                Defined in frontend/src/payment/payment.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        accounts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in frontend/src/payment/payment.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in frontend/src/payment/payment.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        codeExpirationTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in frontend/src/payment/payment.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isConnected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in frontend/src/payment/payment.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paymentData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PaymentMessage | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in frontend/src/payment/payment.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paymentForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : this.formBuilder.group({})\n                    \n                \n                    \n                        \n                                Defined in frontend/src/payment/payment.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recipientUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in frontend/src/payment/payment.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n                    \n                        \n                                Defined in frontend/src/payment/payment.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in frontend/src/payment/payment.component.ts:52\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n  ValidationErrors, ValidatorFn,\n  Validators\n} from \"@angular/forms\";\nimport {CommonModule} from \"@angular/common\";\nimport {Balance, User} from \"../models/account.model\";\nimport {AccountService} from \"../services/account.service\";\nimport { MaterialModule } from '../app/material/material.module';\nimport { PaymentService } from '../services/payment.service'; \nimport { PaymentMessage } from '../models/payment.model';\nimport { ActivatedRoute } from '@angular/router';\nimport { WebsocketService } from '../services/websocket.service';\nimport { TokenStorageService } from '../services/token-storage.service';\n\n\n@Component({\n  selector: 'app-payment',\n  templateUrl: './payment.component.html',\n  standalone: true,\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    MaterialModule\n],\n  styleUrls: ['./payment.component.css']\n})\nexport class PaymentComponent implements OnInit {\n  isConnected: boolean = false;\n  account: User = {\n    id: 0,\n    name: '',\n    surname: '',\n    password: '',\n    email: '',\n    cc: {\n      id: 0,\n      balance: 0,\n      createdAt: new Date()\n    },\n    dni: '',\n    createdAt: new Date()\n  };\n  tries: number = 3;\n  userId: string = '';\n  paymentData: PaymentMessage | null = null;\n  paymentForm: FormGroup = this.formBuilder.group({}); // Inicialización en la declaración\n  code!: number;\n  recipientUsers: User[] = [];\n  codeExpirationTime!: number;\n  accounts: any;\n\n  constructor(private accountService: AccountService, \n    private router: Router, \n    private formBuilder: FormBuilder, \n    private paymentService: PaymentService, \n    private websocket: WebsocketService,\n    private tokenStorage: TokenStorageService) {\n\n    // Define los controles recipient, amount, y password con sus validaciones\n    this.paymentForm = this.formBuilder.group({\n      recipient: ['', Validators.required],\n      amount: [\n        '',\n        [\n          Validators.required,\n          Validators.min(0.01),\n          this.maxTwoDecimalValidator,\n          //this.validateBalance(),\n        ]\n      ],\n      verification: ['', [Validators.required, Validators.minLength(6), Validators.pattern(/^\\d+$/)]]\n    });\n  }\n  goBack() {\n    this.router.navigate(['/account']);\n  }\n\n  ngOnInit(): void {\n    // this.account = this.accountService.getAccount();\n    // // this.recipientEmails = this.paymentService.getRecipientEmails();\n    // this.accounts = this.accountService.getAccounts();\n    //console.log('Payment Form Initialized:', this.paymentForm.value);\n    //! this.route.params.subscribe(params => {\n    //!   this.userId = params['userId'];  // Captura el userId dinámicamente desde la URL\n    //!   this.connectToRoom(this.userId);  \n      \n    //! }) \n    this.websocket.onConnectionReady().subscribe((isConnected) => {\n      if (isConnected) {\n        this.getData();\n      }\n    });\n  }\n  getData() {\n    this.accountService.getUserById(TokenStorageService.getId());\n    this.accountService.getUserObservable().subscribe((user: User) => {\n      this.account = user;\n      this.accountService.getUsers();\n      this.accountService.getUsersObservable().subscribe((users: User[]) => {\n        console.log(\"Users recibidos\")\n        console.log(users)\n        if(users){\n          this.recipientUsers = users;\n        }\n      });\n    });\n      \n  }\n\n  maxTwoDecimalValidator(control: any): { [key: string]: boolean } | null {\n    const value = control.value;\n    if (value && !/^(\\d+(\\.\\d{1,2})?)$/.test(value)) {\n      return { maxTwoDecimals: true };\n    }\n    return null;\n  }\n  /*\n  validateBalance(): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      if (!this.account) {\n        return null;\n      }\n\n      const amount = parseFloat(control.value);\n      if (amount > this.account.balance.balance) {\n        return { exceedsBalance: true }; // Error si excede el balance\n      }\n      return null; // Válido si no excede el balance\n    };\n  }*/\n\n  confirmPayment() {\n    alert(\"Payment has been successfully done!\");\n    setTimeout(() => {\n      this.router.navigate(['/account']);\n    }, 1000); // 1000 ms = 1 segundo\n  }\n\n  onSubmit() {\n    console.log('Recipient:', this.paymentForm.get('recipient')?.value);\n    console.log('Amount:', this.paymentForm.get('amount')?.value);\n    console.log('Verification Code:', this.paymentForm.get('verification')?.value);\n    if (this.paymentForm.invalid) {\n      alert('Please fill in all the required fields.');\n      return;\n    }\n    console.log(\"Form valido\")\n    const enteredCode = this.paymentForm.get('verification')?.value;\n\n    if (Date.now() > this.codeExpirationTime) {\n      alert('El código ha caducado. Por favor, genera un nuevo código.');\n      return;\n    }\n\n    if (this.tries > 0 && enteredCode !== String(this.code)) {\n      this.tries--;\n      alert(`Code do not match. You have ${this.tries} tries left.`);\n      if (this.tries === 0) {\n        alert('You have exceeded the maximum tries. Please log in again.');\n        this.router.navigate(['/login']);\n      }\n      return;\n    }\n\n    const amount = parseFloat(this.paymentForm.get('amount')?.value);\n    if (isNaN(amount) || amount  this.account.balance.balance) {\n      alert('The amount exceeds your current balance.');\n      return;\n    }*/\n\n    // if (!this.isConnected) {\n    //   console.error('No hay conexión STOMP activa en payment');\n    //   return;\n    // }\n\n    // Preparar los datos del pago\n    const balance: Balance = {\n      id:0,\n      balance:0,\n      createdAt: new Date()\n    }\n\n    const receiver: User = {\n      id: this.paymentForm.get('recipient')?.value, // Ajusta según cómo obtienes el valor del formulario\n      email: '', // Proporciona un valor adecuado o deja como un string vacío si no es necesario\n      password: '', // Proporciona un valor adecuado o deja como un string vacío si no es necesario\n      name: this.paymentForm.get('recipient')?.value, // Si necesitas usar otro valor, ajusta aquí\n      surname: '', // Proporciona un valor adecuado o inicialízalo como vacío\n      cc: balance, // O asigna un valor adecuado si es necesario\n      dni: '', // Proporciona un valor adecuado o inicialízalo como vacío\n      createdAt: new Date() // O ajusta según lo que sea necesario\n    };\n\n    // Enviar el pago a través de WebSockets (da error)\n    //this.paymentService.sendPayment(this.account.userId, paymentData);\n\n  // * Inicio Susceptible de error\n    \n    // Crear el objeto `paymentData`\n    const paymentData: PaymentMessage = {\n      sender: this.account as User, // Asegúrate de que `this.account` sea un objeto válido de tipo `User`\n      receiver: this.paymentForm.get('recipient')?.value, // El `receiver` construido arriba\n      amount: parseFloat(this.paymentForm.get('amount')?.value),\n      state: 1, // Estado inicial, por ejemplo, 0 para pendiente\n      date: new Date()\n    }as PaymentMessage;\n    \n    // Crear `paymentData` asegurando que `sender` también sea del tipo `User`\n\n    console.log('Preparando el pago para ser enviado:', paymentData);\n    this.paymentService.sendPayment(this.account.id.toString(), paymentData); // Usa el ID o un valor que represente al `userId` en el backend\n    console.log('Mensaje de pago enviado a través de WebSockets.');\n    // Aquí podrías esperar una confirmación de éxito a través de WebSockets antes de llamar a confirmPayment\n    // Supongamos que `this.paymentService` emite un evento cuando recibe confirmación\n    //! this.paymentService.getPaymentNotification().subscribe((notification) => {\n    //!     if (notification === 'Payment processed successfully') {\n    //!         this.confirmPayment();\n    //!     }\n    //! });\n    // * Fin Susceptible de error\n    // Mensaje de confirmación\n    alert('Payment request sent.');\n    setTimeout(() => {\n      this.router.navigate(['/account']);\n    }, 1000);\n    }else{\n      console.log(\"Amount invalido\");\n    }\n  }\n\n  generarCodigo(): void {\n    // Genera un código de 6 dígitos aleatorio\n    this.code = Math.floor(100000 + Math.random() * 900000);\n    this.codeExpirationTime = Date.now() + 30000; // 30 segundos\n    // Muestra el código en un alert\n    alert(`Tu código generado es: ${this.code}. Este código caducará en 30 segundos.`);\n  }\n\n  //! connectToRoom(userId: string): void {\n  //!   this.paymentService.joinRoom(userId);  // Pasa el userId al servicio para manejar la conexión WebSocket\n  //!   this.isConnected = true;\n  //! }\n  \n}\n\n    \n\n    \n        \n  \n    arrow_back\n    Volver\n  \n\n  Make a Payment\n\n  \n    \n      {{ account.name }}\n      Saldo total: {{ account.cc.balance }}\n    \n  \n\n  \n    \n      \n        \n          Select Recipient\n          \n            \n              {{ user.email }}\n            \n          \n        \n\n        \n          Amount\n          \n          €\n        \n\n        \n          \n            Please enter a valid amount with up to two decimal places.\n          \n          \n            The amount exceeds your current balance.\n          \n        \n\n        \n          Verification\n          \n        \n\n        \n          Password must be at least 6 characters long.\n        \n\n        \n          done\n          Confirm Payment\n        \n\n        Generar Código\n      \n\n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./payment.component.css\n                \n                .back-button {\n  /* position: absolute; */\n  /* top: 5rem;  Baja el botón más abajo del borde superior */\n  /* left: 20px; Ajusta la posición hacia la derecha si es necesario */\n  z-index: 1000; /* Asegura que esté por encima de otros elementos */\n}\n\nheader {\n  margin-top: 100px;  /* Aumenta el margen superior para dar espacio al botón */\n  text-align: center;\n}\n\nform {\n  margin-top: 20px; /* Añade margen para dar espacio al formulario */\n}\n\nbutton[type=\"submit\"] {\n  margin-top: 20px; /* Añade un margen superior para el botón de confirmar */\n}\n\n\n.btn-light {\n  padding: 10px 20px; /* Ajusta el tamaño del botón si es necesario */\n  font-size: 16px; /* Ajusta el tamaño del texto */\n}\n\n.user-info-card {\n  /* position: absolute; */\n  /* top: 3rem;\n  left: 40%; */\n  width: 100%;\n  max-width: 400px;\n  margin-bottom: 20px;\n  text-align: center;\n}\n\n.card-content{\n  max-width: 25%;\n  /* left: 50vw; */\n  /* right: 50%; */\n  /* top: 7rem; */\n}\n\n.main{\n  height: 90vh;\n  width: 90vw;\n  margin: auto;\n  \n}\n\n.right-align {\n  text-align: right;\n}\n\n.main {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      arrow_back    Volver    Make a Payment            {{ account.name }}      Saldo total: {{ account.cc.balance }}                                    Select Recipient                                    {{ user.email }}                                                Amount                    €                                      Please enter a valid amount with up to two decimal places.                                The amount exceeds your current balance.                                    Verification                                    Password must be at least 6 characters long.                          done          Confirm Payment                Generar Código            '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DepositComponent', 'selector': 'app-deposit'},{'name': 'DevComponent', 'selector': 'app-dev'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PaymentComponent', 'selector': 'app-payment'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PaymentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaymentMessage.html":{"url":"interfaces/PaymentMessage.html","title":"interface - PaymentMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaymentMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            frontend/src/models/payment.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            receiver\n                                        \n                                \n                                \n                                        \n                                            sender\n                                        \n                                \n                                \n                                        \n                                            state\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        receiver\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        receiver:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sender\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sender:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        state:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { User } from \"./account.model\";\n\n// Crear `paymentData` asegurando que `sender` también sea del tipo `User`\nexport interface PaymentMessage {\n  sender: User; // El remitente del pago, de tipo User\n  receiver: User; // El destinatario del pago, de tipo User\n  amount: number; // Monto del pago\n  state: number; // Estado del pago, por ejemplo, 0 para pendiente, 1 para aprobado, etc.\n  date: Date; // Fecha del pago\n}\n\nexport interface Payment {\n  id: number,\n  sender: User; // El remitente del pago, de tipo User\n  receiver: User; // El destinatario del pago, de tipo User\n  amount: number; // Monto del pago\n  state: State; // Estado del pago, por ejemplo, 0 para pendiente, 1 para aprobado, etc.\n  date: Date; // Fecha del pago\n}\n\nexport interface State {\n  state: number,\n  description: string\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaymentService.html":{"url":"injectables/PaymentService.html","title":"injectable - PaymentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaymentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            frontend/src/services/payment.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                account\n                            \n                            \n                                    Private\n                                account2\n                            \n                            \n                                    Private\n                                balance1\n                            \n                            \n                                    Private\n                                balance2\n                            \n                            \n                                paymentHistory\n                            \n                            \n                                    Private\n                                paymentNotification\n                            \n                            \n                                    Private\n                                paymentsSubject\n                            \n                            \n                                    Private\n                                paymentSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPaymentMessages\n                            \n                            \n                                getPaymentNotification\n                            \n                            \n                                    Public\n                                getPaymentsByUser\n                            \n                            \n                                getPaymentsMOCK\n                            \n                            \n                                getPaymentsObservable\n                            \n                            \n                                sendPayment\n                            \n                            \n                                subscribePaymentNotification\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(websocketService: WebsocketService)\n                    \n                \n                        \n                            \n                                Defined in frontend/src/services/payment.service.ts:58\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        websocketService\n                                                  \n                                                        \n                                                                        WebsocketService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPaymentMessages\n                        \n                    \n                \n            \n            \n                \ngetPaymentMessages()\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/services/payment.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaymentNotification\n                        \n                    \n                \n            \n            \n                \ngetPaymentNotification()\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/services/payment.service.ts:97\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getPaymentsByUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPaymentsByUser(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/services/payment.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaymentsMOCK\n                        \n                    \n                \n            \n            \n                \ngetPaymentsMOCK()\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/services/payment.service.ts:130\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     PaymentMessage[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaymentsObservable\n                        \n                    \n                \n            \n            \n                \ngetPaymentsObservable()\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/services/payment.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendPayment\n                        \n                    \n                \n            \n            \n                \nsendPayment(userId: string, payment: PaymentMessage)\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/services/payment.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payment\n                                            \n                                                            PaymentMessage\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribePaymentNotification\n                        \n                    \n                \n            \n            \n                \nsubscribePaymentNotification()\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/services/payment.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        account\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: 1,\n    name: 'Ovidiu',\n    surname: 'Teodor',\n    password: '123456',\n    email: 'ovi@xeridia.com',\n    cc: this.balance1,\n    dni: '12345678A',\n    createdAt: new Date()\n  }\n                    \n                \n                    \n                        \n                                Defined in frontend/src/services/payment.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        account2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: 2,\n    name: 'Rubén',\n    surname: 'BA',\n    password: '123456',\n    email: 'rbn@xeridia.com',\n    cc: this.balance2,\n    dni: '12345678A',\n    createdAt: new Date()\n  }\n                    \n                \n                    \n                        \n                                Defined in frontend/src/services/payment.service.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        balance1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Balance\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: 1,\n    balance: 2500,\n    createdAt: new Date()\n  }\n                    \n                \n                    \n                        \n                                Defined in frontend/src/services/payment.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        balance2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Balance\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: 2,\n    balance: 3500,\n    createdAt: new Date()\n  }\n                    \n                \n                    \n                        \n                                Defined in frontend/src/services/payment.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paymentHistory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PaymentMessage[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {sender: this.account, receiver: this.account2, amount: 100, state: 1, date: new Date()},\n    {sender: this.account, receiver: this.account2, amount: 100, state: 2, date: new Date()},\n    {sender: this.account2, receiver: this.account, amount: 100, state: 3, date: new Date()},\n    {sender: this.account2, receiver: this.account, amount: 100, state: 4, date: new Date()},\n\n  ]\n                    \n                \n                    \n                        \n                                Defined in frontend/src/services/payment.service.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        paymentNotification\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in frontend/src/services/payment.service.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        paymentsSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in frontend/src/services/payment.service.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        paymentSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in frontend/src/services/payment.service.ts:57\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { WebsocketService } from './websocket.service';\nimport { Subject, Observable } from 'rxjs';\nimport { Payment, PaymentMessage } from '../models/payment.model';\nimport { Balance, User } from '../models/account.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaymentService {\n\n  ////////////////////////////////////////////////////////////\n\n  private balance1: Balance = {\n    id: 1,\n    balance: 2500,\n    createdAt: new Date()\n  }\n\n  private balance2: Balance = {\n    id: 2,\n    balance: 3500,\n    createdAt: new Date()\n  }\n\n  private account: User = {\n    id: 1,\n    name: 'Ovidiu',\n    surname: 'Teodor',\n    password: '123456',\n    email: 'ovi@xeridia.com',\n    cc: this.balance1,\n    dni: '12345678A',\n    createdAt: new Date()\n  };\n  private account2: User = {\n    id: 2,\n    name: 'Rubén',\n    surname: 'BA',\n    password: '123456',\n    email: 'rbn@xeridia.com',\n    cc: this.balance2,\n    dni: '12345678A',\n    createdAt: new Date()\n  };\n\n  paymentHistory: PaymentMessage[] = [\n    {sender: this.account, receiver: this.account2, amount: 100, state: 1, date: new Date()},\n    {sender: this.account, receiver: this.account2, amount: 100, state: 2, date: new Date()},\n    {sender: this.account2, receiver: this.account, amount: 100, state: 3, date: new Date()},\n    {sender: this.account2, receiver: this.account, amount: 100, state: 4, date: new Date()},\n\n  ];\n  ////////////////////////////////////////////////////////////////\n\n  private paymentsSubject = new Subject();\n  private paymentSubject = new Subject();\n  private paymentNotification = new Subject();\n\n  constructor(private websocketService: WebsocketService) {}\n\n  public getPaymentsByUser(user: User): void {\n    console.log(\"Payment Service getPaymetsByUser\")\n    this.websocketService.sendMessage('/app/payment/user', user);\n\n    // Suscribirse al destino para recibir la respuesta\n    this.websocketService.subscribe(`/topic/payment/user`).subscribe((message) => {\n      console.log('Payments recibidos:', message);\n      this.paymentsSubject.next(message);\n    });\n  }\n\n  getPaymentsObservable(): Observable{\n    return this.paymentsSubject.asObservable();\n  }\n\n  sendPayment(userId: string, payment: PaymentMessage): void {\n    // Usa la ruta dinámica para enviar mensajes de pago\n    console.log('Mensaje de pago en service');\n    this.websocketService.sendMessage(`/app/payment`, payment);\n  }\n\n  getPaymentMessages(): Observable {\n    return this.paymentSubject.asObservable();\n  }\n\n  subscribePaymentNotification(): void{\n    console.log(\"Payment Service subscribePaymentNotification\")\n\n    // Suscribirse al destino para recibir la respuesta\n    this.websocketService.subscribe(`/topic/notification/payment`).subscribe((message) => {\n      console.log('PaymentNotificacion recibidos:', message);\n      this.paymentNotification.next(message);\n    });\n  }\n\n  getPaymentNotification(): Observable {\n    return this.paymentNotification.asObservable();\n  }\n  // joinRoom(userId: string): void {\n  //   this.websocketService.openConnection(userId).subscribe((message) => {\n  //     const messageContent = JSON.parse(message) as PaymentMessage;\n  //     console.log(\"Mensaje recibido en PaymentService: \", messageContent);\n  //     console.log(\"Se abrio la conexion: \");\n  //     // Emitir los datos de login recibidos\n  //     this.paymentSubject.next(messageContent);\n  \n  //     // Emitir notificación de inicio de sesión exitoso\n  //     this.paymentNotification.next(`Payment sucessfull from the user ${messageContent.sender.email}`);\n  //   });\n  // }\n\n  // Método para obtener todos los correos electrónicos\n  // getRecipientEmails(): string[] {\n  //   return this.accounts.map(account => account.email);\n  // }\n  \n\n  //maneja la respuesta del springboot\n  /*\n  handleResponse(): void {\n    this.websocketService.openConnection('userId').subscribe((message) => {\n      const paymentResponse = JSON.parse(message) as PaymentMessage;\n      this.paymentSubject.next(paymentResponse);\n      this.paymentNotification.next(`Payment processed for ${paymentResponse.receiver.name}`);\n    });\n\n  }*/\n\n  getPaymentsMOCK(): PaymentMessage[]{\n    return this.paymentHistory;\n  }\n\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionService.html":{"url":"injectables/SessionService.html","title":"injectable - SessionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SessionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            frontend/src/services/session.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                sessionIdKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                userKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearSession\n                            \n                            \n                                    Private\n                                ensureSessionIdExists\n                            \n                            \n                                    Private\n                                generateUUID\n                            \n                            \n                                getSessionId\n                            \n                            \n                                getUser\n                            \n                            \n                                saveUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in frontend/src/services/session.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearSession\n                        \n                    \n                \n            \n            \n                \nclearSession()\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/services/session.service.ts:61\n                        \n                    \n\n\n            \n                \n                        Limpia los datos de sesión.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ensureSessionIdExists\n                        \n                    \n                \n            \n            \n                \n                        \n                    ensureSessionIdExists()\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/services/session.service.ts:29\n                        \n                    \n\n\n            \n                \n                        Verifica si existe un ID de sesión y lo genera si no existe.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateUUID\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateUUID()\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/services/session.service.ts:18\n                        \n                    \n\n\n            \n                \n                        Genera un ID único (UUID)\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSessionId\n                        \n                    \n                \n            \n            \n                \ngetSessionId()\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/services/session.service.ts:38\n                        \n                    \n\n\n            \n                \n                        Obtiene el ID único de la sesión actual.\n\n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/services/session.service.ts:53\n                        \n                    \n\n\n            \n                \n                        Obtiene el usuario conectado.\n\n\n                        \n                            Returns :         User\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveUser\n                        \n                    \n                \n            \n            \n                \nsaveUser(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/services/session.service.ts:46\n                        \n                    \n\n\n            \n                \n                        Guarda el usuario conectado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto con información del usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        sessionIdKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'sessionId'\n                    \n                \n                    \n                        \n                                Defined in frontend/src/services/session.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        userKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'connectedUser'\n                    \n                \n                    \n                        \n                                Defined in frontend/src/services/session.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { User } from '../models/account.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SessionService {\n  private readonly sessionIdKey = 'sessionId';\n  private readonly userKey = 'connectedUser';\n\n  constructor() {\n    this.ensureSessionIdExists();\n  }\n\n  /**\n   * Genera un ID único (UUID)\n   */\n  private generateUUID(): string {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (char) => {\n      const random = (Math.random() * 16) | 0;\n      const value = char === 'x' ? random : (random & 0x3) | 0x8;\n      return value.toString(16);\n    });\n  }\n\n  /**\n   * Verifica si existe un ID de sesión y lo genera si no existe.\n   */\n  private ensureSessionIdExists(): void {\n    if (!sessionStorage.getItem(this.sessionIdKey)) {\n      sessionStorage.setItem(this.sessionIdKey, this.generateUUID());\n    }\n  }\n\n  /**\n   * Obtiene el ID único de la sesión actual.\n   */\n  getSessionId(): string | null{\n    return sessionStorage.getItem(this.sessionIdKey);\n  }\n\n  /**\n   * Guarda el usuario conectado.\n   * @param user Objeto con información del usuario\n   */\n  saveUser(user: User): void {\n    sessionStorage.setItem(this.userKey, JSON.stringify(user));\n  }\n\n  /**\n   * Obtiene el usuario conectado.\n   */\n  getUser(): User {\n    const userData = sessionStorage.getItem(this.userKey);\n    return userData ? JSON.parse(userData) : null;\n  }\n\n  /**\n   * Limpia los datos de sesión.\n   */\n  clearSession(): void {\n    sessionStorage.removeItem(this.sessionIdKey);\n    sessionStorage.removeItem(this.userKey);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State.html":{"url":"interfaces/State.html","title":"interface - State","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            frontend/src/models/payment.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            state\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        state:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { User } from \"./account.model\";\n\n// Crear `paymentData` asegurando que `sender` también sea del tipo `User`\nexport interface PaymentMessage {\n  sender: User; // El remitente del pago, de tipo User\n  receiver: User; // El destinatario del pago, de tipo User\n  amount: number; // Monto del pago\n  state: number; // Estado del pago, por ejemplo, 0 para pendiente, 1 para aprobado, etc.\n  date: Date; // Fecha del pago\n}\n\nexport interface Payment {\n  id: number,\n  sender: User; // El remitente del pago, de tipo User\n  receiver: User; // El destinatario del pago, de tipo User\n  amount: number; // Monto del pago\n  state: State; // Estado del pago, por ejemplo, 0 para pendiente, 1 para aprobado, etc.\n  date: Date; // Fecha del pago\n}\n\nexport interface State {\n  state: number,\n  description: string\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TokenStorageService.html":{"url":"injectables/TokenStorageService.html","title":"injectable - TokenStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TokenStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            frontend/src/services/token-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                roles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                generateUUID\n                            \n                            \n                                    Static\n                                getId\n                            \n                            \n                                    Static\n                                getToken\n                            \n                            \n                                    Public\n                                getUsername\n                            \n                            \n                                    Private\n                                isTokenValid\n                            \n                            \n                                    Static\n                                saveId\n                            \n                            \n                                    Public\n                                saveToken\n                            \n                            \n                                    Public\n                                saveUsername\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in frontend/src/services/token-storage.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        generateUUID\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateUUID()\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/services/token-storage.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        getId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getId()\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/services/token-storage.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        getToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    getToken()\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/services/token-storage.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsername()\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/services/token-storage.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isTokenValid\n                        \n                    \n                \n            \n            \n                \n                        \n                    isTokenValid(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/services/token-storage.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        saveId\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveId(token: number)\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/services/token-storage.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/services/token-storage.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/services/token-storage.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in frontend/src/services/token-storage.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nconst TOKEN_KEY = 'AuthToken';\nconst TOKEN_ID = 'IDToken';\nconst USERNAME_KEY = 'AuthUsername';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenStorageService {\n  private roles: Array = [];\n  constructor() { }\n\n  public saveToken(token: string) {\n    console.log('Attempting to save token:', token); // Log for debugging\n    if (this.isTokenValid(token)) {\n      window.sessionStorage.removeItem(TOKEN_KEY);\n      window.sessionStorage.setItem(TOKEN_KEY, token);\n      console.log('Token saved successfully.'); // Log for debugging\n    } else {\n      console.error('Invalid JWT token format. Token was not saved.');\n    }\n  }\n\n  public static generateUUID(): number {\n    return Number('xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, (char) => {\n      const random = (Math.random() * 16) | 0;\n      const value = char === 'x' ? random : (random & 0x3) | 0x8;\n      return value.toString();\n    }));\n  }\n\n  public static getToken(): string {\n    if (typeof window !== 'undefined' && typeof sessionStorage !== 'undefined') {\n      const token = sessionStorage.getItem(TOKEN_KEY) || '{}';\n      console.log('Retrieved Token:', token);  // Log para verificar el token\n      return token;\n    }\n    return '{}';  // Devuelve un valor por defecto si no se puede acceder a sessionStorage\n  }\n\n  public static saveId(token: number) {\n    console.log('Attempting to save token:', token); // Log for debugging\n    localStorage.setItem(TOKEN_ID, token.toString());\n    console.log('Token saved successfully.'); // Log for debugging\n\n  }\n\n  public static getId(): number {\n    const token = localStorage.getItem(TOKEN_ID);\n    return token ? Number(token) : -1;\n  }\n\n  public saveUsername(username: string) {\n    window.sessionStorage.removeItem(USERNAME_KEY);\n    window.sessionStorage.setItem(USERNAME_KEY, username);\n  }\n\n  public getUsername(): string {\n    return sessionStorage.getItem(USERNAME_KEY) || '{}';\n  }\n\n  private isTokenValid(token: string): boolean {\n    if (!token) {\n      return false;\n    }\n    const periodCount = (token.match(/\\./g) || []).length;\n    return periodCount === 2;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            frontend/src/models/account.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cc\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            dni\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cc:         Balance\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Balance\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dni\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dni:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id: number;\n  name: string;\n  surname: string; \n  password: string;\n  email: string;\n  cc: Balance; \n  dni: string;\n  createdAt: Date; \n}\n\nexport interface Balance {\n  id: number;\n  balance: number;\n  createdAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WebsocketService.html":{"url":"injectables/WebsocketService.html","title":"injectable - WebsocketService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WebsocketService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            frontend/src/services/websocket.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                connectionSubject\n                            \n                            \n                                    Private\n                                isConnected\n                            \n                            \n                                    Private\n                                socketClient\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                            \n                                    Private\n                                wssubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                    Private\n                                configureSocketClient\n                            \n                            \n                                    Private\n                                initSocket\n                            \n                            \n                                    Public\n                                onConnectionReady\n                            \n                            \n                                    Public\n                                openConnection\n                            \n                            \n                                    Public\n                                sendMessage\n                            \n                            \n                                    Public\n                                subscribe\n                            \n                            \n                                    Public\n                                unsubscribe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in frontend/src/services/websocket.service.ts:18\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/services/websocket.service.ts:175\n                        \n                    \n\n\n            \n                \n                        Closes websocket service\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        configureSocketClient\n                        \n                    \n                \n            \n            \n                \n                        \n                    configureSocketClient(client: Client)\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/services/websocket.service.ts:118\n                        \n                    \n\n\n            \n                \n                        Configures socket client\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                client\n                                            \n                                                        Client\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Client\n\n                        \n                            \n                                cliente configurado\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initSocket\n                        \n                    \n                \n            \n            \n                \n                        \n                    initSocket(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/services/websocket.service.ts:127\n                        \n                    \n\n\n            \n                \n                        Inits socket\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onConnectionReady\n                        \n                    \n                \n            \n            \n                \n                        \n                    onConnectionReady()\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/services/websocket.service.ts:186\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        openConnection\n                        \n                    \n                \n            \n            \n                \n                        \n                    openConnection(sesionId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/services/websocket.service.ts:41\n                        \n                    \n\n\n            \n                \n                        Opens connection\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sesionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                connection observable que devolverá la respuesta una vez finalizada la espera\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sendMessage\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendMessage(destination: string, message: any)\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/services/websocket.service.ts:163\n                        \n                    \n\n\n            \n                \n                        Sends a message to the server\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                destination\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    destino al que se envía el mensaje\n\n                                            \n                                        \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    mensaje que se enviará\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        subscribe\n                        \n                    \n                \n            \n            \n                \n                        \n                    subscribe(destination: string)\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/services/websocket.service.ts:85\n                        \n                    \n\n\n            \n                \n                        Suscribirse a un canal\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                destination\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Ruta del canal (topic o user queue)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Subject\n\n                        \n                            \n                                Subject para recibir mensajes\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        unsubscribe\n                        \n                    \n                \n            \n            \n                \n                        \n                    unsubscribe(destination: string)\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/services/websocket.service.ts:104\n                        \n                    \n\n\n            \n                \n                        Desuscribirse de un canal\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                destination\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Ruta del canal\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        connectionSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in frontend/src/services/websocket.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isConnected\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in frontend/src/services/websocket.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        socketClient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Client | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in frontend/src/services/websocket.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in frontend/src/services/websocket.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        wssubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in frontend/src/services/websocket.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport SockJS from 'sockjs-client';\nimport { Client, Stomp, StompSubscription } from '@stomp/stompjs';  // Actualización para usar Client de stompjs\nimport { TokenStorageService } from './token-storage.service';\n//import { PaymentMessage } from '../models/payment.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebsocketService {\n\n  // private static instance: WebsocketService | null = null;\n  private socketClient: Client | null = null;  // Usa Client de Stomp.js\n  private wssubscription: any;\n  private subscriptions: Map = new Map();\n  private isConnected = false; // Estado de conexión\n  private connectionSubject = new Subject();\n\n  constructor(){\n    console.log(\"Web Socket Constructor\")\n    this.openConnection(\"1\");\n  }\n\n  // public static getInstance(): WebsocketService {\n  //   if (!WebsocketService.instance) {\n  //     WebsocketService.instance = new WebsocketService();\n  //   }\n  //   return WebsocketService.instance;\n  // }\n\n  // public getIsConnected(){\n  //   return this.isConnected;\n  // }\n\n  /**\n   * Opens connection\n   * @param idOperacion identificador al que nos suscribiremos\n   * @returns connection observable que devolverá la respuesta una vez finalizada la espera\n   */\n  public openConnection(sesionId: string): void {\n    // this.connectionSubject.next(false);\n    // this.close();  // Cierra cualquier conexión existente\n  \n    // Inicializa el WebSocket y espera a que la conexión esté lista antes de suscribirse\n    if (!this.isConnected) {\n\n      this.initSocket('http://localhost:8080/socket');\n      // this.isConnected = true;\n      // this.connectionSubject.next(this.isConnected);\n      // this.connectionSubject.next(true);\n      console.log('Conexión WebSocket establecida.');\n    } else {\n      // this.connectionSubject.next(false);\n      console.log('Ya existe una conexión WebSocket activa.');\n    }\n\n    // const receivedMessage: Subject = new Subject();\n  \n    // if (this.socketClient) {\n    //   // Espera a que la conexión esté lista antes de intentar suscribirse\n    //   this.socketClient.onConnect = (frame) => {\n    //     console.log(\"Connected: \" + frame);\n\n    //   };\n\n    //   this.socketClient.onStompError = (frame) => {\n    //     console.error('Broker reported error: ' + frame.headers['message']);\n    //     console.error('Additional details: ' + frame.body);\n    // };\n  \n    //   this.socketClient.activate();  // Activa el cliente STOMP y espera el onConnect\n    // } else {\n    //   console.error(\"socketClient no ha sido inicializado correctamente.\");\n    // }\n  \n    // return receivedMessage;\n  }\n  \n  /**\n   * Suscribirse a un canal\n   * @param destination Ruta del canal (topic o user queue)\n   * @returns Subject para recibir mensajes\n   */\n  public subscribe(destination: string): Subject {\n    const subject = new Subject();\n\n    if (this.socketClient && this.socketClient.connected) {\n      const subscription = this.socketClient.subscribe( `${destination}/${TokenStorageService.getId()}`, (message) => {\n        subject.next(JSON.parse(message.body));\n      });\n      this.subscriptions.set(destination, subscription);\n    } else {\n      console.error('WebSocket no está conectado');\n    }\n\n    return subject;\n  }\n\n  /**\n   * Desuscribirse de un canal\n   * @param destination Ruta del canal\n   */\n  public unsubscribe(destination: string): void {\n    const subscription = this.subscriptions.get(destination);\n    if (subscription) {\n      subscription.unsubscribe();\n      this.subscriptions.delete(destination);\n    }\n  }\n  \n\n  /**\n   * Configures socket client\n   * @param client \n   * @returns cliente configurado\n   */\n  private configureSocketClient(client: Client): Client {\n    client.debug = (msg) => console.log(new Date(), msg);  // Función de debug\n    return client;\n  }\n\n  /**\n   * Inits socket\n   * @param url \n   */\n  private initSocket(url: string): void {  \n    console.log(\"Initialize WebSocket Connection\");\n  \n    // let ws = new SockJS(url);\n    // this.socketClient = Stomp.client(url);\n    this.socketClient = new Client({\n      webSocketFactory: () => new SockJS(url),\n      reconnectDelay: 5000,  // Reintentos automáticos\n      heartbeatIncoming: 10000,\n      heartbeatOutgoing: 10000,\n      onConnect: (frame) => {\n        console.log('Conexión establecida:', frame);\n        this.isConnected = true;  // Cambia el estado de conexión\n        this.connectionSubject.next(this.isConnected);\n      },\n      onStompError: (frame) => {\n        console.error('Error en STOMP:', frame.headers['message']);\n        console.error('Detalles:', frame.body);\n        this.isConnected = false; // Marca la conexión como no activa\n        this.connectionSubject.next(this.isConnected);\n      },\n      onWebSocketClose: () => {\n        console.warn('WebSocket cerrado.');\n        this.isConnected = false;\n        this.connectionSubject.next(this.isConnected);\n      }\n    });\n      this.socketClient.activate();\n  }\n  \n\n  /**\n   * Sends a message to the server\n   * @param destination destino al que se envía el mensaje\n   * @param message mensaje que se enviará\n   */\n  public sendMessage(destination: string, message: any): void {\n    if (this.socketClient && this.socketClient.active) {\n      console.log(`Enviando mensaje a ${destination}/${TokenStorageService.getId()}`)\n      this.socketClient.publish({ destination:`${destination}/${TokenStorageService.getId()}`, body: JSON.stringify(message) });\n    } else {\n      console.error('No hay conexión STOMP activa.');\n    }\n  }\n\n  /**\n   * Closes websocket service\n   */\n  close(): void {\n    if (this.socketClient !== null) {\n      this.socketClient.deactivate();  // Usa deactivate en lugar de disconnect\n      this.socketClient = null;\n      this.subscriptions.clear();\n      this.isConnected = false;\n      this.connectionSubject.next(this.isConnected);\n    }\n    console.log(\"Websococket disconnected\");\n  }\n\n  public onConnectionReady(): Observable {\n    return this.connectionSubject.asObservable();\n  }\n\n  // public getConnection(): Client | null{\n  //   return this.socketClient;\n  // }\n\n  // /**\n  //  * Subscribes to a specific channel\n  //  * @param channel canal al que suscribirse\n  //  * @param subject Subject que recibirá los mensajes del canal\n  //  */\n  // public subscribeToChannel(channel: string, subject: Subject): void {\n  //   if (this.socketClient && this.socketClient.connected) {\n  //     this.socketClient.subscribe(channel, (message: any) => {\n  //       try {\n  //         const parsedMessage = JSON.parse(message.body);\n\n  //         // Comprueba si es un solo usuario o una lista\n  //         if (Array.isArray(parsedMessage)) {\n  //             console.log(\"Lista recibida:\", parsedMessage);\n  //             subject.next(parsedMessage);  // Emitir lista de usuarios\n  //         } else {\n  //             console.log(\"Individual recibido:\", parsedMessage);\n  //             subject.next(parsedMessage);  // Emitir usuario individual\n  //         }\n  //       } catch (error) {\n  //           console.error(\"Error procesando mensaje en Account Channel:\", error);\n  //       }\n  //     });\n  //   } else {\n  //     console.error('No hay conexión STOMP activa, reintentando la suscripción...');\n  //       // Lógica de reintento, por ejemplo, puedes esperar un tiempo y reintentar:\n  //       setTimeout(() => {\n  //           this.subscribeToLoginChannel(channel, subject);\n  //       }, 1000); // Reintenta después de 1 segundo\n  //   }\n  // }\n\n  // /**\n  //  * Subscribes to a specific channel\n  //  * @param channel canal al que suscribirse\n  //  * @param subject Subject que recibirá los mensajes del canal\n  //  */\n  // public subscribeToLoginChannel(channel: string, subject: Subject): void {\n  //   if (this.socketClient && this.socketClient.connected) {\n  //     this.socketClient.subscribe(channel, (message: any) => {\n  //       console.log(\"Notificación personalizada recibida: \", message.body);\n  //       subject.next(message.body);\n  //     });\n  //   } else {\n  //     console.error('No hay conexión STOMP activa, reintentando la suscripción...');\n  //       // Lógica de reintento, por ejemplo, puedes esperar un tiempo y reintentar:\n  //       setTimeout(() => {\n  //           this.subscribeToLoginChannel(channel, subject);\n  //       }, 1000); // Reintenta después de 1 segundo\n  //   }\n  // }\n  //enviar los datos al springboot\n  // public sendPaymentMessage(destination: string, message: any): void {\n  //   if (this.socketClient && this.socketClient.active) {\n  //     console.log('Mensaje de pago entro bien en websocket.');\n  //     this.socketClient.publish({ destination, body: JSON.stringify(message) });\n  //   } else {\n  //     console.error('No hay conexión STOMP activa para enviar el mensaje de pago.');\n  //   }\n  // }\n  \n //para recibir los datos del springboot en el canal\n  // public subscribeToPaymentChannel(channel: string, subject: Subject): void {\n  //   if (this.socketClient && this.socketClient.connected) {\n  //     this.socketClient.subscribe(channel, (message: any) => {\n  //       console.log(\"Mensaje de pago recibido: \", message.body);\n  //       subject.next(message.body);\n  //     });\n  //   } else {\n  //     console.error('No hay conexión STOMP activa, no se puede suscribir al canal de pagos.');\n  //     setTimeout(() => {\n  //       this.subscribeToPaymentChannel(channel, subject);\n  //   }, 1000); // Reintenta después de 1 segundo\n  //   }\n  // }\n  \n  // public subscribeToAccountChannel(channel: string, subject: Subject): void {\n  //   if (this.socketClient && this.socketClient.connected) {\n  //     this.socketClient.subscribe(channel, (message: any) => {\n  //       console.log(\"Mensaje de account recibido: \", message.body);\n  //       subject.next(message.body);\n  //     });\n  //   } else {\n  //     console.error('No hay conexión STOMP activa, no se puede suscribir al canal de pagos.');\n  //     setTimeout(() => {\n  //       this.subscribeToAccountChannel(channel, subject);\n  //   }, 1000); // Reintenta después de 1 segundo\n  //   }\n  // }\n  \n  \n  \n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        frontend/server.ts\n            \n            function\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        frontend/server.ts\n            \n            function\n            run\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                frontend/src/account/account.component.ts\n            \n            component\n            AccountComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                frontend/src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        frontend/src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        frontend/src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        frontend/src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                frontend/src/app/dev/dev.component.ts\n            \n            component\n            DevComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                frontend/src/app/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                frontend/src/app/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                frontend/src/app/notification/notification.component.ts\n            \n            component\n            NotificationComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                frontend/src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        frontend/src/auth/auth.service.ts\n            \n            variable\n            httpOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                frontend/src/auth/jwt-response.ts\n            \n            class\n            JwtResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                frontend/src/auth/login-info.ts\n            \n            class\n            LoginInfo\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                frontend/src/deposit/deposit.component.ts\n            \n            component\n            DepositComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                frontend/src/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                        frontend/src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                frontend/src/models/account.model.ts\n            \n            interface\n            Balance\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                frontend/src/models/account.model.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                frontend/src/models/login.model.ts\n            \n            interface\n            LogMessage\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                frontend/src/models/payment.model.ts\n            \n            interface\n            Payment\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                frontend/src/models/payment.model.ts\n            \n            interface\n            PaymentMessage\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                frontend/src/models/payment.model.ts\n            \n            interface\n            State\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                frontend/src/payment/payment.component.ts\n            \n            component\n            PaymentComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                frontend/src/services/account.service.ts\n            \n            injectable\n            AccountService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                frontend/src/services/deposit.service.ts\n            \n            injectable\n            DepositService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                frontend/src/services/payment.service.ts\n            \n            injectable\n            PaymentService\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                frontend/src/services/session.service.ts\n            \n            injectable\n            SessionService\n            \n                60 %\n                (6/10)\n            \n        \n        \n            \n                \n                frontend/src/services/token-storage.service.ts\n            \n            injectable\n            TokenStorageService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                        frontend/src/services/token-storage.service.ts\n            \n            variable\n            TOKEN_ID\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        frontend/src/services/token-storage.service.ts\n            \n            variable\n            TOKEN_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        frontend/src/services/token-storage.service.ts\n            \n            variable\n            USERNAME_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                frontend/src/services/websocket.service.ts\n            \n            injectable\n            WebsocketService\n            \n                46 %\n                (7/15)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            app   (frontend/.../server.ts)\n                        \n                        \n                            run   (frontend/.../server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    frontend/server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n            \n                \napp()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     express.Express\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAsynchronous Payment Simulation\nThis project is an Asynchronous Payment Simulator designed to handle large-scale payment processing efficiently. The architecture leverages modern web technologies for real-time communication and distributed messaging, ensuring high scalability and resilience. The system is built with:\nAngular for the frontend interface, allowing users to interact with the payment simulator.\nSpring Boot for backend services, responsible for managing the payment logic and handling asynchronous processes.\nWebSockets for real-time communication between the frontend and backend.\nRabbitMQ for asynchronous messaging, ensuring payment operations are processed efficiently in the background.\nMySQL for relational data storage, maintaining payment transactions and user data.\nElasticsearch for fast search and data indexing.\nTechnologies:\nFrontend: Angular\nBackend: Spring Boot (Java)\nMessaging Queue: RabbitMQ\nDatabase: MySQL\nSearch Engine: Elasticsearch\nReal-Time Communication: WebSockets\nAngular Frontend:\nThe user interacts with the system through the Angular interface. Payments and statuses are displayed in real time.\nAngular communicates with Spring Boot through WebSockets, allowing instant updates on payment statuses.\nSpring Boot Backend:\nThe backend service manages the business logic, handling payment requests from the frontend via WebSockets.\nIt communicates with RabbitMQ to asynchronously process payments.\nIt stores and retrieves transactional data from MySQL, and indexes/searches through Elasticsearch for fast data retrieval.\nRabbitMQ:\nRabbitMQ handles the queuing of payment operations, ensuring they are processed asynchronously without blocking the system.\nThis allows the system to handle multiple payment requests simultaneously, improving throughput.\nMySQL & Elasticsearch:\nMySQL is used for persisting payment transactions, ensuring data integrity and consistency.\nElasticsearch is employed to index payments and provide efficient search capabilities across large datasets.\nFeatures:\nAsynchronous Payment Processing: Payments are processed in the background, ensuring the system remains responsive during high-volume transactions.\nReal-Time Updates: WebSockets provide immediate feedback to the user on the status of their payments.\nScalable Architecture: With RabbitMQ handling asynchronous messaging, the system can easily scale to manage large numbers of concurrent payment requests.\nSearch and Indexing: Elasticsearch allows for fast retrieval of transaction data, improving the user experience when querying payment histories.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AccountModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DepositModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AccountModule\n\n\n\ncluster_AccountModule_imports\n\n\n\ncluster_AccountModule_exports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_DepositModule\n\n\n\ncluster_MaterialModule\n\n\n\ncluster_MaterialModule_imports\n\n\n\ncluster_MaterialModule_exports\n\n\n\n\nAccountComponent\n\nAccountComponent\n\n\n\nAccountModule\n\nAccountModule\n\nAccountModule -->\n\nAccountComponent->AccountModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccountComponent->AppModule\n\n\n\n\n\nDepositModule\n\nDepositModule\n\nDepositModule -->\n\nAccountComponent->DepositModule\n\n\n\n\n\nAccountComponent \n\nAccountComponent \n\nAccountComponent  -->\n\nAccountModule->AccountComponent \n\n\n\nAppModule -->\n\nAccountModule->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nDepositComponent\n\nDepositComponent\n\nAppModule -->\n\nDepositComponent->AppModule\n\n\n\nDepositModule -->\n\nDepositComponent->DepositModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nPaymentComponent\n\nPaymentComponent\n\nAppModule -->\n\nPaymentComponent->AppModule\n\n\n\n\n\nAccountService\n\nAccountService\n\nAppModule -->\n\nAccountService->AppModule\n\n\n\n\n\nSessionService\n\nSessionService\n\nAppModule -->\n\nSessionService->AppModule\n\n\n\n\n\nWebsocketService\n\nWebsocketService\n\nAppModule -->\n\nWebsocketService->AppModule\n\n\n\n\n\nMatOption\n\nMatOption\n\n\n\nMaterialModule\n\nMaterialModule\n\nMaterialModule -->\n\nMatOption->MaterialModule\n\n\n\n\n\nMatSelect\n\nMatSelect\n\nMaterialModule -->\n\nMatSelect->MaterialModule\n\n\n\n\n\nMatOption \n\nMatOption \n\nMatOption  -->\n\nMaterialModule->MatOption \n\n\n\n\n\nMatSelect \n\nMatSelect \n\nMatSelect  -->\n\nMaterialModule->MatSelect \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (frontend/.../app.config.ts)\n                        \n                        \n                            bootstrap   (frontend/.../main.server.ts)\n                        \n                        \n                            config   (frontend/.../app.config.server.ts)\n                        \n                        \n                            httpOptions   (frontend/.../auth.service.ts)\n                        \n                        \n                            serverConfig   (frontend/.../app.config.server.ts)\n                        \n                        \n                            TOKEN_ID   (frontend/.../token-storage.service.ts)\n                        \n                        \n                            TOKEN_KEY   (frontend/.../token-storage.service.ts)\n                        \n                        \n                            USERNAME_KEY   (frontend/.../token-storage.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    frontend/src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes), provideClientHydration(), provideHttpClient(), provideAnimationsAsync()]\n}\n                    \n                \n\n\n        \n    \n\n    frontend/src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(AppComponent, config)\n                    \n                \n\n\n        \n    \n\n    frontend/src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering()\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    frontend/src/auth/auth.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n}\n                    \n                \n\n\n        \n    \n\n    frontend/src/services/token-storage.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TOKEN_ID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'IDToken'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TOKEN_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AuthToken'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USERNAME_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AuthUsername'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
